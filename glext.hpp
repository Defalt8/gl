#pragma once

#include "gl.hpp"
#include "glfl.hpp"

namespace axl {
namespace glfl {

AXLGLFLCONSTMODIFIER GLconstant GL_GLEXT_VERSION = 20201119;

namespace GL1 {

// GL_VERSION_1_2
AXLGLFLAPI bool GL_VERSION_1_2;
AXLGLFLCONSTMODIFIER GLconstant GL_UNSIGNED_BYTE_3_3_2 = 0x8032;
AXLGLFLCONSTMODIFIER GLconstant GL_UNSIGNED_SHORT_4_4_4_4 = 0x8033;
AXLGLFLCONSTMODIFIER GLconstant GL_UNSIGNED_SHORT_5_5_5_1 = 0x8034;
AXLGLFLCONSTMODIFIER GLconstant GL_UNSIGNED_INT_8_8_8_8 = 0x8035;
AXLGLFLCONSTMODIFIER GLconstant GL_UNSIGNED_INT_10_10_10_2 = 0x8036;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_BINDING_3D = 0x806A;
AXLGLFLCONSTMODIFIER GLconstant GL_PACK_SKIP_IMAGES = 0x806B;
AXLGLFLCONSTMODIFIER GLconstant GL_PACK_IMAGE_HEIGHT = 0x806C;
AXLGLFLCONSTMODIFIER GLconstant GL_UNPACK_SKIP_IMAGES = 0x806D;
AXLGLFLCONSTMODIFIER GLconstant GL_UNPACK_IMAGE_HEIGHT = 0x806E;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_3D = 0x806F;
AXLGLFLCONSTMODIFIER GLconstant GL_PROXY_TEXTURE_3D = 0x8070;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_DEPTH = 0x8071;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_WRAP_R = 0x8072;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_3D_TEXTURE_SIZE = 0x8073;
AXLGLFLCONSTMODIFIER GLconstant GL_UNSIGNED_BYTE_2_3_3_REV = 0x8362;
AXLGLFLCONSTMODIFIER GLconstant GL_UNSIGNED_SHORT_5_6_5 = 0x8363;
AXLGLFLCONSTMODIFIER GLconstant GL_UNSIGNED_SHORT_5_6_5_REV = 0x8364;
AXLGLFLCONSTMODIFIER GLconstant GL_UNSIGNED_SHORT_4_4_4_4_REV = 0x8365;
AXLGLFLCONSTMODIFIER GLconstant GL_UNSIGNED_SHORT_1_5_5_5_REV = 0x8366;
AXLGLFLCONSTMODIFIER GLconstant GL_UNSIGNED_INT_8_8_8_8_REV = 0x8367;
AXLGLFLCONSTMODIFIER GLconstant GL_UNSIGNED_INT_2_10_10_10_REV = 0x8368;
AXLGLFLCONSTMODIFIER GLconstant GL_BGR = 0x80E0;
AXLGLFLCONSTMODIFIER GLconstant GL_BGRA = 0x80E1;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_ELEMENTS_VERTICES = 0x80E8;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_ELEMENTS_INDICES = 0x80E9;
AXLGLFLCONSTMODIFIER GLconstant GL_CLAMP_TO_EDGE = 0x812F;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_MIN_LOD = 0x813A;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_MAX_LOD = 0x813B;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_BASE_LEVEL = 0x813C;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_MAX_LEVEL = 0x813D;
AXLGLFLCONSTMODIFIER GLconstant GL_SMOOTH_POINT_SIZE_RANGE = 0x0B12;
AXLGLFLCONSTMODIFIER GLconstant GL_SMOOTH_POINT_SIZE_GRANULARITY = 0x0B13;
AXLGLFLCONSTMODIFIER GLconstant GL_SMOOTH_LINE_WIDTH_RANGE = 0x0B22;
AXLGLFLCONSTMODIFIER GLconstant GL_SMOOTH_LINE_WIDTH_GRANULARITY = 0x0B23;
AXLGLFLCONSTMODIFIER GLconstant GL_ALIASED_LINE_WIDTH_RANGE = 0x846E;
AXLGLFLCONSTMODIFIER GLconstant GL_RESCALE_NORMAL = 0x803A;
AXLGLFLCONSTMODIFIER GLconstant GL_LIGHT_MODEL_COLOR_CONTROL = 0x81F8;
AXLGLFLCONSTMODIFIER GLconstant GL_SINGLE_COLOR = 0x81F9;
AXLGLFLCONSTMODIFIER GLconstant GL_SEPARATE_SPECULAR_COLOR = 0x81FA;
AXLGLFLCONSTMODIFIER GLconstant GL_ALIASED_POINT_SIZE_RANGE = 0x846D;

typedef void (APIENTRYP PFNGLDRAWRANGEELEMENTSPROC) (GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void *indices);
typedef void (APIENTRYP PFNGLTEXIMAGE3DPROC) (GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const void *pixels);
typedef void (APIENTRYP PFNGLTEXSUBIMAGE3DPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void *pixels);
typedef void (APIENTRYP PFNGLCOPYTEXSUBIMAGE3DPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);
// GL_VERSION_1_2

// GL_VERSION_1_3
AXLGLFLAPI bool GL_VERSION_1_3;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE0 = 0x84C0;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE1 = 0x84C1;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE2 = 0x84C2;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE3 = 0x84C3;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE4 = 0x84C4;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE5 = 0x84C5;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE6 = 0x84C6;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE7 = 0x84C7;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE8 = 0x84C8;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE9 = 0x84C9;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE10 = 0x84CA;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE11 = 0x84CB;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE12 = 0x84CC;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE13 = 0x84CD;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE14 = 0x84CE;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE15 = 0x84CF;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE16 = 0x84D0;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE17 = 0x84D1;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE18 = 0x84D2;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE19 = 0x84D3;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE20 = 0x84D4;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE21 = 0x84D5;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE22 = 0x84D6;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE23 = 0x84D7;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE24 = 0x84D8;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE25 = 0x84D9;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE26 = 0x84DA;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE27 = 0x84DB;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE28 = 0x84DC;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE29 = 0x84DD;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE30 = 0x84DE;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE31 = 0x84DF;
AXLGLFLCONSTMODIFIER GLconstant GL_ACTIVE_TEXTURE = 0x84E0;
AXLGLFLCONSTMODIFIER GLconstant GL_MULTISAMPLE = 0x809D;
AXLGLFLCONSTMODIFIER GLconstant GL_SAMPLE_ALPHA_TO_COVERAGE = 0x809E;
AXLGLFLCONSTMODIFIER GLconstant GL_SAMPLE_ALPHA_TO_ONE = 0x809F;
AXLGLFLCONSTMODIFIER GLconstant GL_SAMPLE_COVERAGE = 0x80A0;
AXLGLFLCONSTMODIFIER GLconstant GL_SAMPLE_BUFFERS = 0x80A8;
AXLGLFLCONSTMODIFIER GLconstant GL_SAMPLES = 0x80A9;
AXLGLFLCONSTMODIFIER GLconstant GL_SAMPLE_COVERAGE_VALUE = 0x80AA;
AXLGLFLCONSTMODIFIER GLconstant GL_SAMPLE_COVERAGE_INVERT = 0x80AB;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_CUBE_MAP = 0x8513;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_BINDING_CUBE_MAP = 0x8514;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_CUBE_MAP_POSITIVE_X = 0x8515;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_CUBE_MAP_NEGATIVE_X = 0x8516;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_CUBE_MAP_POSITIVE_Y = 0x8517;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_CUBE_MAP_NEGATIVE_Y = 0x8518;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_CUBE_MAP_POSITIVE_Z = 0x8519;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_CUBE_MAP_NEGATIVE_Z = 0x851A;
AXLGLFLCONSTMODIFIER GLconstant GL_PROXY_TEXTURE_CUBE_MAP = 0x851B;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_CUBE_MAP_TEXTURE_SIZE = 0x851C;
AXLGLFLCONSTMODIFIER GLconstant GL_COMPRESSED_RGB = 0x84ED;
AXLGLFLCONSTMODIFIER GLconstant GL_COMPRESSED_RGBA = 0x84EE;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_COMPRESSION_HINT = 0x84EF;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_COMPRESSED_IMAGE_SIZE = 0x86A0;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_COMPRESSED = 0x86A1;
AXLGLFLCONSTMODIFIER GLconstant GL_NUM_COMPRESSED_TEXTURE_FORMATS = 0x86A2;
AXLGLFLCONSTMODIFIER GLconstant GL_COMPRESSED_TEXTURE_FORMATS = 0x86A3;
AXLGLFLCONSTMODIFIER GLconstant GL_CLAMP_TO_BORDER = 0x812D;
AXLGLFLCONSTMODIFIER GLconstant GL_CLIENT_ACTIVE_TEXTURE = 0x84E1;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_TEXTURE_UNITS = 0x84E2;
AXLGLFLCONSTMODIFIER GLconstant GL_TRANSPOSE_MODELVIEW_MATRIX = 0x84E3;
AXLGLFLCONSTMODIFIER GLconstant GL_TRANSPOSE_PROJECTION_MATRIX = 0x84E4;
AXLGLFLCONSTMODIFIER GLconstant GL_TRANSPOSE_TEXTURE_MATRIX = 0x84E5;
AXLGLFLCONSTMODIFIER GLconstant GL_TRANSPOSE_COLOR_MATRIX = 0x84E6;
AXLGLFLCONSTMODIFIER GLconstant GL_MULTISAMPLE_BIT = 0x200000;00
AXLGLFLCONSTMODIFIER GLconstant GL_NORMAL_MAP = 0x8511;
AXLGLFLCONSTMODIFIER GLconstant GL_REFLECTION_MAP = 0x8512;
AXLGLFLCONSTMODIFIER GLconstant GL_COMPRESSED_ALPHA = 0x84E9;
AXLGLFLCONSTMODIFIER GLconstant GL_COMPRESSED_LUMINANCE = 0x84EA;
AXLGLFLCONSTMODIFIER GLconstant GL_COMPRESSED_LUMINANCE_ALPHA = 0x84EB;
AXLGLFLCONSTMODIFIER GLconstant GL_COMPRESSED_INTENSITY = 0x84EC;
AXLGLFLCONSTMODIFIER GLconstant GL_COMBINE = 0x8570;
AXLGLFLCONSTMODIFIER GLconstant GL_COMBINE_RGB = 0x8571;
AXLGLFLCONSTMODIFIER GLconstant GL_COMBINE_ALPHA = 0x8572;
AXLGLFLCONSTMODIFIER GLconstant GL_SOURCE0_RGB = 0x8580;
AXLGLFLCONSTMODIFIER GLconstant GL_SOURCE1_RGB = 0x8581;
AXLGLFLCONSTMODIFIER GLconstant GL_SOURCE2_RGB = 0x8582;
AXLGLFLCONSTMODIFIER GLconstant GL_SOURCE0_ALPHA = 0x8588;
AXLGLFLCONSTMODIFIER GLconstant GL_SOURCE1_ALPHA = 0x8589;
AXLGLFLCONSTMODIFIER GLconstant GL_SOURCE2_ALPHA = 0x858A;
AXLGLFLCONSTMODIFIER GLconstant GL_OPERAND0_RGB = 0x8590;
AXLGLFLCONSTMODIFIER GLconstant GL_OPERAND1_RGB = 0x8591;
AXLGLFLCONSTMODIFIER GLconstant GL_OPERAND2_RGB = 0x8592;
AXLGLFLCONSTMODIFIER GLconstant GL_OPERAND0_ALPHA = 0x8598;
AXLGLFLCONSTMODIFIER GLconstant GL_OPERAND1_ALPHA = 0x8599;
AXLGLFLCONSTMODIFIER GLconstant GL_OPERAND2_ALPHA = 0x859A;
AXLGLFLCONSTMODIFIER GLconstant GL_RGB_SCALE = 0x8573;
AXLGLFLCONSTMODIFIER GLconstant GL_ADD_SIGNED = 0x8574;
AXLGLFLCONSTMODIFIER GLconstant GL_INTERPOLATE = 0x8575;
AXLGLFLCONSTMODIFIER GLconstant GL_SUBTRACT = 0x84E7;
AXLGLFLCONSTMODIFIER GLconstant GL_CONSTANT = 0x8576;
AXLGLFLCONSTMODIFIER GLconstant GL_PRIMARY_COLOR = 0x8577;
AXLGLFLCONSTMODIFIER GLconstant GL_PREVIOUS = 0x8578;
AXLGLFLCONSTMODIFIER GLconstant GL_DOT3_RGB = 0x86AE;
AXLGLFLCONSTMODIFIER GLconstant GL_DOT3_RGBA = 0x86AF;
typedef void (APIENTRYP PFNGLACTIVETEXTUREPROC) (GLenum texture);
typedef void (APIENTRYP PFNGLSAMPLECOVERAGEPROC) (GLfloat value, GLboolean invert);
typedef void (APIENTRYP PFNGLCOMPRESSEDTEXIMAGE3DPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const void *data);
typedef void (APIENTRYP PFNGLCOMPRESSEDTEXIMAGE2DPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const void *data);
typedef void (APIENTRYP PFNGLCOMPRESSEDTEXIMAGE1DPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const void *data);
typedef void (APIENTRYP PFNGLCOMPRESSEDTEXSUBIMAGE3DPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void *data);
typedef void (APIENTRYP PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void *data);
typedef void (APIENTRYP PFNGLCOMPRESSEDTEXSUBIMAGE1DPROC) (GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void *data);
typedef void (APIENTRYP PFNGLGETCOMPRESSEDTEXIMAGEPROC) (GLenum target, GLint level, void *img);
typedef void (APIENTRYP PFNGLCLIENTACTIVETEXTUREPROC) (GLenum texture);
typedef void (APIENTRYP PFNGLMULTITEXCOORD1DPROC) (GLenum target, GLdouble s);
typedef void (APIENTRYP PFNGLMULTITEXCOORD1DVPROC) (GLenum target, const GLdouble *v);
typedef void (APIENTRYP PFNGLMULTITEXCOORD1FPROC) (GLenum target, GLfloat s);
typedef void (APIENTRYP PFNGLMULTITEXCOORD1FVPROC) (GLenum target, const GLfloat *v);
typedef void (APIENTRYP PFNGLMULTITEXCOORD1IPROC) (GLenum target, GLint s);
typedef void (APIENTRYP PFNGLMULTITEXCOORD1IVPROC) (GLenum target, const GLint *v);
typedef void (APIENTRYP PFNGLMULTITEXCOORD1SPROC) (GLenum target, GLshort s);
typedef void (APIENTRYP PFNGLMULTITEXCOORD1SVPROC) (GLenum target, const GLshort *v);
typedef void (APIENTRYP PFNGLMULTITEXCOORD2DPROC) (GLenum target, GLdouble s, GLdouble t);
typedef void (APIENTRYP PFNGLMULTITEXCOORD2DVPROC) (GLenum target, const GLdouble *v);
typedef void (APIENTRYP PFNGLMULTITEXCOORD2FPROC) (GLenum target, GLfloat s, GLfloat t);
typedef void (APIENTRYP PFNGLMULTITEXCOORD2FVPROC) (GLenum target, const GLfloat *v);
typedef void (APIENTRYP PFNGLMULTITEXCOORD2IPROC) (GLenum target, GLint s, GLint t);
typedef void (APIENTRYP PFNGLMULTITEXCOORD2IVPROC) (GLenum target, const GLint *v);
typedef void (APIENTRYP PFNGLMULTITEXCOORD2SPROC) (GLenum target, GLshort s, GLshort t);
typedef void (APIENTRYP PFNGLMULTITEXCOORD2SVPROC) (GLenum target, const GLshort *v);
typedef void (APIENTRYP PFNGLMULTITEXCOORD3DPROC) (GLenum target, GLdouble s, GLdouble t, GLdouble r);
typedef void (APIENTRYP PFNGLMULTITEXCOORD3DVPROC) (GLenum target, const GLdouble *v);
typedef void (APIENTRYP PFNGLMULTITEXCOORD3FPROC) (GLenum target, GLfloat s, GLfloat t, GLfloat r);
typedef void (APIENTRYP PFNGLMULTITEXCOORD3FVPROC) (GLenum target, const GLfloat *v);
typedef void (APIENTRYP PFNGLMULTITEXCOORD3IPROC) (GLenum target, GLint s, GLint t, GLint r);
typedef void (APIENTRYP PFNGLMULTITEXCOORD3IVPROC) (GLenum target, const GLint *v);
typedef void (APIENTRYP PFNGLMULTITEXCOORD3SPROC) (GLenum target, GLshort s, GLshort t, GLshort r);
typedef void (APIENTRYP PFNGLMULTITEXCOORD3SVPROC) (GLenum target, const GLshort *v);
typedef void (APIENTRYP PFNGLMULTITEXCOORD4DPROC) (GLenum target, GLdouble s, GLdouble t, GLdouble r, GLdouble q);
typedef void (APIENTRYP PFNGLMULTITEXCOORD4DVPROC) (GLenum target, const GLdouble *v);
typedef void (APIENTRYP PFNGLMULTITEXCOORD4FPROC) (GLenum target, GLfloat s, GLfloat t, GLfloat r, GLfloat q);
typedef void (APIENTRYP PFNGLMULTITEXCOORD4FVPROC) (GLenum target, const GLfloat *v);
typedef void (APIENTRYP PFNGLMULTITEXCOORD4IPROC) (GLenum target, GLint s, GLint t, GLint r, GLint q);
typedef void (APIENTRYP PFNGLMULTITEXCOORD4IVPROC) (GLenum target, const GLint *v);
typedef void (APIENTRYP PFNGLMULTITEXCOORD4SPROC) (GLenum target, GLshort s, GLshort t, GLshort r, GLshort q);
typedef void (APIENTRYP PFNGLMULTITEXCOORD4SVPROC) (GLenum target, const GLshort *v);
typedef void (APIENTRYP PFNGLLOADTRANSPOSEMATRIXFPROC) (const GLfloat *m);
typedef void (APIENTRYP PFNGLLOADTRANSPOSEMATRIXDPROC) (const GLdouble *m);
typedef void (APIENTRYP PFNGLMULTTRANSPOSEMATRIXFPROC) (const GLfloat *m);
typedef void (APIENTRYP PFNGLMULTTRANSPOSEMATRIXDPROC) (const GLdouble *m);
// GL_VERSION_1_3

// GL_VERSION_1_4
AXLGLFLAPI bool GL_VERSION_1_4;
AXLGLFLCONSTMODIFIER GLconstant GL_BLEND_DST_RGB = 0x80C8;
AXLGLFLCONSTMODIFIER GLconstant GL_BLEND_SRC_RGB = 0x80C9;
AXLGLFLCONSTMODIFIER GLconstant GL_BLEND_DST_ALPHA = 0x80CA;
AXLGLFLCONSTMODIFIER GLconstant GL_BLEND_SRC_ALPHA = 0x80CB;
AXLGLFLCONSTMODIFIER GLconstant GL_POINT_FADE_THRESHOLD_SIZE = 0x8128;
AXLGLFLCONSTMODIFIER GLconstant GL_DEPTH_COMPONENT16 = 0x81A5;
AXLGLFLCONSTMODIFIER GLconstant GL_DEPTH_COMPONENT24 = 0x81A6;
AXLGLFLCONSTMODIFIER GLconstant GL_DEPTH_COMPONENT32 = 0x81A7;
AXLGLFLCONSTMODIFIER GLconstant GL_MIRRORED_REPEAT = 0x8370;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_TEXTURE_LOD_BIAS = 0x84FD;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_LOD_BIAS = 0x8501;
AXLGLFLCONSTMODIFIER GLconstant GL_INCR_WRAP = 0x8507;
AXLGLFLCONSTMODIFIER GLconstant GL_DECR_WRAP = 0x8508;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_DEPTH_SIZE = 0x884A;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_COMPARE_MODE = 0x884C;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_COMPARE_FUNC = 0x884D;
AXLGLFLCONSTMODIFIER GLconstant GL_POINT_SIZE_MIN = 0x8126;
AXLGLFLCONSTMODIFIER GLconstant GL_POINT_SIZE_MAX = 0x8127;
AXLGLFLCONSTMODIFIER GLconstant GL_POINT_DISTANCE_ATTENUATION = 0x8129;
AXLGLFLCONSTMODIFIER GLconstant GL_GENERATE_MIPMAP = 0x8191;
AXLGLFLCONSTMODIFIER GLconstant GL_GENERATE_MIPMAP_HINT = 0x8192;
AXLGLFLCONSTMODIFIER GLconstant GL_FOG_COORDINATE_SOURCE = 0x8450;
AXLGLFLCONSTMODIFIER GLconstant GL_FOG_COORDINATE = 0x8451;
AXLGLFLCONSTMODIFIER GLconstant GL_FRAGMENT_DEPTH = 0x8452;
AXLGLFLCONSTMODIFIER GLconstant GL_CURRENT_FOG_COORDINATE = 0x8453;
AXLGLFLCONSTMODIFIER GLconstant GL_FOG_COORDINATE_ARRAY_TYPE = 0x8454;
AXLGLFLCONSTMODIFIER GLconstant GL_FOG_COORDINATE_ARRAY_STRIDE = 0x8455;
AXLGLFLCONSTMODIFIER GLconstant GL_FOG_COORDINATE_ARRAY_POINTER = 0x8456;
AXLGLFLCONSTMODIFIER GLconstant GL_FOG_COORDINATE_ARRAY = 0x8457;
AXLGLFLCONSTMODIFIER GLconstant GL_COLOR_SUM = 0x8458;
AXLGLFLCONSTMODIFIER GLconstant GL_CURRENT_SECONDARY_COLOR = 0x8459;
AXLGLFLCONSTMODIFIER GLconstant GL_SECONDARY_COLOR_ARRAY_SIZE = 0x845A;
AXLGLFLCONSTMODIFIER GLconstant GL_SECONDARY_COLOR_ARRAY_TYPE = 0x845B;
AXLGLFLCONSTMODIFIER GLconstant GL_SECONDARY_COLOR_ARRAY_STRIDE = 0x845C;
AXLGLFLCONSTMODIFIER GLconstant GL_SECONDARY_COLOR_ARRAY_POINTER = 0x845D;
AXLGLFLCONSTMODIFIER GLconstant GL_SECONDARY_COLOR_ARRAY = 0x845E;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_FILTER_CONTROL = 0x8500;
AXLGLFLCONSTMODIFIER GLconstant GL_DEPTH_TEXTURE_MODE = 0x884B;
AXLGLFLCONSTMODIFIER GLconstant GL_COMPARE_R_TO_TEXTURE = 0x884E;
AXLGLFLCONSTMODIFIER GLconstant GL_BLEND_COLOR = 0x8005;
AXLGLFLCONSTMODIFIER GLconstant GL_BLEND_EQUATION = 0x8009;
AXLGLFLCONSTMODIFIER GLconstant GL_CONSTANT_COLOR = 0x8001;
AXLGLFLCONSTMODIFIER GLconstant GL_ONE_MINUS_CONSTANT_COLOR = 0x8002;
AXLGLFLCONSTMODIFIER GLconstant GL_CONSTANT_ALPHA = 0x8003;
AXLGLFLCONSTMODIFIER GLconstant GL_ONE_MINUS_CONSTANT_ALPHA = 0x8004;
AXLGLFLCONSTMODIFIER GLconstant GL_FUNC_ADD = 0x8006;
AXLGLFLCONSTMODIFIER GLconstant GL_FUNC_REVERSE_SUBTRACT = 0x800B;
AXLGLFLCONSTMODIFIER GLconstant GL_FUNC_SUBTRACT = 0x800A;
AXLGLFLCONSTMODIFIER GLconstant GL_MIN = 0x8007;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX = 0x8008;
typedef void (APIENTRYP PFNGLBLENDFUNCSEPARATEPROC) (GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha);
typedef void (APIENTRYP PFNGLMULTIDRAWARRAYSPROC) (GLenum mode, const GLint *first, const GLsizei *count, GLsizei drawcount);
typedef void (APIENTRYP PFNGLMULTIDRAWELEMENTSPROC) (GLenum mode, const GLsizei *count, GLenum type, const void *const*indices, GLsizei drawcount);
typedef void (APIENTRYP PFNGLPOINTPARAMETERFPROC) (GLenum pname, GLfloat param);
typedef void (APIENTRYP PFNGLPOINTPARAMETERFVPROC) (GLenum pname, const GLfloat *params);
typedef void (APIENTRYP PFNGLPOINTPARAMETERIPROC) (GLenum pname, GLint param);
typedef void (APIENTRYP PFNGLPOINTPARAMETERIVPROC) (GLenum pname, const GLint *params);
typedef void (APIENTRYP PFNGLFOGCOORDFPROC) (GLfloat coord);
typedef void (APIENTRYP PFNGLFOGCOORDFVPROC) (const GLfloat *coord);
typedef void (APIENTRYP PFNGLFOGCOORDDPROC) (GLdouble coord);
typedef void (APIENTRYP PFNGLFOGCOORDDVPROC) (const GLdouble *coord);
typedef void (APIENTRYP PFNGLFOGCOORDPOINTERPROC) (GLenum type, GLsizei stride, const void *pointer);
typedef void (APIENTRYP PFNGLSECONDARYCOLOR3BPROC) (GLbyte red, GLbyte green, GLbyte blue);
typedef void (APIENTRYP PFNGLSECONDARYCOLOR3BVPROC) (const GLbyte *v);
typedef void (APIENTRYP PFNGLSECONDARYCOLOR3DPROC) (GLdouble red, GLdouble green, GLdouble blue);
typedef void (APIENTRYP PFNGLSECONDARYCOLOR3DVPROC) (const GLdouble *v);
typedef void (APIENTRYP PFNGLSECONDARYCOLOR3FPROC) (GLfloat red, GLfloat green, GLfloat blue);
typedef void (APIENTRYP PFNGLSECONDARYCOLOR3FVPROC) (const GLfloat *v);
typedef void (APIENTRYP PFNGLSECONDARYCOLOR3IPROC) (GLint red, GLint green, GLint blue);
typedef void (APIENTRYP PFNGLSECONDARYCOLOR3IVPROC) (const GLint *v);
typedef void (APIENTRYP PFNGLSECONDARYCOLOR3SPROC) (GLshort red, GLshort green, GLshort blue);
typedef void (APIENTRYP PFNGLSECONDARYCOLOR3SVPROC) (const GLshort *v);
typedef void (APIENTRYP PFNGLSECONDARYCOLOR3UBPROC) (GLubyte red, GLubyte green, GLubyte blue);
typedef void (APIENTRYP PFNGLSECONDARYCOLOR3UBVPROC) (const GLubyte *v);
typedef void (APIENTRYP PFNGLSECONDARYCOLOR3UIPROC) (GLuint red, GLuint green, GLuint blue);
typedef void (APIENTRYP PFNGLSECONDARYCOLOR3UIVPROC) (const GLuint *v);
typedef void (APIENTRYP PFNGLSECONDARYCOLOR3USPROC) (GLushort red, GLushort green, GLushort blue);
typedef void (APIENTRYP PFNGLSECONDARYCOLOR3USVPROC) (const GLushort *v);
typedef void (APIENTRYP PFNGLSECONDARYCOLORPOINTERPROC) (GLint size, GLenum type, GLsizei stride, const void *pointer);
typedef void (APIENTRYP PFNGLWINDOWPOS2DPROC) (GLdouble x, GLdouble y);
typedef void (APIENTRYP PFNGLWINDOWPOS2DVPROC) (const GLdouble *v);
typedef void (APIENTRYP PFNGLWINDOWPOS2FPROC) (GLfloat x, GLfloat y);
typedef void (APIENTRYP PFNGLWINDOWPOS2FVPROC) (const GLfloat *v);
typedef void (APIENTRYP PFNGLWINDOWPOS2IPROC) (GLint x, GLint y);
typedef void (APIENTRYP PFNGLWINDOWPOS2IVPROC) (const GLint *v);
typedef void (APIENTRYP PFNGLWINDOWPOS2SPROC) (GLshort x, GLshort y);
typedef void (APIENTRYP PFNGLWINDOWPOS2SVPROC) (const GLshort *v);
typedef void (APIENTRYP PFNGLWINDOWPOS3DPROC) (GLdouble x, GLdouble y, GLdouble z);
typedef void (APIENTRYP PFNGLWINDOWPOS3DVPROC) (const GLdouble *v);
typedef void (APIENTRYP PFNGLWINDOWPOS3FPROC) (GLfloat x, GLfloat y, GLfloat z);
typedef void (APIENTRYP PFNGLWINDOWPOS3FVPROC) (const GLfloat *v);
typedef void (APIENTRYP PFNGLWINDOWPOS3IPROC) (GLint x, GLint y, GLint z);
typedef void (APIENTRYP PFNGLWINDOWPOS3IVPROC) (const GLint *v);
typedef void (APIENTRYP PFNGLWINDOWPOS3SPROC) (GLshort x, GLshort y, GLshort z);
typedef void (APIENTRYP PFNGLWINDOWPOS3SVPROC) (const GLshort *v);
typedef void (APIENTRYP PFNGLBLENDCOLORPROC) (GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
typedef void (APIENTRYP PFNGLBLENDEQUATIONPROC) (GLenum mode);
// GL_VERSION_1_4

// GL_VERSION_1_5
AXLGLFLAPI bool GL_VERSION_1_5;
typedef ssize_t GLsizeiptr;
typedef intptr_t GLintptr;
AXLGLFLCONSTMODIFIER GLconstant GL_BUFFER_SIZE = 0x8764;
AXLGLFLCONSTMODIFIER GLconstant GL_BUFFER_USAGE = 0x8765;
AXLGLFLCONSTMODIFIER GLconstant GL_QUERY_COUNTER_BITS = 0x8864;
AXLGLFLCONSTMODIFIER GLconstant GL_CURRENT_QUERY = 0x8865;
AXLGLFLCONSTMODIFIER GLconstant GL_QUERY_RESULT = 0x8866;
AXLGLFLCONSTMODIFIER GLconstant GL_QUERY_RESULT_AVAILABLE = 0x8867;
AXLGLFLCONSTMODIFIER GLconstant GL_ARRAY_BUFFER = 0x8892;
AXLGLFLCONSTMODIFIER GLconstant GL_ELEMENT_ARRAY_BUFFER = 0x8893;
AXLGLFLCONSTMODIFIER GLconstant GL_ARRAY_BUFFER_BINDING = 0x8894;
AXLGLFLCONSTMODIFIER GLconstant GL_ELEMENT_ARRAY_BUFFER_BINDING = 0x8895;
AXLGLFLCONSTMODIFIER GLconstant GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING = 0x889F;
AXLGLFLCONSTMODIFIER GLconstant GL_READ_ONLY = 0x88B8;
AXLGLFLCONSTMODIFIER GLconstant GL_WRITE_ONLY = 0x88B9;
AXLGLFLCONSTMODIFIER GLconstant GL_READ_WRITE = 0x88BA;
AXLGLFLCONSTMODIFIER GLconstant GL_BUFFER_ACCESS = 0x88BB;
AXLGLFLCONSTMODIFIER GLconstant GL_BUFFER_MAPPED = 0x88BC;
AXLGLFLCONSTMODIFIER GLconstant GL_BUFFER_MAP_POINTER = 0x88BD;
AXLGLFLCONSTMODIFIER GLconstant GL_STREAM_DRAW = 0x88E0;
AXLGLFLCONSTMODIFIER GLconstant GL_STREAM_READ = 0x88E1;
AXLGLFLCONSTMODIFIER GLconstant GL_STREAM_COPY = 0x88E2;
AXLGLFLCONSTMODIFIER GLconstant GL_STATIC_DRAW = 0x88E4;
AXLGLFLCONSTMODIFIER GLconstant GL_STATIC_READ = 0x88E5;
AXLGLFLCONSTMODIFIER GLconstant GL_STATIC_COPY = 0x88E6;
AXLGLFLCONSTMODIFIER GLconstant GL_DYNAMIC_DRAW = 0x88E8;
AXLGLFLCONSTMODIFIER GLconstant GL_DYNAMIC_READ = 0x88E9;
AXLGLFLCONSTMODIFIER GLconstant GL_DYNAMIC_COPY = 0x88EA;
AXLGLFLCONSTMODIFIER GLconstant GL_SAMPLES_PASSED = 0x8914;
AXLGLFLCONSTMODIFIER GLconstant GL_SRC1_ALPHA = 0x8589;
AXLGLFLCONSTMODIFIER GLconstant GL_VERTEX_ARRAY_BUFFER_BINDING = 0x8896;
AXLGLFLCONSTMODIFIER GLconstant GL_NORMAL_ARRAY_BUFFER_BINDING = 0x8897;
AXLGLFLCONSTMODIFIER GLconstant GL_COLOR_ARRAY_BUFFER_BINDING = 0x8898;
AXLGLFLCONSTMODIFIER GLconstant GL_INDEX_ARRAY_BUFFER_BINDING = 0x8899;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING = 0x889A;
AXLGLFLCONSTMODIFIER GLconstant GL_EDGE_FLAG_ARRAY_BUFFER_BINDING = 0x889B;
AXLGLFLCONSTMODIFIER GLconstant GL_SECONDARY_COLOR_ARRAY_BUFFER_BINDING = 0x889C;
AXLGLFLCONSTMODIFIER GLconstant GL_FOG_COORDINATE_ARRAY_BUFFER_BINDING = 0x889D;
AXLGLFLCONSTMODIFIER GLconstant GL_WEIGHT_ARRAY_BUFFER_BINDING = 0x889E;
AXLGLFLCONSTMODIFIER GLconstant GL_FOG_COORD_SRC = 0x8450;
AXLGLFLCONSTMODIFIER GLconstant GL_FOG_COORD = 0x8451;
AXLGLFLCONSTMODIFIER GLconstant GL_CURRENT_FOG_COORD = 0x8453;
AXLGLFLCONSTMODIFIER GLconstant GL_FOG_COORD_ARRAY_TYPE = 0x8454;
AXLGLFLCONSTMODIFIER GLconstant GL_FOG_COORD_ARRAY_STRIDE = 0x8455;
AXLGLFLCONSTMODIFIER GLconstant GL_FOG_COORD_ARRAY_POINTER = 0x8456;
AXLGLFLCONSTMODIFIER GLconstant GL_FOG_COORD_ARRAY = 0x8457;
AXLGLFLCONSTMODIFIER GLconstant GL_FOG_COORD_ARRAY_BUFFER_BINDING = 0x889D;
AXLGLFLCONSTMODIFIER GLconstant GL_SRC0_RGB = 0x8580;
AXLGLFLCONSTMODIFIER GLconstant GL_SRC1_RGB = 0x8581;
AXLGLFLCONSTMODIFIER GLconstant GL_SRC2_RGB = 0x8582;
AXLGLFLCONSTMODIFIER GLconstant GL_SRC0_ALPHA = 0x8588;
AXLGLFLCONSTMODIFIER GLconstant GL_SRC2_ALPHA = 0x858A;
typedef void (APIENTRYP PFNGLGENQUERIESPROC) (GLsizei n, GLuint *ids);
typedef void (APIENTRYP PFNGLDELETEQUERIESPROC) (GLsizei n, const GLuint *ids);
typedef GLboolean (APIENTRYP PFNGLISQUERYPROC) (GLuint id);
typedef void (APIENTRYP PFNGLBEGINQUERYPROC) (GLenum target, GLuint id);
typedef void (APIENTRYP PFNGLENDQUERYPROC) (GLenum target);
typedef void (APIENTRYP PFNGLGETQUERYIVPROC) (GLenum target, GLenum pname, GLint *params);
typedef void (APIENTRYP PFNGLGETQUERYOBJECTIVPROC) (GLuint id, GLenum pname, GLint *params);
typedef void (APIENTRYP PFNGLGETQUERYOBJECTUIVPROC) (GLuint id, GLenum pname, GLuint *params);
typedef void (APIENTRYP PFNGLBINDBUFFERPROC) (GLenum target, GLuint buffer);
typedef void (APIENTRYP PFNGLDELETEBUFFERSPROC) (GLsizei n, const GLuint *buffers);
typedef void (APIENTRYP PFNGLGENBUFFERSPROC) (GLsizei n, GLuint *buffers);
typedef GLboolean (APIENTRYP PFNGLISBUFFERPROC) (GLuint buffer);
typedef void (APIENTRYP PFNGLBUFFERDATAPROC) (GLenum target, GLsizeiptr size, const void *data, GLenum usage);
typedef void (APIENTRYP PFNGLBUFFERSUBDATAPROC) (GLenum target, GLintptr offset, GLsizeiptr size, const void *data);
typedef void (APIENTRYP PFNGLGETBUFFERSUBDATAPROC) (GLenum target, GLintptr offset, GLsizeiptr size, void *data);
typedef void *(APIENTRYP PFNGLMAPBUFFERPROC) (GLenum target, GLenum access);
typedef GLboolean (APIENTRYP PFNGLUNMAPBUFFERPROC) (GLenum target);
typedef void (APIENTRYP PFNGLGETBUFFERPARAMETERIVPROC) (GLenum target, GLenum pname, GLint *params);
typedef void (APIENTRYP PFNGLGETBUFFERPOINTERVPROC) (GLenum target, GLenum pname, void **params);
// GL_VERSION_1_5

} // namespace GL1

namespace GL2 {

// GL_VERSION_2_0
AXLGLFLAPI bool GL_VERSION_2_0;
typedef char GLchar;
AXLGLFLCONSTMODIFIER GLconstant GL_BLEND_EQUATION_RGB = 0x8009;
AXLGLFLCONSTMODIFIER GLconstant GL_VERTEX_ATTRIB_ARRAY_ENABLED = 0x8622;
AXLGLFLCONSTMODIFIER GLconstant GL_VERTEX_ATTRIB_ARRAY_SIZE = 0x8623;
AXLGLFLCONSTMODIFIER GLconstant GL_VERTEX_ATTRIB_ARRAY_STRIDE = 0x8624;
AXLGLFLCONSTMODIFIER GLconstant GL_VERTEX_ATTRIB_ARRAY_TYPE = 0x8625;
AXLGLFLCONSTMODIFIER GLconstant GL_CURRENT_VERTEX_ATTRIB = 0x8626;
AXLGLFLCONSTMODIFIER GLconstant GL_VERTEX_PROGRAM_POINT_SIZE = 0x8642;
AXLGLFLCONSTMODIFIER GLconstant GL_VERTEX_ATTRIB_ARRAY_POINTER = 0x8645;
AXLGLFLCONSTMODIFIER GLconstant GL_STENCIL_BACK_FUNC = 0x8800;
AXLGLFLCONSTMODIFIER GLconstant GL_STENCIL_BACK_FAIL = 0x8801;
AXLGLFLCONSTMODIFIER GLconstant GL_STENCIL_BACK_PASS_DEPTH_FAIL = 0x8802;
AXLGLFLCONSTMODIFIER GLconstant GL_STENCIL_BACK_PASS_DEPTH_PASS = 0x8803;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_DRAW_BUFFERS = 0x8824;
AXLGLFLCONSTMODIFIER GLconstant GL_DRAW_BUFFER0 = 0x8825;
AXLGLFLCONSTMODIFIER GLconstant GL_DRAW_BUFFER1 = 0x8826;
AXLGLFLCONSTMODIFIER GLconstant GL_DRAW_BUFFER2 = 0x8827;
AXLGLFLCONSTMODIFIER GLconstant GL_DRAW_BUFFER3 = 0x8828;
AXLGLFLCONSTMODIFIER GLconstant GL_DRAW_BUFFER4 = 0x8829;
AXLGLFLCONSTMODIFIER GLconstant GL_DRAW_BUFFER5 = 0x882A;
AXLGLFLCONSTMODIFIER GLconstant GL_DRAW_BUFFER6 = 0x882B;
AXLGLFLCONSTMODIFIER GLconstant GL_DRAW_BUFFER7 = 0x882C;
AXLGLFLCONSTMODIFIER GLconstant GL_DRAW_BUFFER8 = 0x882D;
AXLGLFLCONSTMODIFIER GLconstant GL_DRAW_BUFFER9 = 0x882E;
AXLGLFLCONSTMODIFIER GLconstant GL_DRAW_BUFFER10 = 0x882F;
AXLGLFLCONSTMODIFIER GLconstant GL_DRAW_BUFFER11 = 0x8830;
AXLGLFLCONSTMODIFIER GLconstant GL_DRAW_BUFFER12 = 0x8831;
AXLGLFLCONSTMODIFIER GLconstant GL_DRAW_BUFFER13 = 0x8832;
AXLGLFLCONSTMODIFIER GLconstant GL_DRAW_BUFFER14 = 0x8833;
AXLGLFLCONSTMODIFIER GLconstant GL_DRAW_BUFFER15 = 0x8834;
AXLGLFLCONSTMODIFIER GLconstant GL_BLEND_EQUATION_ALPHA = 0x883D;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_VERTEX_ATTRIBS = 0x8869;
AXLGLFLCONSTMODIFIER GLconstant GL_VERTEX_ATTRIB_ARRAY_NORMALIZED = 0x886A;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_TEXTURE_IMAGE_UNITS = 0x8872;
AXLGLFLCONSTMODIFIER GLconstant GL_FRAGMENT_SHADER = 0x8B30;
AXLGLFLCONSTMODIFIER GLconstant GL_VERTEX_SHADER = 0x8B31;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_FRAGMENT_UNIFORM_COMPONENTS = 0x8B49;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_VERTEX_UNIFORM_COMPONENTS = 0x8B4A;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_VARYING_FLOATS = 0x8B4B;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS = 0x8B4C;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS = 0x8B4D;
AXLGLFLCONSTMODIFIER GLconstant GL_SHADER_TYPE = 0x8B4F;
AXLGLFLCONSTMODIFIER GLconstant GL_FLOAT_VEC2 = 0x8B50;
AXLGLFLCONSTMODIFIER GLconstant GL_FLOAT_VEC3 = 0x8B51;
AXLGLFLCONSTMODIFIER GLconstant GL_FLOAT_VEC4 = 0x8B52;
AXLGLFLCONSTMODIFIER GLconstant GL_INT_VEC2 = 0x8B53;
AXLGLFLCONSTMODIFIER GLconstant GL_INT_VEC3 = 0x8B54;
AXLGLFLCONSTMODIFIER GLconstant GL_INT_VEC4 = 0x8B55;
AXLGLFLCONSTMODIFIER GLconstant GL_BOOL = 0x8B56;
AXLGLFLCONSTMODIFIER GLconstant GL_BOOL_VEC2 = 0x8B57;
AXLGLFLCONSTMODIFIER GLconstant GL_BOOL_VEC3 = 0x8B58;
AXLGLFLCONSTMODIFIER GLconstant GL_BOOL_VEC4 = 0x8B59;
AXLGLFLCONSTMODIFIER GLconstant GL_FLOAT_MAT2 = 0x8B5A;
AXLGLFLCONSTMODIFIER GLconstant GL_FLOAT_MAT3 = 0x8B5B;
AXLGLFLCONSTMODIFIER GLconstant GL_FLOAT_MAT4 = 0x8B5C;
AXLGLFLCONSTMODIFIER GLconstant GL_SAMPLER_1D = 0x8B5D;
AXLGLFLCONSTMODIFIER GLconstant GL_SAMPLER_2D = 0x8B5E;
AXLGLFLCONSTMODIFIER GLconstant GL_SAMPLER_3D = 0x8B5F;
AXLGLFLCONSTMODIFIER GLconstant GL_SAMPLER_CUBE = 0x8B60;
AXLGLFLCONSTMODIFIER GLconstant GL_SAMPLER_1D_SHADOW = 0x8B61;
AXLGLFLCONSTMODIFIER GLconstant GL_SAMPLER_2D_SHADOW = 0x8B62;
AXLGLFLCONSTMODIFIER GLconstant GL_DELETE_STATUS = 0x8B80;
AXLGLFLCONSTMODIFIER GLconstant GL_COMPILE_STATUS = 0x8B81;
AXLGLFLCONSTMODIFIER GLconstant GL_LINK_STATUS = 0x8B82;
AXLGLFLCONSTMODIFIER GLconstant GL_VALIDATE_STATUS = 0x8B83;
AXLGLFLCONSTMODIFIER GLconstant GL_INFO_LOG_LENGTH = 0x8B84;
AXLGLFLCONSTMODIFIER GLconstant GL_ATTACHED_SHADERS = 0x8B85;
AXLGLFLCONSTMODIFIER GLconstant GL_ACTIVE_UNIFORMS = 0x8B86;
AXLGLFLCONSTMODIFIER GLconstant GL_ACTIVE_UNIFORM_MAX_LENGTH = 0x8B87;
AXLGLFLCONSTMODIFIER GLconstant GL_SHADER_SOURCE_LENGTH = 0x8B88;
AXLGLFLCONSTMODIFIER GLconstant GL_ACTIVE_ATTRIBUTES = 0x8B89;
AXLGLFLCONSTMODIFIER GLconstant GL_ACTIVE_ATTRIBUTE_MAX_LENGTH = 0x8B8A;
AXLGLFLCONSTMODIFIER GLconstant GL_FRAGMENT_SHADER_DERIVATIVE_HINT = 0x8B8B;
AXLGLFLCONSTMODIFIER GLconstant GL_SHADING_LANGUAGE_VERSION = 0x8B8C;
AXLGLFLCONSTMODIFIER GLconstant GL_CURRENT_PROGRAM = 0x8B8D;
AXLGLFLCONSTMODIFIER GLconstant GL_POINT_SPRITE_COORD_ORIGIN = 0x8CA0;
AXLGLFLCONSTMODIFIER GLconstant GL_LOWER_LEFT = 0x8CA1;
AXLGLFLCONSTMODIFIER GLconstant GL_UPPER_LEFT = 0x8CA2;
AXLGLFLCONSTMODIFIER GLconstant GL_STENCIL_BACK_REF = 0x8CA3;
AXLGLFLCONSTMODIFIER GLconstant GL_STENCIL_BACK_VALUE_MASK = 0x8CA4;
AXLGLFLCONSTMODIFIER GLconstant GL_STENCIL_BACK_WRITEMASK = 0x8CA5;
AXLGLFLCONSTMODIFIER GLconstant GL_VERTEX_PROGRAM_TWO_SIDE = 0x8643;
AXLGLFLCONSTMODIFIER GLconstant GL_POINT_SPRITE = 0x8861;
AXLGLFLCONSTMODIFIER GLconstant GL_COORD_REPLACE = 0x8862;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_TEXTURE_COORDS = 0x8871;
typedef void (APIENTRYP PFNGLBLENDEQUATIONSEPARATEPROC) (GLenum modeRGB, GLenum modeAlpha);
typedef void (APIENTRYP PFNGLDRAWBUFFERSPROC) (GLsizei n, const GLenum *bufs);
typedef void (APIENTRYP PFNGLSTENCILOPSEPARATEPROC) (GLenum face, GLenum sfail, GLenum dpfail, GLenum dppass);
typedef void (APIENTRYP PFNGLSTENCILFUNCSEPARATEPROC) (GLenum face, GLenum func, GLint ref, GLuint mask);
typedef void (APIENTRYP PFNGLSTENCILMASKSEPARATEPROC) (GLenum face, GLuint mask);
typedef void (APIENTRYP PFNGLATTACHSHADERPROC) (GLuint program, GLuint shader);
typedef void (APIENTRYP PFNGLBINDATTRIBLOCATIONPROC) (GLuint program, GLuint index, const GLchar *name);
typedef void (APIENTRYP PFNGLCOMPILESHADERPROC) (GLuint shader);
typedef GLuint (APIENTRYP PFNGLCREATEPROGRAMPROC) (void);
typedef GLuint (APIENTRYP PFNGLCREATESHADERPROC) (GLenum type);
typedef void (APIENTRYP PFNGLDELETEPROGRAMPROC) (GLuint program);
typedef void (APIENTRYP PFNGLDELETESHADERPROC) (GLuint shader);
typedef void (APIENTRYP PFNGLDETACHSHADERPROC) (GLuint program, GLuint shader);
typedef void (APIENTRYP PFNGLDISABLEVERTEXATTRIBARRAYPROC) (GLuint index);
typedef void (APIENTRYP PFNGLENABLEVERTEXATTRIBARRAYPROC) (GLuint index);
typedef void (APIENTRYP PFNGLGETACTIVEATTRIBPROC) (GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLint *size, GLenum *type, GLchar *name);
typedef void (APIENTRYP PFNGLGETACTIVEUNIFORMPROC) (GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLint *size, GLenum *type, GLchar *name);
typedef void (APIENTRYP PFNGLGETATTACHEDSHADERSPROC) (GLuint program, GLsizei maxCount, GLsizei *count, GLuint *shaders);
typedef GLint (APIENTRYP PFNGLGETATTRIBLOCATIONPROC) (GLuint program, const GLchar *name);
typedef void (APIENTRYP PFNGLGETPROGRAMIVPROC) (GLuint program, GLenum pname, GLint *params);
typedef void (APIENTRYP PFNGLGETPROGRAMINFOLOGPROC) (GLuint program, GLsizei bufSize, GLsizei *length, GLchar *infoLog);
typedef void (APIENTRYP PFNGLGETSHADERIVPROC) (GLuint shader, GLenum pname, GLint *params);
typedef void (APIENTRYP PFNGLGETSHADERINFOLOGPROC) (GLuint shader, GLsizei bufSize, GLsizei *length, GLchar *infoLog);
typedef void (APIENTRYP PFNGLGETSHADERSOURCEPROC) (GLuint shader, GLsizei bufSize, GLsizei *length, GLchar *source);
typedef GLint (APIENTRYP PFNGLGETUNIFORMLOCATIONPROC) (GLuint program, const GLchar *name);
typedef void (APIENTRYP PFNGLGETUNIFORMFVPROC) (GLuint program, GLint location, GLfloat *params);
typedef void (APIENTRYP PFNGLGETUNIFORMIVPROC) (GLuint program, GLint location, GLint *params);
typedef void (APIENTRYP PFNGLGETVERTEXATTRIBDVPROC) (GLuint index, GLenum pname, GLdouble *params);
typedef void (APIENTRYP PFNGLGETVERTEXATTRIBFVPROC) (GLuint index, GLenum pname, GLfloat *params);
typedef void (APIENTRYP PFNGLGETVERTEXATTRIBIVPROC) (GLuint index, GLenum pname, GLint *params);
typedef void (APIENTRYP PFNGLGETVERTEXATTRIBPOINTERVPROC) (GLuint index, GLenum pname, void **pointer);
typedef GLboolean (APIENTRYP PFNGLISPROGRAMPROC) (GLuint program);
typedef GLboolean (APIENTRYP PFNGLISSHADERPROC) (GLuint shader);
typedef void (APIENTRYP PFNGLLINKPROGRAMPROC) (GLuint program);
typedef void (APIENTRYP PFNGLSHADERSOURCEPROC) (GLuint shader, GLsizei count, const GLchar *const*string, const GLint *length);
typedef void (APIENTRYP PFNGLUSEPROGRAMPROC) (GLuint program);
typedef void (APIENTRYP PFNGLUNIFORM1FPROC) (GLint location, GLfloat v0);
typedef void (APIENTRYP PFNGLUNIFORM2FPROC) (GLint location, GLfloat v0, GLfloat v1);
typedef void (APIENTRYP PFNGLUNIFORM3FPROC) (GLint location, GLfloat v0, GLfloat v1, GLfloat v2);
typedef void (APIENTRYP PFNGLUNIFORM4FPROC) (GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);
typedef void (APIENTRYP PFNGLUNIFORM1IPROC) (GLint location, GLint v0);
typedef void (APIENTRYP PFNGLUNIFORM2IPROC) (GLint location, GLint v0, GLint v1);
typedef void (APIENTRYP PFNGLUNIFORM3IPROC) (GLint location, GLint v0, GLint v1, GLint v2);
typedef void (APIENTRYP PFNGLUNIFORM4IPROC) (GLint location, GLint v0, GLint v1, GLint v2, GLint v3);
typedef void (APIENTRYP PFNGLUNIFORM1FVPROC) (GLint location, GLsizei count, const GLfloat *value);
typedef void (APIENTRYP PFNGLUNIFORM2FVPROC) (GLint location, GLsizei count, const GLfloat *value);
typedef void (APIENTRYP PFNGLUNIFORM3FVPROC) (GLint location, GLsizei count, const GLfloat *value);
typedef void (APIENTRYP PFNGLUNIFORM4FVPROC) (GLint location, GLsizei count, const GLfloat *value);
typedef void (APIENTRYP PFNGLUNIFORM1IVPROC) (GLint location, GLsizei count, const GLint *value);
typedef void (APIENTRYP PFNGLUNIFORM2IVPROC) (GLint location, GLsizei count, const GLint *value);
typedef void (APIENTRYP PFNGLUNIFORM3IVPROC) (GLint location, GLsizei count, const GLint *value);
typedef void (APIENTRYP PFNGLUNIFORM4IVPROC) (GLint location, GLsizei count, const GLint *value);
typedef void (APIENTRYP PFNGLUNIFORMMATRIX2FVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
typedef void (APIENTRYP PFNGLUNIFORMMATRIX3FVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
typedef void (APIENTRYP PFNGLUNIFORMMATRIX4FVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
typedef void (APIENTRYP PFNGLVALIDATEPROGRAMPROC) (GLuint program);
typedef void (APIENTRYP PFNGLVERTEXATTRIB1DPROC) (GLuint index, GLdouble x);
typedef void (APIENTRYP PFNGLVERTEXATTRIB1DVPROC) (GLuint index, const GLdouble *v);
typedef void (APIENTRYP PFNGLVERTEXATTRIB1FPROC) (GLuint index, GLfloat x);
typedef void (APIENTRYP PFNGLVERTEXATTRIB1FVPROC) (GLuint index, const GLfloat *v);
typedef void (APIENTRYP PFNGLVERTEXATTRIB1SPROC) (GLuint index, GLshort x);
typedef void (APIENTRYP PFNGLVERTEXATTRIB1SVPROC) (GLuint index, const GLshort *v);
typedef void (APIENTRYP PFNGLVERTEXATTRIB2DPROC) (GLuint index, GLdouble x, GLdouble y);
typedef void (APIENTRYP PFNGLVERTEXATTRIB2DVPROC) (GLuint index, const GLdouble *v);
typedef void (APIENTRYP PFNGLVERTEXATTRIB2FPROC) (GLuint index, GLfloat x, GLfloat y);
typedef void (APIENTRYP PFNGLVERTEXATTRIB2FVPROC) (GLuint index, const GLfloat *v);
typedef void (APIENTRYP PFNGLVERTEXATTRIB2SPROC) (GLuint index, GLshort x, GLshort y);
typedef void (APIENTRYP PFNGLVERTEXATTRIB2SVPROC) (GLuint index, const GLshort *v);
typedef void (APIENTRYP PFNGLVERTEXATTRIB3DPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble z);
typedef void (APIENTRYP PFNGLVERTEXATTRIB3DVPROC) (GLuint index, const GLdouble *v);
typedef void (APIENTRYP PFNGLVERTEXATTRIB3FPROC) (GLuint index, GLfloat x, GLfloat y, GLfloat z);
typedef void (APIENTRYP PFNGLVERTEXATTRIB3FVPROC) (GLuint index, const GLfloat *v);
typedef void (APIENTRYP PFNGLVERTEXATTRIB3SPROC) (GLuint index, GLshort x, GLshort y, GLshort z);
typedef void (APIENTRYP PFNGLVERTEXATTRIB3SVPROC) (GLuint index, const GLshort *v);
typedef void (APIENTRYP PFNGLVERTEXATTRIB4NBVPROC) (GLuint index, const GLbyte *v);
typedef void (APIENTRYP PFNGLVERTEXATTRIB4NIVPROC) (GLuint index, const GLint *v);
typedef void (APIENTRYP PFNGLVERTEXATTRIB4NSVPROC) (GLuint index, const GLshort *v);
typedef void (APIENTRYP PFNGLVERTEXATTRIB4NUBPROC) (GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w);
typedef void (APIENTRYP PFNGLVERTEXATTRIB4NUBVPROC) (GLuint index, const GLubyte *v);
typedef void (APIENTRYP PFNGLVERTEXATTRIB4NUIVPROC) (GLuint index, const GLuint *v);
typedef void (APIENTRYP PFNGLVERTEXATTRIB4NUSVPROC) (GLuint index, const GLushort *v);
typedef void (APIENTRYP PFNGLVERTEXATTRIB4BVPROC) (GLuint index, const GLbyte *v);
typedef void (APIENTRYP PFNGLVERTEXATTRIB4DPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
typedef void (APIENTRYP PFNGLVERTEXATTRIB4DVPROC) (GLuint index, const GLdouble *v);
typedef void (APIENTRYP PFNGLVERTEXATTRIB4FPROC) (GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
typedef void (APIENTRYP PFNGLVERTEXATTRIB4FVPROC) (GLuint index, const GLfloat *v);
typedef void (APIENTRYP PFNGLVERTEXATTRIB4IVPROC) (GLuint index, const GLint *v);
typedef void (APIENTRYP PFNGLVERTEXATTRIB4SPROC) (GLuint index, GLshort x, GLshort y, GLshort z, GLshort w);
typedef void (APIENTRYP PFNGLVERTEXATTRIB4SVPROC) (GLuint index, const GLshort *v);
typedef void (APIENTRYP PFNGLVERTEXATTRIB4UBVPROC) (GLuint index, const GLubyte *v);
typedef void (APIENTRYP PFNGLVERTEXATTRIB4UIVPROC) (GLuint index, const GLuint *v);
typedef void (APIENTRYP PFNGLVERTEXATTRIB4USVPROC) (GLuint index, const GLushort *v);
typedef void (APIENTRYP PFNGLVERTEXATTRIBPOINTERPROC) (GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, const void *pointer);
// GL_VERSION_2_0

// GL_VERSION_2_1
AXLGLFLAPI bool GL_VERSION_2_1;
AXLGLFLCONSTMODIFIER GLconstant GL_PIXEL_PACK_BUFFER = 0x88EB;
AXLGLFLCONSTMODIFIER GLconstant GL_PIXEL_UNPACK_BUFFER = 0x88EC;
AXLGLFLCONSTMODIFIER GLconstant GL_PIXEL_PACK_BUFFER_BINDING = 0x88ED;
AXLGLFLCONSTMODIFIER GLconstant GL_PIXEL_UNPACK_BUFFER_BINDING = 0x88EF;
AXLGLFLCONSTMODIFIER GLconstant GL_FLOAT_MAT2x3 = 0x8B65;
AXLGLFLCONSTMODIFIER GLconstant GL_FLOAT_MAT2x4 = 0x8B66;
AXLGLFLCONSTMODIFIER GLconstant GL_FLOAT_MAT3x2 = 0x8B67;
AXLGLFLCONSTMODIFIER GLconstant GL_FLOAT_MAT3x4 = 0x8B68;
AXLGLFLCONSTMODIFIER GLconstant GL_FLOAT_MAT4x2 = 0x8B69;
AXLGLFLCONSTMODIFIER GLconstant GL_FLOAT_MAT4x3 = 0x8B6A;
AXLGLFLCONSTMODIFIER GLconstant GL_SRGB = 0x8C40;
AXLGLFLCONSTMODIFIER GLconstant GL_SRGB8 = 0x8C41;
AXLGLFLCONSTMODIFIER GLconstant GL_SRGB_ALPHA = 0x8C42;
AXLGLFLCONSTMODIFIER GLconstant GL_SRGB8_ALPHA8 = 0x8C43;
AXLGLFLCONSTMODIFIER GLconstant GL_COMPRESSED_SRGB = 0x8C48;
AXLGLFLCONSTMODIFIER GLconstant GL_COMPRESSED_SRGB_ALPHA = 0x8C49;
AXLGLFLCONSTMODIFIER GLconstant GL_CURRENT_RASTER_SECONDARY_COLOR = 0x845F;
AXLGLFLCONSTMODIFIER GLconstant GL_SLUMINANCE_ALPHA = 0x8C44;
AXLGLFLCONSTMODIFIER GLconstant GL_SLUMINANCE8_ALPHA8 = 0x8C45;
AXLGLFLCONSTMODIFIER GLconstant GL_SLUMINANCE = 0x8C46;
AXLGLFLCONSTMODIFIER GLconstant GL_SLUMINANCE8 = 0x8C47;
AXLGLFLCONSTMODIFIER GLconstant GL_COMPRESSED_SLUMINANCE = 0x8C4A;
AXLGLFLCONSTMODIFIER GLconstant GL_COMPRESSED_SLUMINANCE_ALPHA = 0x8C4B;
typedef void (APIENTRYP PFNGLUNIFORMMATRIX2X3FVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
typedef void (APIENTRYP PFNGLUNIFORMMATRIX3X2FVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
typedef void (APIENTRYP PFNGLUNIFORMMATRIX2X4FVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
typedef void (APIENTRYP PFNGLUNIFORMMATRIX4X2FVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
typedef void (APIENTRYP PFNGLUNIFORMMATRIX3X4FVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
typedef void (APIENTRYP PFNGLUNIFORMMATRIX4X3FVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
// GL_VERSION_2_1

} // namespace axl::glfl::GL2

namespace GL3 {

// GL_VERSION_3_0
AXLGLFLAPI bool GL_VERSION_3_0;
typedef uint16_t GLhalf;
AXLGLFLCONSTMODIFIER GLconstant GL_COMPARE_REF_TO_TEXTURE = 0x884E;
AXLGLFLCONSTMODIFIER GLconstant GL_CLIP_DISTANCE0 = 0x3000;
AXLGLFLCONSTMODIFIER GLconstant GL_CLIP_DISTANCE1 = 0x3001;
AXLGLFLCONSTMODIFIER GLconstant GL_CLIP_DISTANCE2 = 0x3002;
AXLGLFLCONSTMODIFIER GLconstant GL_CLIP_DISTANCE3 = 0x3003;
AXLGLFLCONSTMODIFIER GLconstant GL_CLIP_DISTANCE4 = 0x3004;
AXLGLFLCONSTMODIFIER GLconstant GL_CLIP_DISTANCE5 = 0x3005;
AXLGLFLCONSTMODIFIER GLconstant GL_CLIP_DISTANCE6 = 0x3006;
AXLGLFLCONSTMODIFIER GLconstant GL_CLIP_DISTANCE7 = 0x3007;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_CLIP_DISTANCES = 0x0D32;
AXLGLFLCONSTMODIFIER GLconstant GL_MAJOR_VERSION = 0x821B;
AXLGLFLCONSTMODIFIER GLconstant GL_MINOR_VERSION = 0x821C;
AXLGLFLCONSTMODIFIER GLconstant GL_NUM_EXTENSIONS = 0x821D;
AXLGLFLCONSTMODIFIER GLconstant GL_CONTEXT_FLAGS = 0x821E;
AXLGLFLCONSTMODIFIER GLconstant GL_COMPRESSED_RED = 0x8225;
AXLGLFLCONSTMODIFIER GLconstant GL_COMPRESSED_RG = 0x8226;
AXLGLFLCONSTMODIFIER GLconstant GL_CONTEXT_FLAG_FORWARD_COMPATIBLE_BIT = 0x000000;01
AXLGLFLCONSTMODIFIER GLconstant GL_RGBA32F = 0x8814;
AXLGLFLCONSTMODIFIER GLconstant GL_RGB32F = 0x8815;
AXLGLFLCONSTMODIFIER GLconstant GL_RGBA16F = 0x881A;
AXLGLFLCONSTMODIFIER GLconstant GL_RGB16F = 0x881B;
AXLGLFLCONSTMODIFIER GLconstant GL_VERTEX_ATTRIB_ARRAY_INTEGER = 0x88FD;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_ARRAY_TEXTURE_LAYERS = 0x88FF;
AXLGLFLCONSTMODIFIER GLconstant GL_MIN_PROGRAM_TEXEL_OFFSET = 0x8904;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_PROGRAM_TEXEL_OFFSET = 0x8905;
AXLGLFLCONSTMODIFIER GLconstant GL_CLAMP_READ_COLOR = 0x891C;
AXLGLFLCONSTMODIFIER GLconstant GL_FIXED_ONLY = 0x891D;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_VARYING_COMPONENTS = 0x8B4B;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_1D_ARRAY = 0x8C18;
AXLGLFLCONSTMODIFIER GLconstant GL_PROXY_TEXTURE_1D_ARRAY = 0x8C19;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_2D_ARRAY = 0x8C1A;
AXLGLFLCONSTMODIFIER GLconstant GL_PROXY_TEXTURE_2D_ARRAY = 0x8C1B;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_BINDING_1D_ARRAY = 0x8C1C;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_BINDING_2D_ARRAY = 0x8C1D;
AXLGLFLCONSTMODIFIER GLconstant GL_R11F_G11F_B10F = 0x8C3A;
AXLGLFLCONSTMODIFIER GLconstant GL_UNSIGNED_INT_10F_11F_11F_REV = 0x8C3B;
AXLGLFLCONSTMODIFIER GLconstant GL_RGB9_E5 = 0x8C3D;
AXLGLFLCONSTMODIFIER GLconstant GL_UNSIGNED_INT_5_9_9_9_REV = 0x8C3E;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_SHARED_SIZE = 0x8C3F;
AXLGLFLCONSTMODIFIER GLconstant GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH = 0x8C76;
AXLGLFLCONSTMODIFIER GLconstant GL_TRANSFORM_FEEDBACK_BUFFER_MODE = 0x8C7F;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS = 0x8C80;
AXLGLFLCONSTMODIFIER GLconstant GL_TRANSFORM_FEEDBACK_VARYINGS = 0x8C83;
AXLGLFLCONSTMODIFIER GLconstant GL_TRANSFORM_FEEDBACK_BUFFER_START = 0x8C84;
AXLGLFLCONSTMODIFIER GLconstant GL_TRANSFORM_FEEDBACK_BUFFER_SIZE = 0x8C85;
AXLGLFLCONSTMODIFIER GLconstant GL_PRIMITIVES_GENERATED = 0x8C87;
AXLGLFLCONSTMODIFIER GLconstant GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN = 0x8C88;
AXLGLFLCONSTMODIFIER GLconstant GL_RASTERIZER_DISCARD = 0x8C89;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS = 0x8C8A;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS = 0x8C8B;
AXLGLFLCONSTMODIFIER GLconstant GL_INTERLEAVED_ATTRIBS = 0x8C8C;
AXLGLFLCONSTMODIFIER GLconstant GL_SEPARATE_ATTRIBS = 0x8C8D;
AXLGLFLCONSTMODIFIER GLconstant GL_TRANSFORM_FEEDBACK_BUFFER = 0x8C8E;
AXLGLFLCONSTMODIFIER GLconstant GL_TRANSFORM_FEEDBACK_BUFFER_BINDING = 0x8C8F;
AXLGLFLCONSTMODIFIER GLconstant GL_RGBA32UI = 0x8D70;
AXLGLFLCONSTMODIFIER GLconstant GL_RGB32UI = 0x8D71;
AXLGLFLCONSTMODIFIER GLconstant GL_RGBA16UI = 0x8D76;
AXLGLFLCONSTMODIFIER GLconstant GL_RGB16UI = 0x8D77;
AXLGLFLCONSTMODIFIER GLconstant GL_RGBA8UI = 0x8D7C;
AXLGLFLCONSTMODIFIER GLconstant GL_RGB8UI = 0x8D7D;
AXLGLFLCONSTMODIFIER GLconstant GL_RGBA32I = 0x8D82;
AXLGLFLCONSTMODIFIER GLconstant GL_RGB32I = 0x8D83;
AXLGLFLCONSTMODIFIER GLconstant GL_RGBA16I = 0x8D88;
AXLGLFLCONSTMODIFIER GLconstant GL_RGB16I = 0x8D89;
AXLGLFLCONSTMODIFIER GLconstant GL_RGBA8I = 0x8D8E;
AXLGLFLCONSTMODIFIER GLconstant GL_RGB8I = 0x8D8F;
AXLGLFLCONSTMODIFIER GLconstant GL_RED_INTEGER = 0x8D94;
AXLGLFLCONSTMODIFIER GLconstant GL_GREEN_INTEGER = 0x8D95;
AXLGLFLCONSTMODIFIER GLconstant GL_BLUE_INTEGER = 0x8D96;
AXLGLFLCONSTMODIFIER GLconstant GL_RGB_INTEGER = 0x8D98;
AXLGLFLCONSTMODIFIER GLconstant GL_RGBA_INTEGER = 0x8D99;
AXLGLFLCONSTMODIFIER GLconstant GL_BGR_INTEGER = 0x8D9A;
AXLGLFLCONSTMODIFIER GLconstant GL_BGRA_INTEGER = 0x8D9B;
AXLGLFLCONSTMODIFIER GLconstant GL_SAMPLER_1D_ARRAY = 0x8DC0;
AXLGLFLCONSTMODIFIER GLconstant GL_SAMPLER_2D_ARRAY = 0x8DC1;
AXLGLFLCONSTMODIFIER GLconstant GL_SAMPLER_1D_ARRAY_SHADOW = 0x8DC3;
AXLGLFLCONSTMODIFIER GLconstant GL_SAMPLER_2D_ARRAY_SHADOW = 0x8DC4;
AXLGLFLCONSTMODIFIER GLconstant GL_SAMPLER_CUBE_SHADOW = 0x8DC5;
AXLGLFLCONSTMODIFIER GLconstant GL_UNSIGNED_INT_VEC2 = 0x8DC6;
AXLGLFLCONSTMODIFIER GLconstant GL_UNSIGNED_INT_VEC3 = 0x8DC7;
AXLGLFLCONSTMODIFIER GLconstant GL_UNSIGNED_INT_VEC4 = 0x8DC8;
AXLGLFLCONSTMODIFIER GLconstant GL_INT_SAMPLER_1D = 0x8DC9;
AXLGLFLCONSTMODIFIER GLconstant GL_INT_SAMPLER_2D = 0x8DCA;
AXLGLFLCONSTMODIFIER GLconstant GL_INT_SAMPLER_3D = 0x8DCB;
AXLGLFLCONSTMODIFIER GLconstant GL_INT_SAMPLER_CUBE = 0x8DCC;
AXLGLFLCONSTMODIFIER GLconstant GL_INT_SAMPLER_1D_ARRAY = 0x8DCE;
AXLGLFLCONSTMODIFIER GLconstant GL_INT_SAMPLER_2D_ARRAY = 0x8DCF;
AXLGLFLCONSTMODIFIER GLconstant GL_UNSIGNED_INT_SAMPLER_1D = 0x8DD1;
AXLGLFLCONSTMODIFIER GLconstant GL_UNSIGNED_INT_SAMPLER_2D = 0x8DD2;
AXLGLFLCONSTMODIFIER GLconstant GL_UNSIGNED_INT_SAMPLER_3D = 0x8DD3;
AXLGLFLCONSTMODIFIER GLconstant GL_UNSIGNED_INT_SAMPLER_CUBE = 0x8DD4;
AXLGLFLCONSTMODIFIER GLconstant GL_UNSIGNED_INT_SAMPLER_1D_ARRAY = 0x8DD6;
AXLGLFLCONSTMODIFIER GLconstant GL_UNSIGNED_INT_SAMPLER_2D_ARRAY = 0x8DD7;
AXLGLFLCONSTMODIFIER GLconstant GL_QUERY_WAIT = 0x8E13;
AXLGLFLCONSTMODIFIER GLconstant GL_QUERY_NO_WAIT = 0x8E14;
AXLGLFLCONSTMODIFIER GLconstant GL_QUERY_BY_REGION_WAIT = 0x8E15;
AXLGLFLCONSTMODIFIER GLconstant GL_QUERY_BY_REGION_NO_WAIT = 0x8E16;
AXLGLFLCONSTMODIFIER GLconstant GL_BUFFER_ACCESS_FLAGS = 0x911F;
AXLGLFLCONSTMODIFIER GLconstant GL_BUFFER_MAP_LENGTH = 0x9120;
AXLGLFLCONSTMODIFIER GLconstant GL_BUFFER_MAP_OFFSET = 0x9121;
AXLGLFLCONSTMODIFIER GLconstant GL_DEPTH_COMPONENT32F = 0x8CAC;
AXLGLFLCONSTMODIFIER GLconstant GL_DEPTH32F_STENCIL8 = 0x8CAD;
AXLGLFLCONSTMODIFIER GLconstant GL_FLOAT_32_UNSIGNED_INT_24_8_REV = 0x8DAD;
AXLGLFLCONSTMODIFIER GLconstant GL_INVALID_FRAMEBUFFER_OPERATION = 0x0506;
AXLGLFLCONSTMODIFIER GLconstant GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING = 0x8210;
AXLGLFLCONSTMODIFIER GLconstant GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE = 0x8211;
AXLGLFLCONSTMODIFIER GLconstant GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE = 0x8212;
AXLGLFLCONSTMODIFIER GLconstant GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE = 0x8213;
AXLGLFLCONSTMODIFIER GLconstant GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE = 0x8214;
AXLGLFLCONSTMODIFIER GLconstant GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE = 0x8215;
AXLGLFLCONSTMODIFIER GLconstant GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE = 0x8216;
AXLGLFLCONSTMODIFIER GLconstant GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE = 0x8217;
AXLGLFLCONSTMODIFIER GLconstant GL_FRAMEBUFFER_DEFAULT = 0x8218;
AXLGLFLCONSTMODIFIER GLconstant GL_FRAMEBUFFER_UNDEFINED = 0x8219;
AXLGLFLCONSTMODIFIER GLconstant GL_DEPTH_STENCIL_ATTACHMENT = 0x821A;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_RENDERBUFFER_SIZE = 0x84E8;
AXLGLFLCONSTMODIFIER GLconstant GL_DEPTH_STENCIL = 0x84F9;
AXLGLFLCONSTMODIFIER GLconstant GL_UNSIGNED_INT_24_8 = 0x84FA;
AXLGLFLCONSTMODIFIER GLconstant GL_DEPTH24_STENCIL8 = 0x88F0;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_STENCIL_SIZE = 0x88F1;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_RED_TYPE = 0x8C10;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_GREEN_TYPE = 0x8C11;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_BLUE_TYPE = 0x8C12;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_ALPHA_TYPE = 0x8C13;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_DEPTH_TYPE = 0x8C16;
AXLGLFLCONSTMODIFIER GLconstant GL_UNSIGNED_NORMALIZED = 0x8C17;
AXLGLFLCONSTMODIFIER GLconstant GL_FRAMEBUFFER_BINDING = 0x8CA6;
AXLGLFLCONSTMODIFIER GLconstant GL_DRAW_FRAMEBUFFER_BINDING = 0x8CA6;
AXLGLFLCONSTMODIFIER GLconstant GL_RENDERBUFFER_BINDING = 0x8CA7;
AXLGLFLCONSTMODIFIER GLconstant GL_READ_FRAMEBUFFER = 0x8CA8;
AXLGLFLCONSTMODIFIER GLconstant GL_DRAW_FRAMEBUFFER = 0x8CA9;
AXLGLFLCONSTMODIFIER GLconstant GL_READ_FRAMEBUFFER_BINDING = 0x8CAA;
AXLGLFLCONSTMODIFIER GLconstant GL_RENDERBUFFER_SAMPLES = 0x8CAB;
AXLGLFLCONSTMODIFIER GLconstant GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE = 0x8CD0;
AXLGLFLCONSTMODIFIER GLconstant GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME = 0x8CD1;
AXLGLFLCONSTMODIFIER GLconstant GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL = 0x8CD2;
AXLGLFLCONSTMODIFIER GLconstant GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE = 0x8CD3;
AXLGLFLCONSTMODIFIER GLconstant GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER = 0x8CD4;
AXLGLFLCONSTMODIFIER GLconstant GL_FRAMEBUFFER_COMPLETE = 0x8CD5;
AXLGLFLCONSTMODIFIER GLconstant GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT = 0x8CD6;
AXLGLFLCONSTMODIFIER GLconstant GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT = 0x8CD7;
AXLGLFLCONSTMODIFIER GLconstant GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER = 0x8CDB;
AXLGLFLCONSTMODIFIER GLconstant GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER = 0x8CDC;
AXLGLFLCONSTMODIFIER GLconstant GL_FRAMEBUFFER_UNSUPPORTED = 0x8CDD;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_COLOR_ATTACHMENTS = 0x8CDF;
AXLGLFLCONSTMODIFIER GLconstant GL_COLOR_ATTACHMENT0 = 0x8CE0;
AXLGLFLCONSTMODIFIER GLconstant GL_COLOR_ATTACHMENT1 = 0x8CE1;
AXLGLFLCONSTMODIFIER GLconstant GL_COLOR_ATTACHMENT2 = 0x8CE2;
AXLGLFLCONSTMODIFIER GLconstant GL_COLOR_ATTACHMENT3 = 0x8CE3;
AXLGLFLCONSTMODIFIER GLconstant GL_COLOR_ATTACHMENT4 = 0x8CE4;
AXLGLFLCONSTMODIFIER GLconstant GL_COLOR_ATTACHMENT5 = 0x8CE5;
AXLGLFLCONSTMODIFIER GLconstant GL_COLOR_ATTACHMENT6 = 0x8CE6;
AXLGLFLCONSTMODIFIER GLconstant GL_COLOR_ATTACHMENT7 = 0x8CE7;
AXLGLFLCONSTMODIFIER GLconstant GL_COLOR_ATTACHMENT8 = 0x8CE8;
AXLGLFLCONSTMODIFIER GLconstant GL_COLOR_ATTACHMENT9 = 0x8CE9;
AXLGLFLCONSTMODIFIER GLconstant GL_COLOR_ATTACHMENT10 = 0x8CEA;
AXLGLFLCONSTMODIFIER GLconstant GL_COLOR_ATTACHMENT11 = 0x8CEB;
AXLGLFLCONSTMODIFIER GLconstant GL_COLOR_ATTACHMENT12 = 0x8CEC;
AXLGLFLCONSTMODIFIER GLconstant GL_COLOR_ATTACHMENT13 = 0x8CED;
AXLGLFLCONSTMODIFIER GLconstant GL_COLOR_ATTACHMENT14 = 0x8CEE;
AXLGLFLCONSTMODIFIER GLconstant GL_COLOR_ATTACHMENT15 = 0x8CEF;
AXLGLFLCONSTMODIFIER GLconstant GL_COLOR_ATTACHMENT16 = 0x8CF0;
AXLGLFLCONSTMODIFIER GLconstant GL_COLOR_ATTACHMENT17 = 0x8CF1;
AXLGLFLCONSTMODIFIER GLconstant GL_COLOR_ATTACHMENT18 = 0x8CF2;
AXLGLFLCONSTMODIFIER GLconstant GL_COLOR_ATTACHMENT19 = 0x8CF3;
AXLGLFLCONSTMODIFIER GLconstant GL_COLOR_ATTACHMENT20 = 0x8CF4;
AXLGLFLCONSTMODIFIER GLconstant GL_COLOR_ATTACHMENT21 = 0x8CF5;
AXLGLFLCONSTMODIFIER GLconstant GL_COLOR_ATTACHMENT22 = 0x8CF6;
AXLGLFLCONSTMODIFIER GLconstant GL_COLOR_ATTACHMENT23 = 0x8CF7;
AXLGLFLCONSTMODIFIER GLconstant GL_COLOR_ATTACHMENT24 = 0x8CF8;
AXLGLFLCONSTMODIFIER GLconstant GL_COLOR_ATTACHMENT25 = 0x8CF9;
AXLGLFLCONSTMODIFIER GLconstant GL_COLOR_ATTACHMENT26 = 0x8CFA;
AXLGLFLCONSTMODIFIER GLconstant GL_COLOR_ATTACHMENT27 = 0x8CFB;
AXLGLFLCONSTMODIFIER GLconstant GL_COLOR_ATTACHMENT28 = 0x8CFC;
AXLGLFLCONSTMODIFIER GLconstant GL_COLOR_ATTACHMENT29 = 0x8CFD;
AXLGLFLCONSTMODIFIER GLconstant GL_COLOR_ATTACHMENT30 = 0x8CFE;
AXLGLFLCONSTMODIFIER GLconstant GL_COLOR_ATTACHMENT31 = 0x8CFF;
AXLGLFLCONSTMODIFIER GLconstant GL_DEPTH_ATTACHMENT = 0x8D00;
AXLGLFLCONSTMODIFIER GLconstant GL_STENCIL_ATTACHMENT = 0x8D20;
AXLGLFLCONSTMODIFIER GLconstant GL_FRAMEBUFFER = 0x8D40;
AXLGLFLCONSTMODIFIER GLconstant GL_RENDERBUFFER = 0x8D41;
AXLGLFLCONSTMODIFIER GLconstant GL_RENDERBUFFER_WIDTH = 0x8D42;
AXLGLFLCONSTMODIFIER GLconstant GL_RENDERBUFFER_HEIGHT = 0x8D43;
AXLGLFLCONSTMODIFIER GLconstant GL_RENDERBUFFER_INTERNAL_FORMAT = 0x8D44;
AXLGLFLCONSTMODIFIER GLconstant GL_STENCIL_INDEX1 = 0x8D46;
AXLGLFLCONSTMODIFIER GLconstant GL_STENCIL_INDEX4 = 0x8D47;
AXLGLFLCONSTMODIFIER GLconstant GL_STENCIL_INDEX8 = 0x8D48;
AXLGLFLCONSTMODIFIER GLconstant GL_STENCIL_INDEX16 = 0x8D49;
AXLGLFLCONSTMODIFIER GLconstant GL_RENDERBUFFER_RED_SIZE = 0x8D50;
AXLGLFLCONSTMODIFIER GLconstant GL_RENDERBUFFER_GREEN_SIZE = 0x8D51;
AXLGLFLCONSTMODIFIER GLconstant GL_RENDERBUFFER_BLUE_SIZE = 0x8D52;
AXLGLFLCONSTMODIFIER GLconstant GL_RENDERBUFFER_ALPHA_SIZE = 0x8D53;
AXLGLFLCONSTMODIFIER GLconstant GL_RENDERBUFFER_DEPTH_SIZE = 0x8D54;
AXLGLFLCONSTMODIFIER GLconstant GL_RENDERBUFFER_STENCIL_SIZE = 0x8D55;
AXLGLFLCONSTMODIFIER GLconstant GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE = 0x8D56;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_SAMPLES = 0x8D57;
AXLGLFLCONSTMODIFIER GLconstant GL_INDEX = 0x8222;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_LUMINANCE_TYPE = 0x8C14;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_INTENSITY_TYPE = 0x8C15;
AXLGLFLCONSTMODIFIER GLconstant GL_FRAMEBUFFER_SRGB = 0x8DB9;
AXLGLFLCONSTMODIFIER GLconstant GL_HALF_FLOAT = 0x140B;
AXLGLFLCONSTMODIFIER GLconstant GL_MAP_READ_BIT = 0x0001;
AXLGLFLCONSTMODIFIER GLconstant GL_MAP_WRITE_BIT = 0x0002;
AXLGLFLCONSTMODIFIER GLconstant GL_MAP_INVALIDATE_RANGE_BIT = 0x0004;
AXLGLFLCONSTMODIFIER GLconstant GL_MAP_INVALIDATE_BUFFER_BIT = 0x0008;
AXLGLFLCONSTMODIFIER GLconstant GL_MAP_FLUSH_EXPLICIT_BIT = 0x0010;
AXLGLFLCONSTMODIFIER GLconstant GL_MAP_UNSYNCHRONIZED_BIT = 0x0020;
AXLGLFLCONSTMODIFIER GLconstant GL_COMPRESSED_RED_RGTC1 = 0x8DBB;
AXLGLFLCONSTMODIFIER GLconstant GL_COMPRESSED_SIGNED_RED_RGTC1 = 0x8DBC;
AXLGLFLCONSTMODIFIER GLconstant GL_COMPRESSED_RG_RGTC2 = 0x8DBD;
AXLGLFLCONSTMODIFIER GLconstant GL_COMPRESSED_SIGNED_RG_RGTC2 = 0x8DBE;
AXLGLFLCONSTMODIFIER GLconstant GL_RG = 0x8227;
AXLGLFLCONSTMODIFIER GLconstant GL_RG_INTEGER = 0x8228;
AXLGLFLCONSTMODIFIER GLconstant GL_R8 = 0x8229;
AXLGLFLCONSTMODIFIER GLconstant GL_R16 = 0x822A;
AXLGLFLCONSTMODIFIER GLconstant GL_RG8 = 0x822B;
AXLGLFLCONSTMODIFIER GLconstant GL_RG16 = 0x822C;
AXLGLFLCONSTMODIFIER GLconstant GL_R16F = 0x822D;
AXLGLFLCONSTMODIFIER GLconstant GL_R32F = 0x822E;
AXLGLFLCONSTMODIFIER GLconstant GL_RG16F = 0x822F;
AXLGLFLCONSTMODIFIER GLconstant GL_RG32F = 0x8230;
AXLGLFLCONSTMODIFIER GLconstant GL_R8I = 0x8231;
AXLGLFLCONSTMODIFIER GLconstant GL_R8UI = 0x8232;
AXLGLFLCONSTMODIFIER GLconstant GL_R16I = 0x8233;
AXLGLFLCONSTMODIFIER GLconstant GL_R16UI = 0x8234;
AXLGLFLCONSTMODIFIER GLconstant GL_R32I = 0x8235;
AXLGLFLCONSTMODIFIER GLconstant GL_R32UI = 0x8236;
AXLGLFLCONSTMODIFIER GLconstant GL_RG8I = 0x8237;
AXLGLFLCONSTMODIFIER GLconstant GL_RG8UI = 0x8238;
AXLGLFLCONSTMODIFIER GLconstant GL_RG16I = 0x8239;
AXLGLFLCONSTMODIFIER GLconstant GL_RG16UI = 0x823A;
AXLGLFLCONSTMODIFIER GLconstant GL_RG32I = 0x823B;
AXLGLFLCONSTMODIFIER GLconstant GL_RG32UI = 0x823C;
AXLGLFLCONSTMODIFIER GLconstant GL_VERTEX_ARRAY_BINDING = 0x85B5;
AXLGLFLCONSTMODIFIER GLconstant GL_CLAMP_VERTEX_COLOR = 0x891A;
AXLGLFLCONSTMODIFIER GLconstant GL_CLAMP_FRAGMENT_COLOR = 0x891B;
AXLGLFLCONSTMODIFIER GLconstant GL_ALPHA_INTEGER = 0x8D97;
typedef void (APIENTRYP PFNGLCOLORMASKIPROC) (GLuint index, GLboolean r, GLboolean g, GLboolean b, GLboolean a);
typedef void (APIENTRYP PFNGLGETBOOLEANI_VPROC) (GLenum target, GLuint index, GLboolean *data);
typedef void (APIENTRYP PFNGLGETINTEGERI_VPROC) (GLenum target, GLuint index, GLint *data);
typedef void (APIENTRYP PFNGLENABLEIPROC) (GLenum target, GLuint index);
typedef void (APIENTRYP PFNGLDISABLEIPROC) (GLenum target, GLuint index);
typedef GLboolean (APIENTRYP PFNGLISENABLEDIPROC) (GLenum target, GLuint index);
typedef void (APIENTRYP PFNGLBEGINTRANSFORMFEEDBACKPROC) (GLenum primitiveMode);
typedef void (APIENTRYP PFNGLENDTRANSFORMFEEDBACKPROC) (void);
typedef void (APIENTRYP PFNGLBINDBUFFERRANGEPROC) (GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size);
typedef void (APIENTRYP PFNGLBINDBUFFERBASEPROC) (GLenum target, GLuint index, GLuint buffer);
typedef void (APIENTRYP PFNGLTRANSFORMFEEDBACKVARYINGSPROC) (GLuint program, GLsizei count, const GLchar *const*varyings, GLenum bufferMode);
typedef void (APIENTRYP PFNGLGETTRANSFORMFEEDBACKVARYINGPROC) (GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLsizei *size, GLenum *type, GLchar *name);
typedef void (APIENTRYP PFNGLCLAMPCOLORPROC) (GLenum target, GLenum clamp);
typedef void (APIENTRYP PFNGLBEGINCONDITIONALRENDERPROC) (GLuint id, GLenum mode);
typedef void (APIENTRYP PFNGLENDCONDITIONALRENDERPROC) (void);
typedef void (APIENTRYP PFNGLVERTEXATTRIBIPOINTERPROC) (GLuint index, GLint size, GLenum type, GLsizei stride, const void *pointer);
typedef void (APIENTRYP PFNGLGETVERTEXATTRIBIIVPROC) (GLuint index, GLenum pname, GLint *params);
typedef void (APIENTRYP PFNGLGETVERTEXATTRIBIUIVPROC) (GLuint index, GLenum pname, GLuint *params);
typedef void (APIENTRYP PFNGLVERTEXATTRIBI1IPROC) (GLuint index, GLint x);
typedef void (APIENTRYP PFNGLVERTEXATTRIBI2IPROC) (GLuint index, GLint x, GLint y);
typedef void (APIENTRYP PFNGLVERTEXATTRIBI3IPROC) (GLuint index, GLint x, GLint y, GLint z);
typedef void (APIENTRYP PFNGLVERTEXATTRIBI4IPROC) (GLuint index, GLint x, GLint y, GLint z, GLint w);
typedef void (APIENTRYP PFNGLVERTEXATTRIBI1UIPROC) (GLuint index, GLuint x);
typedef void (APIENTRYP PFNGLVERTEXATTRIBI2UIPROC) (GLuint index, GLuint x, GLuint y);
typedef void (APIENTRYP PFNGLVERTEXATTRIBI3UIPROC) (GLuint index, GLuint x, GLuint y, GLuint z);
typedef void (APIENTRYP PFNGLVERTEXATTRIBI4UIPROC) (GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);
typedef void (APIENTRYP PFNGLVERTEXATTRIBI1IVPROC) (GLuint index, const GLint *v);
typedef void (APIENTRYP PFNGLVERTEXATTRIBI2IVPROC) (GLuint index, const GLint *v);
typedef void (APIENTRYP PFNGLVERTEXATTRIBI3IVPROC) (GLuint index, const GLint *v);
typedef void (APIENTRYP PFNGLVERTEXATTRIBI4IVPROC) (GLuint index, const GLint *v);
typedef void (APIENTRYP PFNGLVERTEXATTRIBI1UIVPROC) (GLuint index, const GLuint *v);
typedef void (APIENTRYP PFNGLVERTEXATTRIBI2UIVPROC) (GLuint index, const GLuint *v);
typedef void (APIENTRYP PFNGLVERTEXATTRIBI3UIVPROC) (GLuint index, const GLuint *v);
typedef void (APIENTRYP PFNGLVERTEXATTRIBI4UIVPROC) (GLuint index, const GLuint *v);
typedef void (APIENTRYP PFNGLVERTEXATTRIBI4BVPROC) (GLuint index, const GLbyte *v);
typedef void (APIENTRYP PFNGLVERTEXATTRIBI4SVPROC) (GLuint index, const GLshort *v);
typedef void (APIENTRYP PFNGLVERTEXATTRIBI4UBVPROC) (GLuint index, const GLubyte *v);
typedef void (APIENTRYP PFNGLVERTEXATTRIBI4USVPROC) (GLuint index, const GLushort *v);
typedef void (APIENTRYP PFNGLGETUNIFORMUIVPROC) (GLuint program, GLint location, GLuint *params);
typedef void (APIENTRYP PFNGLBINDFRAGDATALOCATIONPROC) (GLuint program, GLuint color, const GLchar *name);
typedef GLint (APIENTRYP PFNGLGETFRAGDATALOCATIONPROC) (GLuint program, const GLchar *name);
typedef void (APIENTRYP PFNGLUNIFORM1UIPROC) (GLint location, GLuint v0);
typedef void (APIENTRYP PFNGLUNIFORM2UIPROC) (GLint location, GLuint v0, GLuint v1);
typedef void (APIENTRYP PFNGLUNIFORM3UIPROC) (GLint location, GLuint v0, GLuint v1, GLuint v2);
typedef void (APIENTRYP PFNGLUNIFORM4UIPROC) (GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);
typedef void (APIENTRYP PFNGLUNIFORM1UIVPROC) (GLint location, GLsizei count, const GLuint *value);
typedef void (APIENTRYP PFNGLUNIFORM2UIVPROC) (GLint location, GLsizei count, const GLuint *value);
typedef void (APIENTRYP PFNGLUNIFORM3UIVPROC) (GLint location, GLsizei count, const GLuint *value);
typedef void (APIENTRYP PFNGLUNIFORM4UIVPROC) (GLint location, GLsizei count, const GLuint *value);
typedef void (APIENTRYP PFNGLTEXPARAMETERIIVPROC) (GLenum target, GLenum pname, const GLint *params);
typedef void (APIENTRYP PFNGLTEXPARAMETERIUIVPROC) (GLenum target, GLenum pname, const GLuint *params);
typedef void (APIENTRYP PFNGLGETTEXPARAMETERIIVPROC) (GLenum target, GLenum pname, GLint *params);
typedef void (APIENTRYP PFNGLGETTEXPARAMETERIUIVPROC) (GLenum target, GLenum pname, GLuint *params);
typedef void (APIENTRYP PFNGLCLEARBUFFERIVPROC) (GLenum buffer, GLint drawbuffer, const GLint *value);
typedef void (APIENTRYP PFNGLCLEARBUFFERUIVPROC) (GLenum buffer, GLint drawbuffer, const GLuint *value);
typedef void (APIENTRYP PFNGLCLEARBUFFERFVPROC) (GLenum buffer, GLint drawbuffer, const GLfloat *value);
typedef void (APIENTRYP PFNGLCLEARBUFFERFIPROC) (GLenum buffer, GLint drawbuffer, GLfloat depth, GLint stencil);
typedef const GLubyte *(APIENTRYP PFNGLGETSTRINGIPROC) (GLenum name, GLuint index);
typedef GLboolean (APIENTRYP PFNGLISRENDERBUFFERPROC) (GLuint renderbuffer);
typedef void (APIENTRYP PFNGLBINDRENDERBUFFERPROC) (GLenum target, GLuint renderbuffer);
typedef void (APIENTRYP PFNGLDELETERENDERBUFFERSPROC) (GLsizei n, const GLuint *renderbuffers);
typedef void (APIENTRYP PFNGLGENRENDERBUFFERSPROC) (GLsizei n, GLuint *renderbuffers);
typedef void (APIENTRYP PFNGLRENDERBUFFERSTORAGEPROC) (GLenum target, GLenum internalformat, GLsizei width, GLsizei height);
typedef void (APIENTRYP PFNGLGETRENDERBUFFERPARAMETERIVPROC) (GLenum target, GLenum pname, GLint *params);
typedef GLboolean (APIENTRYP PFNGLISFRAMEBUFFERPROC) (GLuint framebuffer);
typedef void (APIENTRYP PFNGLBINDFRAMEBUFFERPROC) (GLenum target, GLuint framebuffer);
typedef void (APIENTRYP PFNGLDELETEFRAMEBUFFERSPROC) (GLsizei n, const GLuint *framebuffers);
typedef void (APIENTRYP PFNGLGENFRAMEBUFFERSPROC) (GLsizei n, GLuint *framebuffers);
typedef GLenum (APIENTRYP PFNGLCHECKFRAMEBUFFERSTATUSPROC) (GLenum target);
typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTURE1DPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTURE2DPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTURE3DPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset);
typedef void (APIENTRYP PFNGLFRAMEBUFFERRENDERBUFFERPROC) (GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);
typedef void (APIENTRYP PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC) (GLenum target, GLenum attachment, GLenum pname, GLint *params);
typedef void (APIENTRYP PFNGLGENERATEMIPMAPPROC) (GLenum target);
typedef void (APIENTRYP PFNGLBLITFRAMEBUFFERPROC) (GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);
typedef void (APIENTRYP PFNGLRENDERBUFFERSTORAGEMULTISAMPLEPROC) (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTURELAYERPROC) (GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer);
typedef void *(APIENTRYP PFNGLMAPBUFFERRANGEPROC) (GLenum target, GLintptr offset, GLsizeiptr length, GLbitfield access);
typedef void (APIENTRYP PFNGLFLUSHMAPPEDBUFFERRANGEPROC) (GLenum target, GLintptr offset, GLsizeiptr length);
typedef void (APIENTRYP PFNGLBINDVERTEXARRAYPROC) (GLuint array);
typedef void (APIENTRYP PFNGLDELETEVERTEXARRAYSPROC) (GLsizei n, const GLuint *arrays);
typedef void (APIENTRYP PFNGLGENVERTEXARRAYSPROC) (GLsizei n, GLuint *arrays);
typedef GLboolean (APIENTRYP PFNGLISVERTEXARRAYPROC) (GLuint array);
// GL_VERSION_3_0

// GL_VERSION_3_1
AXLGLFLAPI bool GL_VERSION_3_1;
AXLGLFLCONSTMODIFIER GLconstant GL_SAMPLER_2D_RECT = 0x8B63;
AXLGLFLCONSTMODIFIER GLconstant GL_SAMPLER_2D_RECT_SHADOW = 0x8B64;
AXLGLFLCONSTMODIFIER GLconstant GL_SAMPLER_BUFFER = 0x8DC2;
AXLGLFLCONSTMODIFIER GLconstant GL_INT_SAMPLER_2D_RECT = 0x8DCD;
AXLGLFLCONSTMODIFIER GLconstant GL_INT_SAMPLER_BUFFER = 0x8DD0;
AXLGLFLCONSTMODIFIER GLconstant GL_UNSIGNED_INT_SAMPLER_2D_RECT = 0x8DD5;
AXLGLFLCONSTMODIFIER GLconstant GL_UNSIGNED_INT_SAMPLER_BUFFER = 0x8DD8;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_BUFFER = 0x8C2A;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_TEXTURE_BUFFER_SIZE = 0x8C2B;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_BINDING_BUFFER = 0x8C2C;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_BUFFER_DATA_STORE_BINDING = 0x8C2D;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_RECTANGLE = 0x84F5;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_BINDING_RECTANGLE = 0x84F6;
AXLGLFLCONSTMODIFIER GLconstant GL_PROXY_TEXTURE_RECTANGLE = 0x84F7;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_RECTANGLE_TEXTURE_SIZE = 0x84F8;
AXLGLFLCONSTMODIFIER GLconstant GL_R8_SNORM = 0x8F94;
AXLGLFLCONSTMODIFIER GLconstant GL_RG8_SNORM = 0x8F95;
AXLGLFLCONSTMODIFIER GLconstant GL_RGB8_SNORM = 0x8F96;
AXLGLFLCONSTMODIFIER GLconstant GL_RGBA8_SNORM = 0x8F97;
AXLGLFLCONSTMODIFIER GLconstant GL_R16_SNORM = 0x8F98;
AXLGLFLCONSTMODIFIER GLconstant GL_RG16_SNORM = 0x8F99;
AXLGLFLCONSTMODIFIER GLconstant GL_RGB16_SNORM = 0x8F9A;
AXLGLFLCONSTMODIFIER GLconstant GL_RGBA16_SNORM = 0x8F9B;
AXLGLFLCONSTMODIFIER GLconstant GL_SIGNED_NORMALIZED = 0x8F9C;
AXLGLFLCONSTMODIFIER GLconstant GL_PRIMITIVE_RESTART = 0x8F9D;
AXLGLFLCONSTMODIFIER GLconstant GL_PRIMITIVE_RESTART_INDEX = 0x8F9E;
AXLGLFLCONSTMODIFIER GLconstant GL_COPY_READ_BUFFER = 0x8F36;
AXLGLFLCONSTMODIFIER GLconstant GL_COPY_WRITE_BUFFER = 0x8F37;
AXLGLFLCONSTMODIFIER GLconstant GL_UNIFORM_BUFFER = 0x8A11;
AXLGLFLCONSTMODIFIER GLconstant GL_UNIFORM_BUFFER_BINDING = 0x8A28;
AXLGLFLCONSTMODIFIER GLconstant GL_UNIFORM_BUFFER_START = 0x8A29;
AXLGLFLCONSTMODIFIER GLconstant GL_UNIFORM_BUFFER_SIZE = 0x8A2A;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_VERTEX_UNIFORM_BLOCKS = 0x8A2B;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_GEOMETRY_UNIFORM_BLOCKS = 0x8A2C;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_FRAGMENT_UNIFORM_BLOCKS = 0x8A2D;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_COMBINED_UNIFORM_BLOCKS = 0x8A2E;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_UNIFORM_BUFFER_BINDINGS = 0x8A2F;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_UNIFORM_BLOCK_SIZE = 0x8A30;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS = 0x8A31;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS = 0x8A32;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS = 0x8A33;
AXLGLFLCONSTMODIFIER GLconstant GL_UNIFORM_BUFFER_OFFSET_ALIGNMENT = 0x8A34;
AXLGLFLCONSTMODIFIER GLconstant GL_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH = 0x8A35;
AXLGLFLCONSTMODIFIER GLconstant GL_ACTIVE_UNIFORM_BLOCKS = 0x8A36;
AXLGLFLCONSTMODIFIER GLconstant GL_UNIFORM_TYPE = 0x8A37;
AXLGLFLCONSTMODIFIER GLconstant GL_UNIFORM_SIZE = 0x8A38;
AXLGLFLCONSTMODIFIER GLconstant GL_UNIFORM_NAME_LENGTH = 0x8A39;
AXLGLFLCONSTMODIFIER GLconstant GL_UNIFORM_BLOCK_INDEX = 0x8A3A;
AXLGLFLCONSTMODIFIER GLconstant GL_UNIFORM_OFFSET = 0x8A3B;
AXLGLFLCONSTMODIFIER GLconstant GL_UNIFORM_ARRAY_STRIDE = 0x8A3C;
AXLGLFLCONSTMODIFIER GLconstant GL_UNIFORM_MATRIX_STRIDE = 0x8A3D;
AXLGLFLCONSTMODIFIER GLconstant GL_UNIFORM_IS_ROW_MAJOR = 0x8A3E;
AXLGLFLCONSTMODIFIER GLconstant GL_UNIFORM_BLOCK_BINDING = 0x8A3F;
AXLGLFLCONSTMODIFIER GLconstant GL_UNIFORM_BLOCK_DATA_SIZE = 0x8A40;
AXLGLFLCONSTMODIFIER GLconstant GL_UNIFORM_BLOCK_NAME_LENGTH = 0x8A41;
AXLGLFLCONSTMODIFIER GLconstant GL_UNIFORM_BLOCK_ACTIVE_UNIFORMS = 0x8A42;
AXLGLFLCONSTMODIFIER GLconstant GL_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES = 0x8A43;
AXLGLFLCONSTMODIFIER GLconstant GL_UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER = 0x8A44;
AXLGLFLCONSTMODIFIER GLconstant GL_UNIFORM_BLOCK_REFERENCED_BY_GEOMETRY_SHADER = 0x8A45;
AXLGLFLCONSTMODIFIER GLconstant GL_UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER = 0x8A46;
AXLGLFLCONSTMODIFIER GLconstant GL_INVALID_INDEX = 0xFFFFFF;FFu
typedef void (APIENTRYP PFNGLDRAWARRAYSINSTANCEDPROC) (GLenum mode, GLint first, GLsizei count, GLsizei instancecount);
typedef void (APIENTRYP PFNGLDRAWELEMENTSINSTANCEDPROC) (GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount);
typedef void (APIENTRYP PFNGLTEXBUFFERPROC) (GLenum target, GLenum internalformat, GLuint buffer);
typedef void (APIENTRYP PFNGLPRIMITIVERESTARTINDEXPROC) (GLuint index);
typedef void (APIENTRYP PFNGLCOPYBUFFERSUBDATAPROC) (GLenum readTarget, GLenum writeTarget, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size);
typedef void (APIENTRYP PFNGLGETUNIFORMINDICESPROC) (GLuint program, GLsizei uniformCount, const GLchar *const*uniformNames, GLuint *uniformIndices);
typedef void (APIENTRYP PFNGLGETACTIVEUNIFORMSIVPROC) (GLuint program, GLsizei uniformCount, const GLuint *uniformIndices, GLenum pname, GLint *params);
typedef void (APIENTRYP PFNGLGETACTIVEUNIFORMNAMEPROC) (GLuint program, GLuint uniformIndex, GLsizei bufSize, GLsizei *length, GLchar *uniformName);
typedef GLuint (APIENTRYP PFNGLGETUNIFORMBLOCKINDEXPROC) (GLuint program, const GLchar *uniformBlockName);
typedef void (APIENTRYP PFNGLGETACTIVEUNIFORMBLOCKIVPROC) (GLuint program, GLuint uniformBlockIndex, GLenum pname, GLint *params);
typedef void (APIENTRYP PFNGLGETACTIVEUNIFORMBLOCKNAMEPROC) (GLuint program, GLuint uniformBlockIndex, GLsizei bufSize, GLsizei *length, GLchar *uniformBlockName);
typedef void (APIENTRYP PFNGLUNIFORMBLOCKBINDINGPROC) (GLuint program, GLuint uniformBlockIndex, GLuint uniformBlockBinding);
// GL_VERSION_3_1

// GL_VERSION_3_2
AXLGLFLAPI bool GL_VERSION_3_2;
typedef struct __GLsync *GLsync;
typedef uint64_t GLuint64;
typedef int64_t GLint64;
AXLGLFLCONSTMODIFIER GLconstant GL_CONTEXT_CORE_PROFILE_BIT = 0x000000;01
AXLGLFLCONSTMODIFIER GLconstant GL_CONTEXT_COMPATIBILITY_PROFILE_BIT = 0x000000;02
AXLGLFLCONSTMODIFIER GLconstant GL_LINES_ADJACENCY = 0x000A;
AXLGLFLCONSTMODIFIER GLconstant GL_LINE_STRIP_ADJACENCY = 0x000B;
AXLGLFLCONSTMODIFIER GLconstant GL_TRIANGLES_ADJACENCY = 0x000C;
AXLGLFLCONSTMODIFIER GLconstant GL_TRIANGLE_STRIP_ADJACENCY = 0x000D;
AXLGLFLCONSTMODIFIER GLconstant GL_PROGRAM_POINT_SIZE = 0x8642;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS = 0x8C29;
AXLGLFLCONSTMODIFIER GLconstant GL_FRAMEBUFFER_ATTACHMENT_LAYERED = 0x8DA7;
AXLGLFLCONSTMODIFIER GLconstant GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS = 0x8DA8;
AXLGLFLCONSTMODIFIER GLconstant GL_GEOMETRY_SHADER = 0x8DD9;
AXLGLFLCONSTMODIFIER GLconstant GL_GEOMETRY_VERTICES_OUT = 0x8916;
AXLGLFLCONSTMODIFIER GLconstant GL_GEOMETRY_INPUT_TYPE = 0x8917;
AXLGLFLCONSTMODIFIER GLconstant GL_GEOMETRY_OUTPUT_TYPE = 0x8918;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_GEOMETRY_UNIFORM_COMPONENTS = 0x8DDF;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_GEOMETRY_OUTPUT_VERTICES = 0x8DE0;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS = 0x8DE1;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_VERTEX_OUTPUT_COMPONENTS = 0x9122;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_GEOMETRY_INPUT_COMPONENTS = 0x9123;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_GEOMETRY_OUTPUT_COMPONENTS = 0x9124;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_FRAGMENT_INPUT_COMPONENTS = 0x9125;
AXLGLFLCONSTMODIFIER GLconstant GL_CONTEXT_PROFILE_MASK = 0x9126;
AXLGLFLCONSTMODIFIER GLconstant GL_DEPTH_CLAMP = 0x864F;
AXLGLFLCONSTMODIFIER GLconstant GL_QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION = 0x8E4C;
AXLGLFLCONSTMODIFIER GLconstant GL_FIRST_VERTEX_CONVENTION = 0x8E4D;
AXLGLFLCONSTMODIFIER GLconstant GL_LAST_VERTEX_CONVENTION = 0x8E4E;
AXLGLFLCONSTMODIFIER GLconstant GL_PROVOKING_VERTEX = 0x8E4F;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_CUBE_MAP_SEAMLESS = 0x884F;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_SERVER_WAIT_TIMEOUT = 0x9111;
AXLGLFLCONSTMODIFIER GLconstant GL_OBJECT_TYPE = 0x9112;
AXLGLFLCONSTMODIFIER GLconstant GL_SYNC_CONDITION = 0x9113;
AXLGLFLCONSTMODIFIER GLconstant GL_SYNC_STATUS = 0x9114;
AXLGLFLCONSTMODIFIER GLconstant GL_SYNC_FLAGS = 0x9115;
AXLGLFLCONSTMODIFIER GLconstant GL_SYNC_FENCE = 0x9116;
AXLGLFLCONSTMODIFIER GLconstant GL_SYNC_GPU_COMMANDS_COMPLETE = 0x9117;
AXLGLFLCONSTMODIFIER GLconstant GL_UNSIGNALED = 0x9118;
AXLGLFLCONSTMODIFIER GLconstant GL_SIGNALED = 0x9119;
AXLGLFLCONSTMODIFIER GLconstant GL_ALREADY_SIGNALED = 0x911A;
AXLGLFLCONSTMODIFIER GLconstant GL_TIMEOUT_EXPIRED = 0x911B;
AXLGLFLCONSTMODIFIER GLconstant GL_CONDITION_SATISFIED = 0x911C;
AXLGLFLCONSTMODIFIER GLconstant GL_WAIT_FAILED = 0x911D;
AXLGLFLCONSTMODIFIER GLLconstant GL_TIMEOUT_IGNORED = 0xFFFFFFFFFFFFFFFFull;
AXLGLFLCONSTMODIFIER GLconstant GL_SYNC_FLUSH_COMMANDS_BIT = 0x000000;01
AXLGLFLCONSTMODIFIER GLconstant GL_SAMPLE_POSITION = 0x8E50;
AXLGLFLCONSTMODIFIER GLconstant GL_SAMPLE_MASK = 0x8E51;
AXLGLFLCONSTMODIFIER GLconstant GL_SAMPLE_MASK_VALUE = 0x8E52;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_SAMPLE_MASK_WORDS = 0x8E59;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_2D_MULTISAMPLE = 0x9100;
AXLGLFLCONSTMODIFIER GLconstant GL_PROXY_TEXTURE_2D_MULTISAMPLE = 0x9101;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_2D_MULTISAMPLE_ARRAY = 0x9102;
AXLGLFLCONSTMODIFIER GLconstant GL_PROXY_TEXTURE_2D_MULTISAMPLE_ARRAY = 0x9103;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_BINDING_2D_MULTISAMPLE = 0x9104;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY = 0x9105;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_SAMPLES = 0x9106;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_FIXED_SAMPLE_LOCATIONS = 0x9107;
AXLGLFLCONSTMODIFIER GLconstant GL_SAMPLER_2D_MULTISAMPLE = 0x9108;
AXLGLFLCONSTMODIFIER GLconstant GL_INT_SAMPLER_2D_MULTISAMPLE = 0x9109;
AXLGLFLCONSTMODIFIER GLconstant GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE = 0x910A;
AXLGLFLCONSTMODIFIER GLconstant GL_SAMPLER_2D_MULTISAMPLE_ARRAY = 0x910B;
AXLGLFLCONSTMODIFIER GLconstant GL_INT_SAMPLER_2D_MULTISAMPLE_ARRAY = 0x910C;
AXLGLFLCONSTMODIFIER GLconstant GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY = 0x910D;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_COLOR_TEXTURE_SAMPLES = 0x910E;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_DEPTH_TEXTURE_SAMPLES = 0x910F;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_INTEGER_SAMPLES = 0x9110;
typedef void (APIENTRYP PFNGLDRAWELEMENTSBASEVERTEXPROC) (GLenum mode, GLsizei count, GLenum type, const void *indices, GLint basevertex);
typedef void (APIENTRYP PFNGLDRAWRANGEELEMENTSBASEVERTEXPROC) (GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void *indices, GLint basevertex);
typedef void (APIENTRYP PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXPROC) (GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount, GLint basevertex);
typedef void (APIENTRYP PFNGLMULTIDRAWELEMENTSBASEVERTEXPROC) (GLenum mode, const GLsizei *count, GLenum type, const void *const*indices, GLsizei drawcount, const GLint *basevertex);
typedef void (APIENTRYP PFNGLPROVOKINGVERTEXPROC) (GLenum mode);
typedef GLsync (APIENTRYP PFNGLFENCESYNCPROC) (GLenum condition, GLbitfield flags);
typedef GLboolean (APIENTRYP PFNGLISSYNCPROC) (GLsync sync);
typedef void (APIENTRYP PFNGLDELETESYNCPROC) (GLsync sync);
typedef GLenum (APIENTRYP PFNGLCLIENTWAITSYNCPROC) (GLsync sync, GLbitfield flags, GLuint64 timeout);
typedef void (APIENTRYP PFNGLWAITSYNCPROC) (GLsync sync, GLbitfield flags, GLuint64 timeout);
typedef void (APIENTRYP PFNGLGETINTEGER64VPROC) (GLenum pname, GLint64 *data);
typedef void (APIENTRYP PFNGLGETSYNCIVPROC) (GLsync sync, GLenum pname, GLsizei count, GLsizei *length, GLint *values);
typedef void (APIENTRYP PFNGLGETINTEGER64I_VPROC) (GLenum target, GLuint index, GLint64 *data);
typedef void (APIENTRYP PFNGLGETBUFFERPARAMETERI64VPROC) (GLenum target, GLenum pname, GLint64 *params);
typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTUREPROC) (GLenum target, GLenum attachment, GLuint texture, GLint level);
typedef void (APIENTRYP PFNGLTEXIMAGE2DMULTISAMPLEPROC) (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations);
typedef void (APIENTRYP PFNGLTEXIMAGE3DMULTISAMPLEPROC) (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);
typedef void (APIENTRYP PFNGLGETMULTISAMPLEFVPROC) (GLenum pname, GLuint index, GLfloat *val);
typedef void (APIENTRYP PFNGLSAMPLEMASKIPROC) (GLuint maskNumber, GLbitfield mask);
// GL_VERSION_3_2

// GL_VERSION_3_3
AXLGLFLAPI bool GL_VERSION_3_3;
AXLGLFLCONSTMODIFIER GLconstant GL_VERTEX_ATTRIB_ARRAY_DIVISOR = 0x88FE;
AXLGLFLCONSTMODIFIER GLconstant GL_SRC1_COLOR = 0x88F9;
AXLGLFLCONSTMODIFIER GLconstant GL_ONE_MINUS_SRC1_COLOR = 0x88FA;
AXLGLFLCONSTMODIFIER GLconstant GL_ONE_MINUS_SRC1_ALPHA = 0x88FB;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_DUAL_SOURCE_DRAW_BUFFERS = 0x88FC;
AXLGLFLCONSTMODIFIER GLconstant GL_ANY_SAMPLES_PASSED = 0x8C2F;
AXLGLFLCONSTMODIFIER GLconstant GL_SAMPLER_BINDING = 0x8919;
AXLGLFLCONSTMODIFIER GLconstant GL_RGB10_A2UI = 0x906F;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_SWIZZLE_R = 0x8E42;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_SWIZZLE_G = 0x8E43;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_SWIZZLE_B = 0x8E44;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_SWIZZLE_A = 0x8E45;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_SWIZZLE_RGBA = 0x8E46;
AXLGLFLCONSTMODIFIER GLconstant GL_TIME_ELAPSED = 0x88BF;
AXLGLFLCONSTMODIFIER GLconstant GL_TIMESTAMP = 0x8E28;
AXLGLFLCONSTMODIFIER GLconstant GL_INT_2_10_10_10_REV = 0x8D9F;
typedef void (APIENTRYP PFNGLBINDFRAGDATALOCATIONINDEXEDPROC) (GLuint program, GLuint colorNumber, GLuint index, const GLchar *name);
typedef GLint (APIENTRYP PFNGLGETFRAGDATAINDEXPROC) (GLuint program, const GLchar *name);
typedef void (APIENTRYP PFNGLGENSAMPLERSPROC) (GLsizei count, GLuint *samplers);
typedef void (APIENTRYP PFNGLDELETESAMPLERSPROC) (GLsizei count, const GLuint *samplers);
typedef GLboolean (APIENTRYP PFNGLISSAMPLERPROC) (GLuint sampler);
typedef void (APIENTRYP PFNGLBINDSAMPLERPROC) (GLuint unit, GLuint sampler);
typedef void (APIENTRYP PFNGLSAMPLERPARAMETERIPROC) (GLuint sampler, GLenum pname, GLint param);
typedef void (APIENTRYP PFNGLSAMPLERPARAMETERIVPROC) (GLuint sampler, GLenum pname, const GLint *param);
typedef void (APIENTRYP PFNGLSAMPLERPARAMETERFPROC) (GLuint sampler, GLenum pname, GLfloat param);
typedef void (APIENTRYP PFNGLSAMPLERPARAMETERFVPROC) (GLuint sampler, GLenum pname, const GLfloat *param);
typedef void (APIENTRYP PFNGLSAMPLERPARAMETERIIVPROC) (GLuint sampler, GLenum pname, const GLint *param);
typedef void (APIENTRYP PFNGLSAMPLERPARAMETERIUIVPROC) (GLuint sampler, GLenum pname, const GLuint *param);
typedef void (APIENTRYP PFNGLGETSAMPLERPARAMETERIVPROC) (GLuint sampler, GLenum pname, GLint *params);
typedef void (APIENTRYP PFNGLGETSAMPLERPARAMETERIIVPROC) (GLuint sampler, GLenum pname, GLint *params);
typedef void (APIENTRYP PFNGLGETSAMPLERPARAMETERFVPROC) (GLuint sampler, GLenum pname, GLfloat *params);
typedef void (APIENTRYP PFNGLGETSAMPLERPARAMETERIUIVPROC) (GLuint sampler, GLenum pname, GLuint *params);
typedef void (APIENTRYP PFNGLQUERYCOUNTERPROC) (GLuint id, GLenum target);
typedef void (APIENTRYP PFNGLGETQUERYOBJECTI64VPROC) (GLuint id, GLenum pname, GLint64 *params);
typedef void (APIENTRYP PFNGLGETQUERYOBJECTUI64VPROC) (GLuint id, GLenum pname, GLuint64 *params);
typedef void (APIENTRYP PFNGLVERTEXATTRIBDIVISORPROC) (GLuint index, GLuint divisor);
typedef void (APIENTRYP PFNGLVERTEXATTRIBP1UIPROC) (GLuint index, GLenum type, GLboolean normalized, GLuint value);
typedef void (APIENTRYP PFNGLVERTEXATTRIBP1UIVPROC) (GLuint index, GLenum type, GLboolean normalized, const GLuint *value);
typedef void (APIENTRYP PFNGLVERTEXATTRIBP2UIPROC) (GLuint index, GLenum type, GLboolean normalized, GLuint value);
typedef void (APIENTRYP PFNGLVERTEXATTRIBP2UIVPROC) (GLuint index, GLenum type, GLboolean normalized, const GLuint *value);
typedef void (APIENTRYP PFNGLVERTEXATTRIBP3UIPROC) (GLuint index, GLenum type, GLboolean normalized, GLuint value);
typedef void (APIENTRYP PFNGLVERTEXATTRIBP3UIVPROC) (GLuint index, GLenum type, GLboolean normalized, const GLuint *value);
typedef void (APIENTRYP PFNGLVERTEXATTRIBP4UIPROC) (GLuint index, GLenum type, GLboolean normalized, GLuint value);
typedef void (APIENTRYP PFNGLVERTEXATTRIBP4UIVPROC) (GLuint index, GLenum type, GLboolean normalized, const GLuint *value);
typedef void (APIENTRYP PFNGLVERTEXP2UIPROC) (GLenum type, GLuint value);
typedef void (APIENTRYP PFNGLVERTEXP2UIVPROC) (GLenum type, const GLuint *value);
typedef void (APIENTRYP PFNGLVERTEXP3UIPROC) (GLenum type, GLuint value);
typedef void (APIENTRYP PFNGLVERTEXP3UIVPROC) (GLenum type, const GLuint *value);
typedef void (APIENTRYP PFNGLVERTEXP4UIPROC) (GLenum type, GLuint value);
typedef void (APIENTRYP PFNGLVERTEXP4UIVPROC) (GLenum type, const GLuint *value);
typedef void (APIENTRYP PFNGLTEXCOORDP1UIPROC) (GLenum type, GLuint coords);
typedef void (APIENTRYP PFNGLTEXCOORDP1UIVPROC) (GLenum type, const GLuint *coords);
typedef void (APIENTRYP PFNGLTEXCOORDP2UIPROC) (GLenum type, GLuint coords);
typedef void (APIENTRYP PFNGLTEXCOORDP2UIVPROC) (GLenum type, const GLuint *coords);
typedef void (APIENTRYP PFNGLTEXCOORDP3UIPROC) (GLenum type, GLuint coords);
typedef void (APIENTRYP PFNGLTEXCOORDP3UIVPROC) (GLenum type, const GLuint *coords);
typedef void (APIENTRYP PFNGLTEXCOORDP4UIPROC) (GLenum type, GLuint coords);
typedef void (APIENTRYP PFNGLTEXCOORDP4UIVPROC) (GLenum type, const GLuint *coords);
typedef void (APIENTRYP PFNGLMULTITEXCOORDP1UIPROC) (GLenum texture, GLenum type, GLuint coords);
typedef void (APIENTRYP PFNGLMULTITEXCOORDP1UIVPROC) (GLenum texture, GLenum type, const GLuint *coords);
typedef void (APIENTRYP PFNGLMULTITEXCOORDP2UIPROC) (GLenum texture, GLenum type, GLuint coords);
typedef void (APIENTRYP PFNGLMULTITEXCOORDP2UIVPROC) (GLenum texture, GLenum type, const GLuint *coords);
typedef void (APIENTRYP PFNGLMULTITEXCOORDP3UIPROC) (GLenum texture, GLenum type, GLuint coords);
typedef void (APIENTRYP PFNGLMULTITEXCOORDP3UIVPROC) (GLenum texture, GLenum type, const GLuint *coords);
typedef void (APIENTRYP PFNGLMULTITEXCOORDP4UIPROC) (GLenum texture, GLenum type, GLuint coords);
typedef void (APIENTRYP PFNGLMULTITEXCOORDP4UIVPROC) (GLenum texture, GLenum type, const GLuint *coords);
typedef void (APIENTRYP PFNGLNORMALP3UIPROC) (GLenum type, GLuint coords);
typedef void (APIENTRYP PFNGLNORMALP3UIVPROC) (GLenum type, const GLuint *coords);
typedef void (APIENTRYP PFNGLCOLORP3UIPROC) (GLenum type, GLuint color);
typedef void (APIENTRYP PFNGLCOLORP3UIVPROC) (GLenum type, const GLuint *color);
typedef void (APIENTRYP PFNGLCOLORP4UIPROC) (GLenum type, GLuint color);
typedef void (APIENTRYP PFNGLCOLORP4UIVPROC) (GLenum type, const GLuint *color);
typedef void (APIENTRYP PFNGLSECONDARYCOLORP3UIPROC) (GLenum type, GLuint color);
typedef void (APIENTRYP PFNGLSECONDARYCOLORP3UIVPROC) (GLenum type, const GLuint *color);
// GL_VERSION_3_3

} // namespace axl::glfl::GL3

namespace GL4 {

// GL_VERSION_4_0
AXLGLFLAPI bool GL_VERSION_4_0;
AXLGLFLCONSTMODIFIER GLconstant GL_SAMPLE_SHADING = 0x8C36;
AXLGLFLCONSTMODIFIER GLconstant GL_MIN_SAMPLE_SHADING_VALUE = 0x8C37;
AXLGLFLCONSTMODIFIER GLconstant GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET = 0x8E5E;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET = 0x8E5F;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_CUBE_MAP_ARRAY = 0x9009;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_BINDING_CUBE_MAP_ARRAY = 0x900A;
AXLGLFLCONSTMODIFIER GLconstant GL_PROXY_TEXTURE_CUBE_MAP_ARRAY = 0x900B;
AXLGLFLCONSTMODIFIER GLconstant GL_SAMPLER_CUBE_MAP_ARRAY = 0x900C;
AXLGLFLCONSTMODIFIER GLconstant GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW = 0x900D;
AXLGLFLCONSTMODIFIER GLconstant GL_INT_SAMPLER_CUBE_MAP_ARRAY = 0x900E;
AXLGLFLCONSTMODIFIER GLconstant GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY = 0x900F;
AXLGLFLCONSTMODIFIER GLconstant GL_DRAW_INDIRECT_BUFFER = 0x8F3F;
AXLGLFLCONSTMODIFIER GLconstant GL_DRAW_INDIRECT_BUFFER_BINDING = 0x8F43;
AXLGLFLCONSTMODIFIER GLconstant GL_GEOMETRY_SHADER_INVOCATIONS = 0x887F;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_GEOMETRY_SHADER_INVOCATIONS = 0x8E5A;
AXLGLFLCONSTMODIFIER GLconstant GL_MIN_FRAGMENT_INTERPOLATION_OFFSET = 0x8E5B;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_FRAGMENT_INTERPOLATION_OFFSET = 0x8E5C;
AXLGLFLCONSTMODIFIER GLconstant GL_FRAGMENT_INTERPOLATION_OFFSET_BITS = 0x8E5D;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_VERTEX_STREAMS = 0x8E71;
AXLGLFLCONSTMODIFIER GLconstant GL_DOUBLE_VEC2 = 0x8FFC;
AXLGLFLCONSTMODIFIER GLconstant GL_DOUBLE_VEC3 = 0x8FFD;
AXLGLFLCONSTMODIFIER GLconstant GL_DOUBLE_VEC4 = 0x8FFE;
AXLGLFLCONSTMODIFIER GLconstant GL_DOUBLE_MAT2 = 0x8F46;
AXLGLFLCONSTMODIFIER GLconstant GL_DOUBLE_MAT3 = 0x8F47;
AXLGLFLCONSTMODIFIER GLconstant GL_DOUBLE_MAT4 = 0x8F48;
AXLGLFLCONSTMODIFIER GLconstant GL_DOUBLE_MAT2x3 = 0x8F49;
AXLGLFLCONSTMODIFIER GLconstant GL_DOUBLE_MAT2x4 = 0x8F4A;
AXLGLFLCONSTMODIFIER GLconstant GL_DOUBLE_MAT3x2 = 0x8F4B;
AXLGLFLCONSTMODIFIER GLconstant GL_DOUBLE_MAT3x4 = 0x8F4C;
AXLGLFLCONSTMODIFIER GLconstant GL_DOUBLE_MAT4x2 = 0x8F4D;
AXLGLFLCONSTMODIFIER GLconstant GL_DOUBLE_MAT4x3 = 0x8F4E;
AXLGLFLCONSTMODIFIER GLconstant GL_ACTIVE_SUBROUTINES = 0x8DE5;
AXLGLFLCONSTMODIFIER GLconstant GL_ACTIVE_SUBROUTINE_UNIFORMS = 0x8DE6;
AXLGLFLCONSTMODIFIER GLconstant GL_ACTIVE_SUBROUTINE_UNIFORM_LOCATIONS = 0x8E47;
AXLGLFLCONSTMODIFIER GLconstant GL_ACTIVE_SUBROUTINE_MAX_LENGTH = 0x8E48;
AXLGLFLCONSTMODIFIER GLconstant GL_ACTIVE_SUBROUTINE_UNIFORM_MAX_LENGTH = 0x8E49;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_SUBROUTINES = 0x8DE7;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_SUBROUTINE_UNIFORM_LOCATIONS = 0x8DE8;
AXLGLFLCONSTMODIFIER GLconstant GL_NUM_COMPATIBLE_SUBROUTINES = 0x8E4A;
AXLGLFLCONSTMODIFIER GLconstant GL_COMPATIBLE_SUBROUTINES = 0x8E4B;
AXLGLFLCONSTMODIFIER GLconstant GL_PATCHES = 0x000E;
AXLGLFLCONSTMODIFIER GLconstant GL_PATCH_VERTICES = 0x8E72;
AXLGLFLCONSTMODIFIER GLconstant GL_PATCH_DEFAULT_INNER_LEVEL = 0x8E73;
AXLGLFLCONSTMODIFIER GLconstant GL_PATCH_DEFAULT_OUTER_LEVEL = 0x8E74;
AXLGLFLCONSTMODIFIER GLconstant GL_TESS_CONTROL_OUTPUT_VERTICES = 0x8E75;
AXLGLFLCONSTMODIFIER GLconstant GL_TESS_GEN_MODE = 0x8E76;
AXLGLFLCONSTMODIFIER GLconstant GL_TESS_GEN_SPACING = 0x8E77;
AXLGLFLCONSTMODIFIER GLconstant GL_TESS_GEN_VERTEX_ORDER = 0x8E78;
AXLGLFLCONSTMODIFIER GLconstant GL_TESS_GEN_POINT_MODE = 0x8E79;
AXLGLFLCONSTMODIFIER GLconstant GL_ISOLINES = 0x8E7A;
AXLGLFLCONSTMODIFIER GLconstant GL_FRACTIONAL_ODD = 0x8E7B;
AXLGLFLCONSTMODIFIER GLconstant GL_FRACTIONAL_EVEN = 0x8E7C;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_PATCH_VERTICES = 0x8E7D;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_TESS_GEN_LEVEL = 0x8E7E;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS = 0x8E7F;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS = 0x8E80;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS = 0x8E81;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS = 0x8E82;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS = 0x8E83;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_TESS_PATCH_COMPONENTS = 0x8E84;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS = 0x8E85;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS = 0x8E86;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS = 0x8E89;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS = 0x8E8A;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_TESS_CONTROL_INPUT_COMPONENTS = 0x886C;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_TESS_EVALUATION_INPUT_COMPONENTS = 0x886D;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS = 0x8E1E;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS = 0x8E1F;
AXLGLFLCONSTMODIFIER GLconstant GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_CONTROL_SHADER = 0x84F0;
AXLGLFLCONSTMODIFIER GLconstant GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_EVALUATION_SHADER = 0x84F1;
AXLGLFLCONSTMODIFIER GLconstant GL_TESS_EVALUATION_SHADER = 0x8E87;
AXLGLFLCONSTMODIFIER GLconstant GL_TESS_CONTROL_SHADER = 0x8E88;
AXLGLFLCONSTMODIFIER GLconstant GL_TRANSFORM_FEEDBACK = 0x8E22;
AXLGLFLCONSTMODIFIER GLconstant GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED = 0x8E23;
AXLGLFLCONSTMODIFIER GLconstant GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE = 0x8E24;
AXLGLFLCONSTMODIFIER GLconstant GL_TRANSFORM_FEEDBACK_BINDING = 0x8E25;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_TRANSFORM_FEEDBACK_BUFFERS = 0x8E70;
typedef void (APIENTRYP PFNGLMINSAMPLESHADINGPROC) (GLfloat value);
typedef void (APIENTRYP PFNGLBLENDEQUATIONIPROC) (GLuint buf, GLenum mode);
typedef void (APIENTRYP PFNGLBLENDEQUATIONSEPARATEIPROC) (GLuint buf, GLenum modeRGB, GLenum modeAlpha);
typedef void (APIENTRYP PFNGLBLENDFUNCIPROC) (GLuint buf, GLenum src, GLenum dst);
typedef void (APIENTRYP PFNGLBLENDFUNCSEPARATEIPROC) (GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha);
typedef void (APIENTRYP PFNGLDRAWARRAYSINDIRECTPROC) (GLenum mode, const void *indirect);
typedef void (APIENTRYP PFNGLDRAWELEMENTSINDIRECTPROC) (GLenum mode, GLenum type, const void *indirect);
typedef void (APIENTRYP PFNGLUNIFORM1DPROC) (GLint location, GLdouble x);
typedef void (APIENTRYP PFNGLUNIFORM2DPROC) (GLint location, GLdouble x, GLdouble y);
typedef void (APIENTRYP PFNGLUNIFORM3DPROC) (GLint location, GLdouble x, GLdouble y, GLdouble z);
typedef void (APIENTRYP PFNGLUNIFORM4DPROC) (GLint location, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
typedef void (APIENTRYP PFNGLUNIFORM1DVPROC) (GLint location, GLsizei count, const GLdouble *value);
typedef void (APIENTRYP PFNGLUNIFORM2DVPROC) (GLint location, GLsizei count, const GLdouble *value);
typedef void (APIENTRYP PFNGLUNIFORM3DVPROC) (GLint location, GLsizei count, const GLdouble *value);
typedef void (APIENTRYP PFNGLUNIFORM4DVPROC) (GLint location, GLsizei count, const GLdouble *value);
typedef void (APIENTRYP PFNGLUNIFORMMATRIX2DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
typedef void (APIENTRYP PFNGLUNIFORMMATRIX3DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
typedef void (APIENTRYP PFNGLUNIFORMMATRIX4DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
typedef void (APIENTRYP PFNGLUNIFORMMATRIX2X3DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
typedef void (APIENTRYP PFNGLUNIFORMMATRIX2X4DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
typedef void (APIENTRYP PFNGLUNIFORMMATRIX3X2DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
typedef void (APIENTRYP PFNGLUNIFORMMATRIX3X4DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
typedef void (APIENTRYP PFNGLUNIFORMMATRIX4X2DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
typedef void (APIENTRYP PFNGLUNIFORMMATRIX4X3DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
typedef void (APIENTRYP PFNGLGETUNIFORMDVPROC) (GLuint program, GLint location, GLdouble *params);
typedef GLint (APIENTRYP PFNGLGETSUBROUTINEUNIFORMLOCATIONPROC) (GLuint program, GLenum shadertype, const GLchar *name);
typedef GLuint (APIENTRYP PFNGLGETSUBROUTINEINDEXPROC) (GLuint program, GLenum shadertype, const GLchar *name);
typedef void (APIENTRYP PFNGLGETACTIVESUBROUTINEUNIFORMIVPROC) (GLuint program, GLenum shadertype, GLuint index, GLenum pname, GLint *values);
typedef void (APIENTRYP PFNGLGETACTIVESUBROUTINEUNIFORMNAMEPROC) (GLuint program, GLenum shadertype, GLuint index, GLsizei bufSize, GLsizei *length, GLchar *name);
typedef void (APIENTRYP PFNGLGETACTIVESUBROUTINENAMEPROC) (GLuint program, GLenum shadertype, GLuint index, GLsizei bufSize, GLsizei *length, GLchar *name);
typedef void (APIENTRYP PFNGLUNIFORMSUBROUTINESUIVPROC) (GLenum shadertype, GLsizei count, const GLuint *indices);
typedef void (APIENTRYP PFNGLGETUNIFORMSUBROUTINEUIVPROC) (GLenum shadertype, GLint location, GLuint *params);
typedef void (APIENTRYP PFNGLGETPROGRAMSTAGEIVPROC) (GLuint program, GLenum shadertype, GLenum pname, GLint *values);
typedef void (APIENTRYP PFNGLPATCHPARAMETERIPROC) (GLenum pname, GLint value);
typedef void (APIENTRYP PFNGLPATCHPARAMETERFVPROC) (GLenum pname, const GLfloat *values);
typedef void (APIENTRYP PFNGLBINDTRANSFORMFEEDBACKPROC) (GLenum target, GLuint id);
typedef void (APIENTRYP PFNGLDELETETRANSFORMFEEDBACKSPROC) (GLsizei n, const GLuint *ids);
typedef void (APIENTRYP PFNGLGENTRANSFORMFEEDBACKSPROC) (GLsizei n, GLuint *ids);
typedef GLboolean (APIENTRYP PFNGLISTRANSFORMFEEDBACKPROC) (GLuint id);
typedef void (APIENTRYP PFNGLPAUSETRANSFORMFEEDBACKPROC) (void);
typedef void (APIENTRYP PFNGLRESUMETRANSFORMFEEDBACKPROC) (void);
typedef void (APIENTRYP PFNGLDRAWTRANSFORMFEEDBACKPROC) (GLenum mode, GLuint id);
typedef void (APIENTRYP PFNGLDRAWTRANSFORMFEEDBACKSTREAMPROC) (GLenum mode, GLuint id, GLuint stream);
typedef void (APIENTRYP PFNGLBEGINQUERYINDEXEDPROC) (GLenum target, GLuint index, GLuint id);
typedef void (APIENTRYP PFNGLENDQUERYINDEXEDPROC) (GLenum target, GLuint index);
typedef void (APIENTRYP PFNGLGETQUERYINDEXEDIVPROC) (GLenum target, GLuint index, GLenum pname, GLint *params);
// GL_VERSION_4_0

// GL_VERSION_4_1
AXLGLFLAPI bool GL_VERSION_4_1;
AXLGLFLCONSTMODIFIER GLconstant GL_FIXED = 0x140C;
AXLGLFLCONSTMODIFIER GLconstant GL_IMPLEMENTATION_COLOR_READ_TYPE = 0x8B9A;
AXLGLFLCONSTMODIFIER GLconstant GL_IMPLEMENTATION_COLOR_READ_FORMAT = 0x8B9B;
AXLGLFLCONSTMODIFIER GLconstant GL_LOW_FLOAT = 0x8DF0;
AXLGLFLCONSTMODIFIER GLconstant GL_MEDIUM_FLOAT = 0x8DF1;
AXLGLFLCONSTMODIFIER GLconstant GL_HIGH_FLOAT = 0x8DF2;
AXLGLFLCONSTMODIFIER GLconstant GL_LOW_INT = 0x8DF3;
AXLGLFLCONSTMODIFIER GLconstant GL_MEDIUM_INT = 0x8DF4;
AXLGLFLCONSTMODIFIER GLconstant GL_HIGH_INT = 0x8DF5;
AXLGLFLCONSTMODIFIER GLconstant GL_SHADER_COMPILER = 0x8DFA;
AXLGLFLCONSTMODIFIER GLconstant GL_SHADER_BINARY_FORMATS = 0x8DF8;
AXLGLFLCONSTMODIFIER GLconstant GL_NUM_SHADER_BINARY_FORMATS = 0x8DF9;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_VERTEX_UNIFORM_VECTORS = 0x8DFB;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_VARYING_VECTORS = 0x8DFC;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_FRAGMENT_UNIFORM_VECTORS = 0x8DFD;
AXLGLFLCONSTMODIFIER GLconstant GL_RGB565 = 0x8D62;
AXLGLFLCONSTMODIFIER GLconstant GL_PROGRAM_BINARY_RETRIEVABLE_HINT = 0x8257;
AXLGLFLCONSTMODIFIER GLconstant GL_PROGRAM_BINARY_LENGTH = 0x8741;
AXLGLFLCONSTMODIFIER GLconstant GL_NUM_PROGRAM_BINARY_FORMATS = 0x87FE;
AXLGLFLCONSTMODIFIER GLconstant GL_PROGRAM_BINARY_FORMATS = 0x87FF;
AXLGLFLCONSTMODIFIER GLconstant GL_VERTEX_SHADER_BIT = 0x000000;01
AXLGLFLCONSTMODIFIER GLconstant GL_FRAGMENT_SHADER_BIT = 0x000000;02
AXLGLFLCONSTMODIFIER GLconstant GL_GEOMETRY_SHADER_BIT = 0x000000;04
AXLGLFLCONSTMODIFIER GLconstant GL_TESS_CONTROL_SHADER_BIT = 0x000000;08
AXLGLFLCONSTMODIFIER GLconstant GL_TESS_EVALUATION_SHADER_BIT = 0x000000;10
AXLGLFLCONSTMODIFIER GLconstant GL_ALL_SHADER_BITS = 0xFFFFFF;FF
AXLGLFLCONSTMODIFIER GLconstant GL_PROGRAM_SEPARABLE = 0x8258;
AXLGLFLCONSTMODIFIER GLconstant GL_ACTIVE_PROGRAM = 0x8259;
AXLGLFLCONSTMODIFIER GLconstant GL_PROGRAM_PIPELINE_BINDING = 0x825A;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_VIEWPORTS = 0x825B;
AXLGLFLCONSTMODIFIER GLconstant GL_VIEWPORT_SUBPIXEL_BITS = 0x825C;
AXLGLFLCONSTMODIFIER GLconstant GL_VIEWPORT_BOUNDS_RANGE = 0x825D;
AXLGLFLCONSTMODIFIER GLconstant GL_LAYER_PROVOKING_VERTEX = 0x825E;
AXLGLFLCONSTMODIFIER GLconstant GL_VIEWPORT_INDEX_PROVOKING_VERTEX = 0x825F;
AXLGLFLCONSTMODIFIER GLconstant GL_UNDEFINED_VERTEX = 0x8260;
typedef void (APIENTRYP PFNGLRELEASESHADERCOMPILERPROC) (void);
typedef void (APIENTRYP PFNGLSHADERBINARYPROC) (GLsizei count, const GLuint *shaders, GLenum binaryFormat, const void *binary, GLsizei length);
typedef void (APIENTRYP PFNGLGETSHADERPRECISIONFORMATPROC) (GLenum shadertype, GLenum precisiontype, GLint *range, GLint *precision);
typedef void (APIENTRYP PFNGLDEPTHRANGEFPROC) (GLfloat n, GLfloat f);
typedef void (APIENTRYP PFNGLCLEARDEPTHFPROC) (GLfloat d);
typedef void (APIENTRYP PFNGLGETPROGRAMBINARYPROC) (GLuint program, GLsizei bufSize, GLsizei *length, GLenum *binaryFormat, void *binary);
typedef void (APIENTRYP PFNGLPROGRAMBINARYPROC) (GLuint program, GLenum binaryFormat, const void *binary, GLsizei length);
typedef void (APIENTRYP PFNGLPROGRAMPARAMETERIPROC) (GLuint program, GLenum pname, GLint value);
typedef void (APIENTRYP PFNGLUSEPROGRAMSTAGESPROC) (GLuint pipeline, GLbitfield stages, GLuint program);
typedef void (APIENTRYP PFNGLACTIVESHADERPROGRAMPROC) (GLuint pipeline, GLuint program);
typedef GLuint (APIENTRYP PFNGLCREATESHADERPROGRAMVPROC) (GLenum type, GLsizei count, const GLchar *const*strings);
typedef void (APIENTRYP PFNGLBINDPROGRAMPIPELINEPROC) (GLuint pipeline);
typedef void (APIENTRYP PFNGLDELETEPROGRAMPIPELINESPROC) (GLsizei n, const GLuint *pipelines);
typedef void (APIENTRYP PFNGLGENPROGRAMPIPELINESPROC) (GLsizei n, GLuint *pipelines);
typedef GLboolean (APIENTRYP PFNGLISPROGRAMPIPELINEPROC) (GLuint pipeline);
typedef void (APIENTRYP PFNGLGETPROGRAMPIPELINEIVPROC) (GLuint pipeline, GLenum pname, GLint *params);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1IPROC) (GLuint program, GLint location, GLint v0);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1IVPROC) (GLuint program, GLint location, GLsizei count, const GLint *value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1FPROC) (GLuint program, GLint location, GLfloat v0);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1FVPROC) (GLuint program, GLint location, GLsizei count, const GLfloat *value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1DPROC) (GLuint program, GLint location, GLdouble v0);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1DVPROC) (GLuint program, GLint location, GLsizei count, const GLdouble *value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1UIPROC) (GLuint program, GLint location, GLuint v0);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1UIVPROC) (GLuint program, GLint location, GLsizei count, const GLuint *value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2IPROC) (GLuint program, GLint location, GLint v0, GLint v1);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2IVPROC) (GLuint program, GLint location, GLsizei count, const GLint *value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2FPROC) (GLuint program, GLint location, GLfloat v0, GLfloat v1);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2FVPROC) (GLuint program, GLint location, GLsizei count, const GLfloat *value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2DPROC) (GLuint program, GLint location, GLdouble v0, GLdouble v1);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2DVPROC) (GLuint program, GLint location, GLsizei count, const GLdouble *value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2UIPROC) (GLuint program, GLint location, GLuint v0, GLuint v1);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2UIVPROC) (GLuint program, GLint location, GLsizei count, const GLuint *value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3IPROC) (GLuint program, GLint location, GLint v0, GLint v1, GLint v2);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3IVPROC) (GLuint program, GLint location, GLsizei count, const GLint *value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3FPROC) (GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3FVPROC) (GLuint program, GLint location, GLsizei count, const GLfloat *value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3DPROC) (GLuint program, GLint location, GLdouble v0, GLdouble v1, GLdouble v2);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3DVPROC) (GLuint program, GLint location, GLsizei count, const GLdouble *value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3UIPROC) (GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3UIVPROC) (GLuint program, GLint location, GLsizei count, const GLuint *value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4IPROC) (GLuint program, GLint location, GLint v0, GLint v1, GLint v2, GLint v3);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4IVPROC) (GLuint program, GLint location, GLsizei count, const GLint *value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4FPROC) (GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4FVPROC) (GLuint program, GLint location, GLsizei count, const GLfloat *value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4DPROC) (GLuint program, GLint location, GLdouble v0, GLdouble v1, GLdouble v2, GLdouble v3);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4DVPROC) (GLuint program, GLint location, GLsizei count, const GLdouble *value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4UIPROC) (GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4UIVPROC) (GLuint program, GLint location, GLsizei count, const GLuint *value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2FVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3FVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4FVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2DVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3DVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4DVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2X3FVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3X2FVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2X4FVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4X2FVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3X4FVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4X3FVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2X3DVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3X2DVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2X4DVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4X2DVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3X4DVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4X3DVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
typedef void (APIENTRYP PFNGLVALIDATEPROGRAMPIPELINEPROC) (GLuint pipeline);
typedef void (APIENTRYP PFNGLGETPROGRAMPIPELINEINFOLOGPROC) (GLuint pipeline, GLsizei bufSize, GLsizei *length, GLchar *infoLog);
typedef void (APIENTRYP PFNGLVERTEXATTRIBL1DPROC) (GLuint index, GLdouble x);
typedef void (APIENTRYP PFNGLVERTEXATTRIBL2DPROC) (GLuint index, GLdouble x, GLdouble y);
typedef void (APIENTRYP PFNGLVERTEXATTRIBL3DPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble z);
typedef void (APIENTRYP PFNGLVERTEXATTRIBL4DPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
typedef void (APIENTRYP PFNGLVERTEXATTRIBL1DVPROC) (GLuint index, const GLdouble *v);
typedef void (APIENTRYP PFNGLVERTEXATTRIBL2DVPROC) (GLuint index, const GLdouble *v);
typedef void (APIENTRYP PFNGLVERTEXATTRIBL3DVPROC) (GLuint index, const GLdouble *v);
typedef void (APIENTRYP PFNGLVERTEXATTRIBL4DVPROC) (GLuint index, const GLdouble *v);
typedef void (APIENTRYP PFNGLVERTEXATTRIBLPOINTERPROC) (GLuint index, GLint size, GLenum type, GLsizei stride, const void *pointer);
typedef void (APIENTRYP PFNGLGETVERTEXATTRIBLDVPROC) (GLuint index, GLenum pname, GLdouble *params);
typedef void (APIENTRYP PFNGLVIEWPORTARRAYVPROC) (GLuint first, GLsizei count, const GLfloat *v);
typedef void (APIENTRYP PFNGLVIEWPORTINDEXEDFPROC) (GLuint index, GLfloat x, GLfloat y, GLfloat w, GLfloat h);
typedef void (APIENTRYP PFNGLVIEWPORTINDEXEDFVPROC) (GLuint index, const GLfloat *v);
typedef void (APIENTRYP PFNGLSCISSORARRAYVPROC) (GLuint first, GLsizei count, const GLint *v);
typedef void (APIENTRYP PFNGLSCISSORINDEXEDPROC) (GLuint index, GLint left, GLint bottom, GLsizei width, GLsizei height);
typedef void (APIENTRYP PFNGLSCISSORINDEXEDVPROC) (GLuint index, const GLint *v);
typedef void (APIENTRYP PFNGLDEPTHRANGEARRAYVPROC) (GLuint first, GLsizei count, const GLdouble *v);
typedef void (APIENTRYP PFNGLDEPTHRANGEINDEXEDPROC) (GLuint index, GLdouble n, GLdouble f);
typedef void (APIENTRYP PFNGLGETFLOATI_VPROC) (GLenum target, GLuint index, GLfloat *data);
typedef void (APIENTRYP PFNGLGETDOUBLEI_VPROC) (GLenum target, GLuint index, GLdouble *data);
// GL_VERSION_4_1

// GL_VERSION_4_2
AXLGLFLAPI bool GL_VERSION_4_2;
AXLGLFLCONSTMODIFIER GLconstant GL_COPY_READ_BUFFER_BINDING = 0x8F36;
AXLGLFLCONSTMODIFIER GLconstant GL_COPY_WRITE_BUFFER_BINDING = 0x8F37;
AXLGLFLCONSTMODIFIER GLconstant GL_TRANSFORM_FEEDBACK_ACTIVE = 0x8E24;
AXLGLFLCONSTMODIFIER GLconstant GL_TRANSFORM_FEEDBACK_PAUSED = 0x8E23;
AXLGLFLCONSTMODIFIER GLconstant GL_UNPACK_COMPRESSED_BLOCK_WIDTH = 0x9127;
AXLGLFLCONSTMODIFIER GLconstant GL_UNPACK_COMPRESSED_BLOCK_HEIGHT = 0x9128;
AXLGLFLCONSTMODIFIER GLconstant GL_UNPACK_COMPRESSED_BLOCK_DEPTH = 0x9129;
AXLGLFLCONSTMODIFIER GLconstant GL_UNPACK_COMPRESSED_BLOCK_SIZE = 0x912A;
AXLGLFLCONSTMODIFIER GLconstant GL_PACK_COMPRESSED_BLOCK_WIDTH = 0x912B;
AXLGLFLCONSTMODIFIER GLconstant GL_PACK_COMPRESSED_BLOCK_HEIGHT = 0x912C;
AXLGLFLCONSTMODIFIER GLconstant GL_PACK_COMPRESSED_BLOCK_DEPTH = 0x912D;
AXLGLFLCONSTMODIFIER GLconstant GL_PACK_COMPRESSED_BLOCK_SIZE = 0x912E;
AXLGLFLCONSTMODIFIER GLconstant GL_NUM_SAMPLE_COUNTS = 0x9380;
AXLGLFLCONSTMODIFIER GLconstant GL_MIN_MAP_BUFFER_ALIGNMENT = 0x90BC;
AXLGLFLCONSTMODIFIER GLconstant GL_ATOMIC_COUNTER_BUFFER = 0x92C0;
AXLGLFLCONSTMODIFIER GLconstant GL_ATOMIC_COUNTER_BUFFER_BINDING = 0x92C1;
AXLGLFLCONSTMODIFIER GLconstant GL_ATOMIC_COUNTER_BUFFER_START = 0x92C2;
AXLGLFLCONSTMODIFIER GLconstant GL_ATOMIC_COUNTER_BUFFER_SIZE = 0x92C3;
AXLGLFLCONSTMODIFIER GLconstant GL_ATOMIC_COUNTER_BUFFER_DATA_SIZE = 0x92C4;
AXLGLFLCONSTMODIFIER GLconstant GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTERS = 0x92C5;
AXLGLFLCONSTMODIFIER GLconstant GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTER_INDICES = 0x92C6;
AXLGLFLCONSTMODIFIER GLconstant GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_VERTEX_SHADER = 0x92C7;
AXLGLFLCONSTMODIFIER GLconstant GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_CONTROL_SHADER = 0x92C8;
AXLGLFLCONSTMODIFIER GLconstant GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_EVALUATION_SHADER = 0x92C9;
AXLGLFLCONSTMODIFIER GLconstant GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_GEOMETRY_SHADER = 0x92CA;
AXLGLFLCONSTMODIFIER GLconstant GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_FRAGMENT_SHADER = 0x92CB;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_VERTEX_ATOMIC_COUNTER_BUFFERS = 0x92CC;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_TESS_CONTROL_ATOMIC_COUNTER_BUFFERS = 0x92CD;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_TESS_EVALUATION_ATOMIC_COUNTER_BUFFERS = 0x92CE;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_GEOMETRY_ATOMIC_COUNTER_BUFFERS = 0x92CF;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_FRAGMENT_ATOMIC_COUNTER_BUFFERS = 0x92D0;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_COMBINED_ATOMIC_COUNTER_BUFFERS = 0x92D1;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_VERTEX_ATOMIC_COUNTERS = 0x92D2;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_TESS_CONTROL_ATOMIC_COUNTERS = 0x92D3;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_TESS_EVALUATION_ATOMIC_COUNTERS = 0x92D4;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_GEOMETRY_ATOMIC_COUNTERS = 0x92D5;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_FRAGMENT_ATOMIC_COUNTERS = 0x92D6;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_COMBINED_ATOMIC_COUNTERS = 0x92D7;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_ATOMIC_COUNTER_BUFFER_SIZE = 0x92D8;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_ATOMIC_COUNTER_BUFFER_BINDINGS = 0x92DC;
AXLGLFLCONSTMODIFIER GLconstant GL_ACTIVE_ATOMIC_COUNTER_BUFFERS = 0x92D9;
AXLGLFLCONSTMODIFIER GLconstant GL_UNIFORM_ATOMIC_COUNTER_BUFFER_INDEX = 0x92DA;
AXLGLFLCONSTMODIFIER GLconstant GL_UNSIGNED_INT_ATOMIC_COUNTER = 0x92DB;
AXLGLFLCONSTMODIFIER GLconstant GL_VERTEX_ATTRIB_ARRAY_BARRIER_BIT = 0x000000;01
AXLGLFLCONSTMODIFIER GLconstant GL_ELEMENT_ARRAY_BARRIER_BIT = 0x000000;02
AXLGLFLCONSTMODIFIER GLconstant GL_UNIFORM_BARRIER_BIT = 0x000000;04
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_FETCH_BARRIER_BIT = 0x000000;08
AXLGLFLCONSTMODIFIER GLconstant GL_SHADER_IMAGE_ACCESS_BARRIER_BIT = 0x000000;20
AXLGLFLCONSTMODIFIER GLconstant GL_COMMAND_BARRIER_BIT = 0x000000;40
AXLGLFLCONSTMODIFIER GLconstant GL_PIXEL_BUFFER_BARRIER_BIT = 0x000000;80
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_UPDATE_BARRIER_BIT = 0x000001;00
AXLGLFLCONSTMODIFIER GLconstant GL_BUFFER_UPDATE_BARRIER_BIT = 0x000002;00
AXLGLFLCONSTMODIFIER GLconstant GL_FRAMEBUFFER_BARRIER_BIT = 0x000004;00
AXLGLFLCONSTMODIFIER GLconstant GL_TRANSFORM_FEEDBACK_BARRIER_BIT = 0x000008;00
AXLGLFLCONSTMODIFIER GLconstant GL_ATOMIC_COUNTER_BARRIER_BIT = 0x000010;00
AXLGLFLCONSTMODIFIER GLconstant GL_ALL_BARRIER_BITS = 0xFFFFFF;FF
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_IMAGE_UNITS = 0x8F38;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_COMBINED_IMAGE_UNITS_AND_FRAGMENT_OUTPUTS = 0x8F39;
AXLGLFLCONSTMODIFIER GLconstant GL_IMAGE_BINDING_NAME = 0x8F3A;
AXLGLFLCONSTMODIFIER GLconstant GL_IMAGE_BINDING_LEVEL = 0x8F3B;
AXLGLFLCONSTMODIFIER GLconstant GL_IMAGE_BINDING_LAYERED = 0x8F3C;
AXLGLFLCONSTMODIFIER GLconstant GL_IMAGE_BINDING_LAYER = 0x8F3D;
AXLGLFLCONSTMODIFIER GLconstant GL_IMAGE_BINDING_ACCESS = 0x8F3E;
AXLGLFLCONSTMODIFIER GLconstant GL_IMAGE_1D = 0x904C;
AXLGLFLCONSTMODIFIER GLconstant GL_IMAGE_2D = 0x904D;
AXLGLFLCONSTMODIFIER GLconstant GL_IMAGE_3D = 0x904E;
AXLGLFLCONSTMODIFIER GLconstant GL_IMAGE_2D_RECT = 0x904F;
AXLGLFLCONSTMODIFIER GLconstant GL_IMAGE_CUBE = 0x9050;
AXLGLFLCONSTMODIFIER GLconstant GL_IMAGE_BUFFER = 0x9051;
AXLGLFLCONSTMODIFIER GLconstant GL_IMAGE_1D_ARRAY = 0x9052;
AXLGLFLCONSTMODIFIER GLconstant GL_IMAGE_2D_ARRAY = 0x9053;
AXLGLFLCONSTMODIFIER GLconstant GL_IMAGE_CUBE_MAP_ARRAY = 0x9054;
AXLGLFLCONSTMODIFIER GLconstant GL_IMAGE_2D_MULTISAMPLE = 0x9055;
AXLGLFLCONSTMODIFIER GLconstant GL_IMAGE_2D_MULTISAMPLE_ARRAY = 0x9056;
AXLGLFLCONSTMODIFIER GLconstant GL_INT_IMAGE_1D = 0x9057;
AXLGLFLCONSTMODIFIER GLconstant GL_INT_IMAGE_2D = 0x9058;
AXLGLFLCONSTMODIFIER GLconstant GL_INT_IMAGE_3D = 0x9059;
AXLGLFLCONSTMODIFIER GLconstant GL_INT_IMAGE_2D_RECT = 0x905A;
AXLGLFLCONSTMODIFIER GLconstant GL_INT_IMAGE_CUBE = 0x905B;
AXLGLFLCONSTMODIFIER GLconstant GL_INT_IMAGE_BUFFER = 0x905C;
AXLGLFLCONSTMODIFIER GLconstant GL_INT_IMAGE_1D_ARRAY = 0x905D;
AXLGLFLCONSTMODIFIER GLconstant GL_INT_IMAGE_2D_ARRAY = 0x905E;
AXLGLFLCONSTMODIFIER GLconstant GL_INT_IMAGE_CUBE_MAP_ARRAY = 0x905F;
AXLGLFLCONSTMODIFIER GLconstant GL_INT_IMAGE_2D_MULTISAMPLE = 0x9060;
AXLGLFLCONSTMODIFIER GLconstant GL_INT_IMAGE_2D_MULTISAMPLE_ARRAY = 0x9061;
AXLGLFLCONSTMODIFIER GLconstant GL_UNSIGNED_INT_IMAGE_1D = 0x9062;
AXLGLFLCONSTMODIFIER GLconstant GL_UNSIGNED_INT_IMAGE_2D = 0x9063;
AXLGLFLCONSTMODIFIER GLconstant GL_UNSIGNED_INT_IMAGE_3D = 0x9064;
AXLGLFLCONSTMODIFIER GLconstant GL_UNSIGNED_INT_IMAGE_2D_RECT = 0x9065;
AXLGLFLCONSTMODIFIER GLconstant GL_UNSIGNED_INT_IMAGE_CUBE = 0x9066;
AXLGLFLCONSTMODIFIER GLconstant GL_UNSIGNED_INT_IMAGE_BUFFER = 0x9067;
AXLGLFLCONSTMODIFIER GLconstant GL_UNSIGNED_INT_IMAGE_1D_ARRAY = 0x9068;
AXLGLFLCONSTMODIFIER GLconstant GL_UNSIGNED_INT_IMAGE_2D_ARRAY = 0x9069;
AXLGLFLCONSTMODIFIER GLconstant GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY = 0x906A;
AXLGLFLCONSTMODIFIER GLconstant GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE = 0x906B;
AXLGLFLCONSTMODIFIER GLconstant GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY = 0x906C;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_IMAGE_SAMPLES = 0x906D;
AXLGLFLCONSTMODIFIER GLconstant GL_IMAGE_BINDING_FORMAT = 0x906E;
AXLGLFLCONSTMODIFIER GLconstant GL_IMAGE_FORMAT_COMPATIBILITY_TYPE = 0x90C7;
AXLGLFLCONSTMODIFIER GLconstant GL_IMAGE_FORMAT_COMPATIBILITY_BY_SIZE = 0x90C8;
AXLGLFLCONSTMODIFIER GLconstant GL_IMAGE_FORMAT_COMPATIBILITY_BY_CLASS = 0x90C9;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_VERTEX_IMAGE_UNIFORMS = 0x90CA;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_TESS_CONTROL_IMAGE_UNIFORMS = 0x90CB;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_TESS_EVALUATION_IMAGE_UNIFORMS = 0x90CC;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_GEOMETRY_IMAGE_UNIFORMS = 0x90CD;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_FRAGMENT_IMAGE_UNIFORMS = 0x90CE;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_COMBINED_IMAGE_UNIFORMS = 0x90CF;
AXLGLFLCONSTMODIFIER GLconstant GL_COMPRESSED_RGBA_BPTC_UNORM = 0x8E8C;
AXLGLFLCONSTMODIFIER GLconstant GL_COMPRESSED_SRGB_ALPHA_BPTC_UNORM = 0x8E8D;
AXLGLFLCONSTMODIFIER GLconstant GL_COMPRESSED_RGB_BPTC_SIGNED_FLOAT = 0x8E8E;
AXLGLFLCONSTMODIFIER GLconstant GL_COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT = 0x8E8F;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_IMMUTABLE_FORMAT = 0x912F;
typedef void (APIENTRYP PFNGLDRAWARRAYSINSTANCEDBASEINSTANCEPROC) (GLenum mode, GLint first, GLsizei count, GLsizei instancecount, GLuint baseinstance);
typedef void (APIENTRYP PFNGLDRAWELEMENTSINSTANCEDBASEINSTANCEPROC) (GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount, GLuint baseinstance);
typedef void (APIENTRYP PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXBASEINSTANCEPROC) (GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount, GLint basevertex, GLuint baseinstance);
typedef void (APIENTRYP PFNGLGETINTERNALFORMATIVPROC) (GLenum target, GLenum internalformat, GLenum pname, GLsizei count, GLint *params);
typedef void (APIENTRYP PFNGLGETACTIVEATOMICCOUNTERBUFFERIVPROC) (GLuint program, GLuint bufferIndex, GLenum pname, GLint *params);
typedef void (APIENTRYP PFNGLBINDIMAGETEXTUREPROC) (GLuint unit, GLuint texture, GLint level, GLboolean layered, GLint layer, GLenum access, GLenum format);
typedef void (APIENTRYP PFNGLMEMORYBARRIERPROC) (GLbitfield barriers);
typedef void (APIENTRYP PFNGLTEXSTORAGE1DPROC) (GLenum target, GLsizei levels, GLenum internalformat, GLsizei width);
typedef void (APIENTRYP PFNGLTEXSTORAGE2DPROC) (GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height);
typedef void (APIENTRYP PFNGLTEXSTORAGE3DPROC) (GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth);
typedef void (APIENTRYP PFNGLDRAWTRANSFORMFEEDBACKINSTANCEDPROC) (GLenum mode, GLuint id, GLsizei instancecount);
typedef void (APIENTRYP PFNGLDRAWTRANSFORMFEEDBACKSTREAMINSTANCEDPROC) (GLenum mode, GLuint id, GLuint stream, GLsizei instancecount);
// GL_VERSION_4_2

// GL_VERSION_4_3
AXLGLFLAPI bool GL_VERSION_4_3;
typedef void (APIENTRY  *GLDEBUGPROC)(GLenum source,GLenum type,GLuint id,GLenum severity,GLsizei length,const GLchar *message,const void *userParam);
AXLGLFLCONSTMODIFIER GLconstant GL_NUM_SHADING_LANGUAGE_VERSIONS = 0x82E9;
AXLGLFLCONSTMODIFIER GLconstant GL_VERTEX_ATTRIB_ARRAY_LONG = 0x874E;
AXLGLFLCONSTMODIFIER GLconstant GL_COMPRESSED_RGB8_ETC2 = 0x9274;
AXLGLFLCONSTMODIFIER GLconstant GL_COMPRESSED_SRGB8_ETC2 = 0x9275;
AXLGLFLCONSTMODIFIER GLconstant GL_COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2 = 0x9276;
AXLGLFLCONSTMODIFIER GLconstant GL_COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2 = 0x9277;
AXLGLFLCONSTMODIFIER GLconstant GL_COMPRESSED_RGBA8_ETC2_EAC = 0x9278;
AXLGLFLCONSTMODIFIER GLconstant GL_COMPRESSED_SRGB8_ALPHA8_ETC2_EAC = 0x9279;
AXLGLFLCONSTMODIFIER GLconstant GL_COMPRESSED_R11_EAC = 0x9270;
AXLGLFLCONSTMODIFIER GLconstant GL_COMPRESSED_SIGNED_R11_EAC = 0x9271;
AXLGLFLCONSTMODIFIER GLconstant GL_COMPRESSED_RG11_EAC = 0x9272;
AXLGLFLCONSTMODIFIER GLconstant GL_COMPRESSED_SIGNED_RG11_EAC = 0x9273;
AXLGLFLCONSTMODIFIER GLconstant GL_PRIMITIVE_RESTART_FIXED_INDEX = 0x8D69;
AXLGLFLCONSTMODIFIER GLconstant GL_ANY_SAMPLES_PASSED_CONSERVATIVE = 0x8D6A;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_ELEMENT_INDEX = 0x8D6B;
AXLGLFLCONSTMODIFIER GLconstant GL_COMPUTE_SHADER = 0x91B9;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_COMPUTE_UNIFORM_BLOCKS = 0x91BB;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_COMPUTE_TEXTURE_IMAGE_UNITS = 0x91BC;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_COMPUTE_IMAGE_UNIFORMS = 0x91BD;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_COMPUTE_SHARED_MEMORY_SIZE = 0x8262;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_COMPUTE_UNIFORM_COMPONENTS = 0x8263;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_COMPUTE_ATOMIC_COUNTER_BUFFERS = 0x8264;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_COMPUTE_ATOMIC_COUNTERS = 0x8265;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_COMBINED_COMPUTE_UNIFORM_COMPONENTS = 0x8266;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_COMPUTE_WORK_GROUP_INVOCATIONS = 0x90EB;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_COMPUTE_WORK_GROUP_COUNT = 0x91BE;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_COMPUTE_WORK_GROUP_SIZE = 0x91BF;
AXLGLFLCONSTMODIFIER GLconstant GL_COMPUTE_WORK_GROUP_SIZE = 0x8267;
AXLGLFLCONSTMODIFIER GLconstant GL_UNIFORM_BLOCK_REFERENCED_BY_COMPUTE_SHADER = 0x90EC;
AXLGLFLCONSTMODIFIER GLconstant GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_COMPUTE_SHADER = 0x90ED;
AXLGLFLCONSTMODIFIER GLconstant GL_DISPATCH_INDIRECT_BUFFER = 0x90EE;
AXLGLFLCONSTMODIFIER GLconstant GL_DISPATCH_INDIRECT_BUFFER_BINDING = 0x90EF;
AXLGLFLCONSTMODIFIER GLconstant GL_COMPUTE_SHADER_BIT = 0x000000;20
AXLGLFLCONSTMODIFIER GLconstant GL_DEBUG_OUTPUT_SYNCHRONOUS = 0x8242;
AXLGLFLCONSTMODIFIER GLconstant GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH = 0x8243;
AXLGLFLCONSTMODIFIER GLconstant GL_DEBUG_CALLBACK_FUNCTION = 0x8244;
AXLGLFLCONSTMODIFIER GLconstant GL_DEBUG_CALLBACK_USER_PARAM = 0x8245;
AXLGLFLCONSTMODIFIER GLconstant GL_DEBUG_SOURCE_API = 0x8246;
AXLGLFLCONSTMODIFIER GLconstant GL_DEBUG_SOURCE_WINDOW_SYSTEM = 0x8247;
AXLGLFLCONSTMODIFIER GLconstant GL_DEBUG_SOURCE_SHADER_COMPILER = 0x8248;
AXLGLFLCONSTMODIFIER GLconstant GL_DEBUG_SOURCE_THIRD_PARTY = 0x8249;
AXLGLFLCONSTMODIFIER GLconstant GL_DEBUG_SOURCE_APPLICATION = 0x824A;
AXLGLFLCONSTMODIFIER GLconstant GL_DEBUG_SOURCE_OTHER = 0x824B;
AXLGLFLCONSTMODIFIER GLconstant GL_DEBUG_TYPE_ERROR = 0x824C;
AXLGLFLCONSTMODIFIER GLconstant GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR = 0x824D;
AXLGLFLCONSTMODIFIER GLconstant GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR = 0x824E;
AXLGLFLCONSTMODIFIER GLconstant GL_DEBUG_TYPE_PORTABILITY = 0x824F;
AXLGLFLCONSTMODIFIER GLconstant GL_DEBUG_TYPE_PERFORMANCE = 0x8250;
AXLGLFLCONSTMODIFIER GLconstant GL_DEBUG_TYPE_OTHER = 0x8251;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_DEBUG_MESSAGE_LENGTH = 0x9143;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_DEBUG_LOGGED_MESSAGES = 0x9144;
AXLGLFLCONSTMODIFIER GLconstant GL_DEBUG_LOGGED_MESSAGES = 0x9145;
AXLGLFLCONSTMODIFIER GLconstant GL_DEBUG_SEVERITY_HIGH = 0x9146;
AXLGLFLCONSTMODIFIER GLconstant GL_DEBUG_SEVERITY_MEDIUM = 0x9147;
AXLGLFLCONSTMODIFIER GLconstant GL_DEBUG_SEVERITY_LOW = 0x9148;
AXLGLFLCONSTMODIFIER GLconstant GL_DEBUG_TYPE_MARKER = 0x8268;
AXLGLFLCONSTMODIFIER GLconstant GL_DEBUG_TYPE_PUSH_GROUP = 0x8269;
AXLGLFLCONSTMODIFIER GLconstant GL_DEBUG_TYPE_POP_GROUP = 0x826A;
AXLGLFLCONSTMODIFIER GLconstant GL_DEBUG_SEVERITY_NOTIFICATION = 0x826B;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_DEBUG_GROUP_STACK_DEPTH = 0x826C;
AXLGLFLCONSTMODIFIER GLconstant GL_DEBUG_GROUP_STACK_DEPTH = 0x826D;
AXLGLFLCONSTMODIFIER GLconstant GL_BUFFER = 0x82E0;
AXLGLFLCONSTMODIFIER GLconstant GL_SHADER = 0x82E1;
AXLGLFLCONSTMODIFIER GLconstant GL_PROGRAM = 0x82E2;
AXLGLFLCONSTMODIFIER GLconstant GL_QUERY = 0x82E3;
AXLGLFLCONSTMODIFIER GLconstant GL_PROGRAM_PIPELINE = 0x82E4;
AXLGLFLCONSTMODIFIER GLconstant GL_SAMPLER = 0x82E6;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_LABEL_LENGTH = 0x82E8;
AXLGLFLCONSTMODIFIER GLconstant GL_DEBUG_OUTPUT = 0x92E0;
AXLGLFLCONSTMODIFIER GLconstant GL_CONTEXT_FLAG_DEBUG_BIT = 0x000000;02
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_UNIFORM_LOCATIONS = 0x826E;
AXLGLFLCONSTMODIFIER GLconstant GL_FRAMEBUFFER_DEFAULT_WIDTH = 0x9310;
AXLGLFLCONSTMODIFIER GLconstant GL_FRAMEBUFFER_DEFAULT_HEIGHT = 0x9311;
AXLGLFLCONSTMODIFIER GLconstant GL_FRAMEBUFFER_DEFAULT_LAYERS = 0x9312;
AXLGLFLCONSTMODIFIER GLconstant GL_FRAMEBUFFER_DEFAULT_SAMPLES = 0x9313;
AXLGLFLCONSTMODIFIER GLconstant GL_FRAMEBUFFER_DEFAULT_FIXED_SAMPLE_LOCATIONS = 0x9314;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_FRAMEBUFFER_WIDTH = 0x9315;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_FRAMEBUFFER_HEIGHT = 0x9316;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_FRAMEBUFFER_LAYERS = 0x9317;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_FRAMEBUFFER_SAMPLES = 0x9318;
AXLGLFLCONSTMODIFIER GLconstant GL_INTERNALFORMAT_SUPPORTED = 0x826F;
AXLGLFLCONSTMODIFIER GLconstant GL_INTERNALFORMAT_PREFERRED = 0x8270;
AXLGLFLCONSTMODIFIER GLconstant GL_INTERNALFORMAT_RED_SIZE = 0x8271;
AXLGLFLCONSTMODIFIER GLconstant GL_INTERNALFORMAT_GREEN_SIZE = 0x8272;
AXLGLFLCONSTMODIFIER GLconstant GL_INTERNALFORMAT_BLUE_SIZE = 0x8273;
AXLGLFLCONSTMODIFIER GLconstant GL_INTERNALFORMAT_ALPHA_SIZE = 0x8274;
AXLGLFLCONSTMODIFIER GLconstant GL_INTERNALFORMAT_DEPTH_SIZE = 0x8275;
AXLGLFLCONSTMODIFIER GLconstant GL_INTERNALFORMAT_STENCIL_SIZE = 0x8276;
AXLGLFLCONSTMODIFIER GLconstant GL_INTERNALFORMAT_SHARED_SIZE = 0x8277;
AXLGLFLCONSTMODIFIER GLconstant GL_INTERNALFORMAT_RED_TYPE = 0x8278;
AXLGLFLCONSTMODIFIER GLconstant GL_INTERNALFORMAT_GREEN_TYPE = 0x8279;
AXLGLFLCONSTMODIFIER GLconstant GL_INTERNALFORMAT_BLUE_TYPE = 0x827A;
AXLGLFLCONSTMODIFIER GLconstant GL_INTERNALFORMAT_ALPHA_TYPE = 0x827B;
AXLGLFLCONSTMODIFIER GLconstant GL_INTERNALFORMAT_DEPTH_TYPE = 0x827C;
AXLGLFLCONSTMODIFIER GLconstant GL_INTERNALFORMAT_STENCIL_TYPE = 0x827D;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_WIDTH = 0x827E;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_HEIGHT = 0x827F;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_DEPTH = 0x8280;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_LAYERS = 0x8281;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_COMBINED_DIMENSIONS = 0x8282;
AXLGLFLCONSTMODIFIER GLconstant GL_COLOR_COMPONENTS = 0x8283;
AXLGLFLCONSTMODIFIER GLconstant GL_DEPTH_COMPONENTS = 0x8284;
AXLGLFLCONSTMODIFIER GLconstant GL_STENCIL_COMPONENTS = 0x8285;
AXLGLFLCONSTMODIFIER GLconstant GL_COLOR_RENDERABLE = 0x8286;
AXLGLFLCONSTMODIFIER GLconstant GL_DEPTH_RENDERABLE = 0x8287;
AXLGLFLCONSTMODIFIER GLconstant GL_STENCIL_RENDERABLE = 0x8288;
AXLGLFLCONSTMODIFIER GLconstant GL_FRAMEBUFFER_RENDERABLE = 0x8289;
AXLGLFLCONSTMODIFIER GLconstant GL_FRAMEBUFFER_RENDERABLE_LAYERED = 0x828A;
AXLGLFLCONSTMODIFIER GLconstant GL_FRAMEBUFFER_BLEND = 0x828B;
AXLGLFLCONSTMODIFIER GLconstant GL_READ_PIXELS = 0x828C;
AXLGLFLCONSTMODIFIER GLconstant GL_READ_PIXELS_FORMAT = 0x828D;
AXLGLFLCONSTMODIFIER GLconstant GL_READ_PIXELS_TYPE = 0x828E;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_IMAGE_FORMAT = 0x828F;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_IMAGE_TYPE = 0x8290;
AXLGLFLCONSTMODIFIER GLconstant GL_GET_TEXTURE_IMAGE_FORMAT = 0x8291;
AXLGLFLCONSTMODIFIER GLconstant GL_GET_TEXTURE_IMAGE_TYPE = 0x8292;
AXLGLFLCONSTMODIFIER GLconstant GL_MIPMAP = 0x8293;
AXLGLFLCONSTMODIFIER GLconstant GL_MANUAL_GENERATE_MIPMAP = 0x8294;
AXLGLFLCONSTMODIFIER GLconstant GL_AUTO_GENERATE_MIPMAP = 0x8295;
AXLGLFLCONSTMODIFIER GLconstant GL_COLOR_ENCODING = 0x8296;
AXLGLFLCONSTMODIFIER GLconstant GL_SRGB_READ = 0x8297;
AXLGLFLCONSTMODIFIER GLconstant GL_SRGB_WRITE = 0x8298;
AXLGLFLCONSTMODIFIER GLconstant GL_FILTER = 0x829A;
AXLGLFLCONSTMODIFIER GLconstant GL_VERTEX_TEXTURE = 0x829B;
AXLGLFLCONSTMODIFIER GLconstant GL_TESS_CONTROL_TEXTURE = 0x829C;
AXLGLFLCONSTMODIFIER GLconstant GL_TESS_EVALUATION_TEXTURE = 0x829D;
AXLGLFLCONSTMODIFIER GLconstant GL_GEOMETRY_TEXTURE = 0x829E;
AXLGLFLCONSTMODIFIER GLconstant GL_FRAGMENT_TEXTURE = 0x829F;
AXLGLFLCONSTMODIFIER GLconstant GL_COMPUTE_TEXTURE = 0x82A0;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_SHADOW = 0x82A1;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_GATHER = 0x82A2;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_GATHER_SHADOW = 0x82A3;
AXLGLFLCONSTMODIFIER GLconstant GL_SHADER_IMAGE_LOAD = 0x82A4;
AXLGLFLCONSTMODIFIER GLconstant GL_SHADER_IMAGE_STORE = 0x82A5;
AXLGLFLCONSTMODIFIER GLconstant GL_SHADER_IMAGE_ATOMIC = 0x82A6;
AXLGLFLCONSTMODIFIER GLconstant GL_IMAGE_TEXEL_SIZE = 0x82A7;
AXLGLFLCONSTMODIFIER GLconstant GL_IMAGE_COMPATIBILITY_CLASS = 0x82A8;
AXLGLFLCONSTMODIFIER GLconstant GL_IMAGE_PIXEL_FORMAT = 0x82A9;
AXLGLFLCONSTMODIFIER GLconstant GL_IMAGE_PIXEL_TYPE = 0x82AA;
AXLGLFLCONSTMODIFIER GLconstant GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_TEST = 0x82AC;
AXLGLFLCONSTMODIFIER GLconstant GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_TEST = 0x82AD;
AXLGLFLCONSTMODIFIER GLconstant GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_WRITE = 0x82AE;
AXLGLFLCONSTMODIFIER GLconstant GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_WRITE = 0x82AF;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_COMPRESSED_BLOCK_WIDTH = 0x82B1;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_COMPRESSED_BLOCK_HEIGHT = 0x82B2;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_COMPRESSED_BLOCK_SIZE = 0x82B3;
AXLGLFLCONSTMODIFIER GLconstant GL_CLEAR_BUFFER = 0x82B4;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_VIEW = 0x82B5;
AXLGLFLCONSTMODIFIER GLconstant GL_VIEW_COMPATIBILITY_CLASS = 0x82B6;
AXLGLFLCONSTMODIFIER GLconstant GL_FULL_SUPPORT = 0x82B7;
AXLGLFLCONSTMODIFIER GLconstant GL_CAVEAT_SUPPORT = 0x82B8;
AXLGLFLCONSTMODIFIER GLconstant GL_IMAGE_CLASS_4_X_32 = 0x82B9;
AXLGLFLCONSTMODIFIER GLconstant GL_IMAGE_CLASS_2_X_32 = 0x82BA;
AXLGLFLCONSTMODIFIER GLconstant GL_IMAGE_CLASS_1_X_32 = 0x82BB;
AXLGLFLCONSTMODIFIER GLconstant GL_IMAGE_CLASS_4_X_16 = 0x82BC;
AXLGLFLCONSTMODIFIER GLconstant GL_IMAGE_CLASS_2_X_16 = 0x82BD;
AXLGLFLCONSTMODIFIER GLconstant GL_IMAGE_CLASS_1_X_16 = 0x82BE;
AXLGLFLCONSTMODIFIER GLconstant GL_IMAGE_CLASS_4_X_8 = 0x82BF;
AXLGLFLCONSTMODIFIER GLconstant GL_IMAGE_CLASS_2_X_8 = 0x82C0;
AXLGLFLCONSTMODIFIER GLconstant GL_IMAGE_CLASS_1_X_8 = 0x82C1;
AXLGLFLCONSTMODIFIER GLconstant GL_IMAGE_CLASS_11_11_10 = 0x82C2;
AXLGLFLCONSTMODIFIER GLconstant GL_IMAGE_CLASS_10_10_10_2 = 0x82C3;
AXLGLFLCONSTMODIFIER GLconstant GL_VIEW_CLASS_128_BITS = 0x82C4;
AXLGLFLCONSTMODIFIER GLconstant GL_VIEW_CLASS_96_BITS = 0x82C5;
AXLGLFLCONSTMODIFIER GLconstant GL_VIEW_CLASS_64_BITS = 0x82C6;
AXLGLFLCONSTMODIFIER GLconstant GL_VIEW_CLASS_48_BITS = 0x82C7;
AXLGLFLCONSTMODIFIER GLconstant GL_VIEW_CLASS_32_BITS = 0x82C8;
AXLGLFLCONSTMODIFIER GLconstant GL_VIEW_CLASS_24_BITS = 0x82C9;
AXLGLFLCONSTMODIFIER GLconstant GL_VIEW_CLASS_16_BITS = 0x82CA;
AXLGLFLCONSTMODIFIER GLconstant GL_VIEW_CLASS_8_BITS = 0x82CB;
AXLGLFLCONSTMODIFIER GLconstant GL_VIEW_CLASS_S3TC_DXT1_RGB = 0x82CC;
AXLGLFLCONSTMODIFIER GLconstant GL_VIEW_CLASS_S3TC_DXT1_RGBA = 0x82CD;
AXLGLFLCONSTMODIFIER GLconstant GL_VIEW_CLASS_S3TC_DXT3_RGBA = 0x82CE;
AXLGLFLCONSTMODIFIER GLconstant GL_VIEW_CLASS_S3TC_DXT5_RGBA = 0x82CF;
AXLGLFLCONSTMODIFIER GLconstant GL_VIEW_CLASS_RGTC1_RED = 0x82D0;
AXLGLFLCONSTMODIFIER GLconstant GL_VIEW_CLASS_RGTC2_RG = 0x82D1;
AXLGLFLCONSTMODIFIER GLconstant GL_VIEW_CLASS_BPTC_UNORM = 0x82D2;
AXLGLFLCONSTMODIFIER GLconstant GL_VIEW_CLASS_BPTC_FLOAT = 0x82D3;
AXLGLFLCONSTMODIFIER GLconstant GL_UNIFORM = 0x92E1;
AXLGLFLCONSTMODIFIER GLconstant GL_UNIFORM_BLOCK = 0x92E2;
AXLGLFLCONSTMODIFIER GLconstant GL_PROGRAM_INPUT = 0x92E3;
AXLGLFLCONSTMODIFIER GLconstant GL_PROGRAM_OUTPUT = 0x92E4;
AXLGLFLCONSTMODIFIER GLconstant GL_BUFFER_VARIABLE = 0x92E5;
AXLGLFLCONSTMODIFIER GLconstant GL_SHADER_STORAGE_BLOCK = 0x92E6;
AXLGLFLCONSTMODIFIER GLconstant GL_VERTEX_SUBROUTINE = 0x92E8;
AXLGLFLCONSTMODIFIER GLconstant GL_TESS_CONTROL_SUBROUTINE = 0x92E9;
AXLGLFLCONSTMODIFIER GLconstant GL_TESS_EVALUATION_SUBROUTINE = 0x92EA;
AXLGLFLCONSTMODIFIER GLconstant GL_GEOMETRY_SUBROUTINE = 0x92EB;
AXLGLFLCONSTMODIFIER GLconstant GL_FRAGMENT_SUBROUTINE = 0x92EC;
AXLGLFLCONSTMODIFIER GLconstant GL_COMPUTE_SUBROUTINE = 0x92ED;
AXLGLFLCONSTMODIFIER GLconstant GL_VERTEX_SUBROUTINE_UNIFORM = 0x92EE;
AXLGLFLCONSTMODIFIER GLconstant GL_TESS_CONTROL_SUBROUTINE_UNIFORM = 0x92EF;
AXLGLFLCONSTMODIFIER GLconstant GL_TESS_EVALUATION_SUBROUTINE_UNIFORM = 0x92F0;
AXLGLFLCONSTMODIFIER GLconstant GL_GEOMETRY_SUBROUTINE_UNIFORM = 0x92F1;
AXLGLFLCONSTMODIFIER GLconstant GL_FRAGMENT_SUBROUTINE_UNIFORM = 0x92F2;
AXLGLFLCONSTMODIFIER GLconstant GL_COMPUTE_SUBROUTINE_UNIFORM = 0x92F3;
AXLGLFLCONSTMODIFIER GLconstant GL_TRANSFORM_FEEDBACK_VARYING = 0x92F4;
AXLGLFLCONSTMODIFIER GLconstant GL_ACTIVE_RESOURCES = 0x92F5;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_NAME_LENGTH = 0x92F6;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_NUM_ACTIVE_VARIABLES = 0x92F7;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_NUM_COMPATIBLE_SUBROUTINES = 0x92F8;
AXLGLFLCONSTMODIFIER GLconstant GL_NAME_LENGTH = 0x92F9;
AXLGLFLCONSTMODIFIER GLconstant GL_TYPE = 0x92FA;
AXLGLFLCONSTMODIFIER GLconstant GL_ARRAY_SIZE = 0x92FB;
AXLGLFLCONSTMODIFIER GLconstant GL_OFFSET = 0x92FC;
AXLGLFLCONSTMODIFIER GLconstant GL_BLOCK_INDEX = 0x92FD;
AXLGLFLCONSTMODIFIER GLconstant GL_ARRAY_STRIDE = 0x92FE;
AXLGLFLCONSTMODIFIER GLconstant GL_MATRIX_STRIDE = 0x92FF;
AXLGLFLCONSTMODIFIER GLconstant GL_IS_ROW_MAJOR = 0x9300;
AXLGLFLCONSTMODIFIER GLconstant GL_ATOMIC_COUNTER_BUFFER_INDEX = 0x9301;
AXLGLFLCONSTMODIFIER GLconstant GL_BUFFER_BINDING = 0x9302;
AXLGLFLCONSTMODIFIER GLconstant GL_BUFFER_DATA_SIZE = 0x9303;
AXLGLFLCONSTMODIFIER GLconstant GL_NUM_ACTIVE_VARIABLES = 0x9304;
AXLGLFLCONSTMODIFIER GLconstant GL_ACTIVE_VARIABLES = 0x9305;
AXLGLFLCONSTMODIFIER GLconstant GL_REFERENCED_BY_VERTEX_SHADER = 0x9306;
AXLGLFLCONSTMODIFIER GLconstant GL_REFERENCED_BY_TESS_CONTROL_SHADER = 0x9307;
AXLGLFLCONSTMODIFIER GLconstant GL_REFERENCED_BY_TESS_EVALUATION_SHADER = 0x9308;
AXLGLFLCONSTMODIFIER GLconstant GL_REFERENCED_BY_GEOMETRY_SHADER = 0x9309;
AXLGLFLCONSTMODIFIER GLconstant GL_REFERENCED_BY_FRAGMENT_SHADER = 0x930A;
AXLGLFLCONSTMODIFIER GLconstant GL_REFERENCED_BY_COMPUTE_SHADER = 0x930B;
AXLGLFLCONSTMODIFIER GLconstant GL_TOP_LEVEL_ARRAY_SIZE = 0x930C;
AXLGLFLCONSTMODIFIER GLconstant GL_TOP_LEVEL_ARRAY_STRIDE = 0x930D;
AXLGLFLCONSTMODIFIER GLconstant GL_LOCATION = 0x930E;
AXLGLFLCONSTMODIFIER GLconstant GL_LOCATION_INDEX = 0x930F;
AXLGLFLCONSTMODIFIER GLconstant GL_IS_PER_PATCH = 0x92E7;
AXLGLFLCONSTMODIFIER GLconstant GL_SHADER_STORAGE_BUFFER = 0x90D2;
AXLGLFLCONSTMODIFIER GLconstant GL_SHADER_STORAGE_BUFFER_BINDING = 0x90D3;
AXLGLFLCONSTMODIFIER GLconstant GL_SHADER_STORAGE_BUFFER_START = 0x90D4;
AXLGLFLCONSTMODIFIER GLconstant GL_SHADER_STORAGE_BUFFER_SIZE = 0x90D5;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_VERTEX_SHADER_STORAGE_BLOCKS = 0x90D6;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_GEOMETRY_SHADER_STORAGE_BLOCKS = 0x90D7;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_TESS_CONTROL_SHADER_STORAGE_BLOCKS = 0x90D8;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_TESS_EVALUATION_SHADER_STORAGE_BLOCKS = 0x90D9;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_FRAGMENT_SHADER_STORAGE_BLOCKS = 0x90DA;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_COMPUTE_SHADER_STORAGE_BLOCKS = 0x90DB;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_COMBINED_SHADER_STORAGE_BLOCKS = 0x90DC;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_SHADER_STORAGE_BUFFER_BINDINGS = 0x90DD;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_SHADER_STORAGE_BLOCK_SIZE = 0x90DE;
AXLGLFLCONSTMODIFIER GLconstant GL_SHADER_STORAGE_BUFFER_OFFSET_ALIGNMENT = 0x90DF;
AXLGLFLCONSTMODIFIER GLconstant GL_SHADER_STORAGE_BARRIER_BIT = 0x000020;00
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_COMBINED_SHADER_OUTPUT_RESOURCES = 0x8F39;
AXLGLFLCONSTMODIFIER GLconstant GL_DEPTH_STENCIL_TEXTURE_MODE = 0x90EA;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_BUFFER_OFFSET = 0x919D;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_BUFFER_SIZE = 0x919E;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_BUFFER_OFFSET_ALIGNMENT = 0x919F;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_VIEW_MIN_LEVEL = 0x82DB;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_VIEW_NUM_LEVELS = 0x82DC;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_VIEW_MIN_LAYER = 0x82DD;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_VIEW_NUM_LAYERS = 0x82DE;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_IMMUTABLE_LEVELS = 0x82DF;
AXLGLFLCONSTMODIFIER GLconstant GL_VERTEX_ATTRIB_BINDING = 0x82D4;
AXLGLFLCONSTMODIFIER GLconstant GL_VERTEX_ATTRIB_RELATIVE_OFFSET = 0x82D5;
AXLGLFLCONSTMODIFIER GLconstant GL_VERTEX_BINDING_DIVISOR = 0x82D6;
AXLGLFLCONSTMODIFIER GLconstant GL_VERTEX_BINDING_OFFSET = 0x82D7;
AXLGLFLCONSTMODIFIER GLconstant GL_VERTEX_BINDING_STRIDE = 0x82D8;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_VERTEX_ATTRIB_RELATIVE_OFFSET = 0x82D9;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_VERTEX_ATTRIB_BINDINGS = 0x82DA;
AXLGLFLCONSTMODIFIER GLconstant GL_VERTEX_BINDING_BUFFER = 0x8F4F;
AXLGLFLCONSTMODIFIER GLconstant GL_DISPLAY_LIST = 0x82E7;
typedef void (APIENTRYP PFNGLCLEARBUFFERDATAPROC) (GLenum target, GLenum internalformat, GLenum format, GLenum type, const void *data);
typedef void (APIENTRYP PFNGLCLEARBUFFERSUBDATAPROC) (GLenum target, GLenum internalformat, GLintptr offset, GLsizeiptr size, GLenum format, GLenum type, const void *data);
typedef void (APIENTRYP PFNGLDISPATCHCOMPUTEPROC) (GLuint num_groups_x, GLuint num_groups_y, GLuint num_groups_z);
typedef void (APIENTRYP PFNGLDISPATCHCOMPUTEINDIRECTPROC) (GLintptr indirect);
typedef void (APIENTRYP PFNGLCOPYIMAGESUBDATAPROC) (GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint srcX, GLint srcY, GLint srcZ, GLuint dstName, GLenum dstTarget, GLint dstLevel, GLint dstX, GLint dstY, GLint dstZ, GLsizei srcWidth, GLsizei srcHeight, GLsizei srcDepth);
typedef void (APIENTRYP PFNGLFRAMEBUFFERPARAMETERIPROC) (GLenum target, GLenum pname, GLint param);
typedef void (APIENTRYP PFNGLGETFRAMEBUFFERPARAMETERIVPROC) (GLenum target, GLenum pname, GLint *params);
typedef void (APIENTRYP PFNGLGETINTERNALFORMATI64VPROC) (GLenum target, GLenum internalformat, GLenum pname, GLsizei count, GLint64 *params);
typedef void (APIENTRYP PFNGLINVALIDATETEXSUBIMAGEPROC) (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth);
typedef void (APIENTRYP PFNGLINVALIDATETEXIMAGEPROC) (GLuint texture, GLint level);
typedef void (APIENTRYP PFNGLINVALIDATEBUFFERSUBDATAPROC) (GLuint buffer, GLintptr offset, GLsizeiptr length);
typedef void (APIENTRYP PFNGLINVALIDATEBUFFERDATAPROC) (GLuint buffer);
typedef void (APIENTRYP PFNGLINVALIDATEFRAMEBUFFERPROC) (GLenum target, GLsizei numAttachments, const GLenum *attachments);
typedef void (APIENTRYP PFNGLINVALIDATESUBFRAMEBUFFERPROC) (GLenum target, GLsizei numAttachments, const GLenum *attachments, GLint x, GLint y, GLsizei width, GLsizei height);
typedef void (APIENTRYP PFNGLMULTIDRAWARRAYSINDIRECTPROC) (GLenum mode, const void *indirect, GLsizei drawcount, GLsizei stride);
typedef void (APIENTRYP PFNGLMULTIDRAWELEMENTSINDIRECTPROC) (GLenum mode, GLenum type, const void *indirect, GLsizei drawcount, GLsizei stride);
typedef void (APIENTRYP PFNGLGETPROGRAMINTERFACEIVPROC) (GLuint program, GLenum programInterface, GLenum pname, GLint *params);
typedef GLuint (APIENTRYP PFNGLGETPROGRAMRESOURCEINDEXPROC) (GLuint program, GLenum programInterface, const GLchar *name);
typedef void (APIENTRYP PFNGLGETPROGRAMRESOURCENAMEPROC) (GLuint program, GLenum programInterface, GLuint index, GLsizei bufSize, GLsizei *length, GLchar *name);
typedef void (APIENTRYP PFNGLGETPROGRAMRESOURCEIVPROC) (GLuint program, GLenum programInterface, GLuint index, GLsizei propCount, const GLenum *props, GLsizei count, GLsizei *length, GLint *params);
typedef GLint (APIENTRYP PFNGLGETPROGRAMRESOURCELOCATIONPROC) (GLuint program, GLenum programInterface, const GLchar *name);
typedef GLint (APIENTRYP PFNGLGETPROGRAMRESOURCELOCATIONINDEXPROC) (GLuint program, GLenum programInterface, const GLchar *name);
typedef void (APIENTRYP PFNGLSHADERSTORAGEBLOCKBINDINGPROC) (GLuint program, GLuint storageBlockIndex, GLuint storageBlockBinding);
typedef void (APIENTRYP PFNGLTEXBUFFERRANGEPROC) (GLenum target, GLenum internalformat, GLuint buffer, GLintptr offset, GLsizeiptr size);
typedef void (APIENTRYP PFNGLTEXSTORAGE2DMULTISAMPLEPROC) (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations);
typedef void (APIENTRYP PFNGLTEXSTORAGE3DMULTISAMPLEPROC) (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);
typedef void (APIENTRYP PFNGLTEXTUREVIEWPROC) (GLuint texture, GLenum target, GLuint origtexture, GLenum internalformat, GLuint minlevel, GLuint numlevels, GLuint minlayer, GLuint numlayers);
typedef void (APIENTRYP PFNGLBINDVERTEXBUFFERPROC) (GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride);
typedef void (APIENTRYP PFNGLVERTEXATTRIBFORMATPROC) (GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset);
typedef void (APIENTRYP PFNGLVERTEXATTRIBIFORMATPROC) (GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
typedef void (APIENTRYP PFNGLVERTEXATTRIBLFORMATPROC) (GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
typedef void (APIENTRYP PFNGLVERTEXATTRIBBINDINGPROC) (GLuint attribindex, GLuint bindingindex);
typedef void (APIENTRYP PFNGLVERTEXBINDINGDIVISORPROC) (GLuint bindingindex, GLuint divisor);
typedef void (APIENTRYP PFNGLDEBUGMESSAGECONTROLPROC) (GLenum source, GLenum type, GLenum severity, GLsizei count, const GLuint *ids, GLboolean enabled);
typedef void (APIENTRYP PFNGLDEBUGMESSAGEINSERTPROC) (GLenum source, GLenum type, GLuint id, GLenum severity, GLsizei length, const GLchar *buf);
typedef void (APIENTRYP PFNGLDEBUGMESSAGECALLBACKPROC) (GLDEBUGPROC callback, const void *userParam);
typedef GLuint (APIENTRYP PFNGLGETDEBUGMESSAGELOGPROC) (GLuint count, GLsizei bufSize, GLenum *sources, GLenum *types, GLuint *ids, GLenum *severities, GLsizei *lengths, GLchar *messageLog);
typedef void (APIENTRYP PFNGLPUSHDEBUGGROUPPROC) (GLenum source, GLuint id, GLsizei length, const GLchar *message);
typedef void (APIENTRYP PFNGLPOPDEBUGGROUPPROC) (void);
typedef void (APIENTRYP PFNGLOBJECTLABELPROC) (GLenum identifier, GLuint name, GLsizei length, const GLchar *label);
typedef void (APIENTRYP PFNGLGETOBJECTLABELPROC) (GLenum identifier, GLuint name, GLsizei bufSize, GLsizei *length, GLchar *label);
typedef void (APIENTRYP PFNGLOBJECTPTRLABELPROC) (const void *ptr, GLsizei length, const GLchar *label);
typedef void (APIENTRYP PFNGLGETOBJECTPTRLABELPROC) (const void *ptr, GLsizei bufSize, GLsizei *length, GLchar *label);
// GL_VERSION_4_3

// GL_VERSION_4_4
AXLGLFLAPI bool GL_VERSION_4_4;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_VERTEX_ATTRIB_STRIDE = 0x82E5;
AXLGLFLCONSTMODIFIER GLconstant GL_PRIMITIVE_RESTART_FOR_PATCHES_SUPPORTED = 0x8221;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_BUFFER_BINDING = 0x8C2A;
AXLGLFLCONSTMODIFIER GLconstant GL_MAP_PERSISTENT_BIT = 0x0040;
AXLGLFLCONSTMODIFIER GLconstant GL_MAP_COHERENT_BIT = 0x0080;
AXLGLFLCONSTMODIFIER GLconstant GL_DYNAMIC_STORAGE_BIT = 0x0100;
AXLGLFLCONSTMODIFIER GLconstant GL_CLIENT_STORAGE_BIT = 0x0200;
AXLGLFLCONSTMODIFIER GLconstant GL_CLIENT_MAPPED_BUFFER_BARRIER_BIT = 0x000040;00
AXLGLFLCONSTMODIFIER GLconstant GL_BUFFER_IMMUTABLE_STORAGE = 0x821F;
AXLGLFLCONSTMODIFIER GLconstant GL_BUFFER_STORAGE_FLAGS = 0x8220;
AXLGLFLCONSTMODIFIER GLconstant GL_CLEAR_TEXTURE = 0x9365;
AXLGLFLCONSTMODIFIER GLconstant GL_LOCATION_COMPONENT = 0x934A;
AXLGLFLCONSTMODIFIER GLconstant GL_TRANSFORM_FEEDBACK_BUFFER_INDEX = 0x934B;
AXLGLFLCONSTMODIFIER GLconstant GL_TRANSFORM_FEEDBACK_BUFFER_STRIDE = 0x934C;
AXLGLFLCONSTMODIFIER GLconstant GL_QUERY_BUFFER = 0x9192;
AXLGLFLCONSTMODIFIER GLconstant GL_QUERY_BUFFER_BARRIER_BIT = 0x000080;00
AXLGLFLCONSTMODIFIER GLconstant GL_QUERY_BUFFER_BINDING = 0x9193;
AXLGLFLCONSTMODIFIER GLconstant GL_QUERY_RESULT_NO_WAIT = 0x9194;
AXLGLFLCONSTMODIFIER GLconstant GL_MIRROR_CLAMP_TO_EDGE = 0x8743;
typedef void (APIENTRYP PFNGLBUFFERSTORAGEPROC) (GLenum target, GLsizeiptr size, const void *data, GLbitfield flags);
typedef void (APIENTRYP PFNGLCLEARTEXIMAGEPROC) (GLuint texture, GLint level, GLenum format, GLenum type, const void *data);
typedef void (APIENTRYP PFNGLCLEARTEXSUBIMAGEPROC) (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void *data);
typedef void (APIENTRYP PFNGLBINDBUFFERSBASEPROC) (GLenum target, GLuint first, GLsizei count, const GLuint *buffers);
typedef void (APIENTRYP PFNGLBINDBUFFERSRANGEPROC) (GLenum target, GLuint first, GLsizei count, const GLuint *buffers, const GLintptr *offsets, const GLsizeiptr *sizes);
typedef void (APIENTRYP PFNGLBINDTEXTURESPROC) (GLuint first, GLsizei count, const GLuint *textures);
typedef void (APIENTRYP PFNGLBINDSAMPLERSPROC) (GLuint first, GLsizei count, const GLuint *samplers);
typedef void (APIENTRYP PFNGLBINDIMAGETEXTURESPROC) (GLuint first, GLsizei count, const GLuint *textures);
typedef void (APIENTRYP PFNGLBINDVERTEXBUFFERSPROC) (GLuint first, GLsizei count, const GLuint *buffers, const GLintptr *offsets, const GLsizei *strides);
// GL_VERSION_4_4

// GL_VERSION_4_5
AXLGLFLAPI bool GL_VERSION_4_5;
AXLGLFLCONSTMODIFIER GLconstant GL_CONTEXT_LOST = 0x0507;
AXLGLFLCONSTMODIFIER GLconstant GL_NEGATIVE_ONE_TO_ONE = 0x935E;
AXLGLFLCONSTMODIFIER GLconstant GL_ZERO_TO_ONE = 0x935F;
AXLGLFLCONSTMODIFIER GLconstant GL_CLIP_ORIGIN = 0x935C;
AXLGLFLCONSTMODIFIER GLconstant GL_CLIP_DEPTH_MODE = 0x935D;
AXLGLFLCONSTMODIFIER GLconstant GL_QUERY_WAIT_INVERTED = 0x8E17;
AXLGLFLCONSTMODIFIER GLconstant GL_QUERY_NO_WAIT_INVERTED = 0x8E18;
AXLGLFLCONSTMODIFIER GLconstant GL_QUERY_BY_REGION_WAIT_INVERTED = 0x8E19;
AXLGLFLCONSTMODIFIER GLconstant GL_QUERY_BY_REGION_NO_WAIT_INVERTED = 0x8E1A;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_CULL_DISTANCES = 0x82F9;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_COMBINED_CLIP_AND_CULL_DISTANCES = 0x82FA;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_TARGET = 0x1006;
AXLGLFLCONSTMODIFIER GLconstant GL_QUERY_TARGET = 0x82EA;
AXLGLFLCONSTMODIFIER GLconstant GL_GUILTY_CONTEXT_RESET = 0x8253;
AXLGLFLCONSTMODIFIER GLconstant GL_INNOCENT_CONTEXT_RESET = 0x8254;
AXLGLFLCONSTMODIFIER GLconstant GL_UNKNOWN_CONTEXT_RESET = 0x8255;
AXLGLFLCONSTMODIFIER GLconstant GL_RESET_NOTIFICATION_STRATEGY = 0x8256;
AXLGLFLCONSTMODIFIER GLconstant GL_LOSE_CONTEXT_ON_RESET = 0x8252;
AXLGLFLCONSTMODIFIER GLconstant GL_NO_RESET_NOTIFICATION = 0x8261;
AXLGLFLCONSTMODIFIER GLconstant GL_CONTEXT_FLAG_ROBUST_ACCESS_BIT = 0x000000;04
AXLGLFLCONSTMODIFIER GLconstant GL_COLOR_TABLE = 0x80D0;
AXLGLFLCONSTMODIFIER GLconstant GL_POST_CONVOLUTION_COLOR_TABLE = 0x80D1;
AXLGLFLCONSTMODIFIER GLconstant GL_POST_COLOR_MATRIX_COLOR_TABLE = 0x80D2;
AXLGLFLCONSTMODIFIER GLconstant GL_PROXY_COLOR_TABLE = 0x80D3;
AXLGLFLCONSTMODIFIER GLconstant GL_PROXY_POST_CONVOLUTION_COLOR_TABLE = 0x80D4;
AXLGLFLCONSTMODIFIER GLconstant GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE = 0x80D5;
AXLGLFLCONSTMODIFIER GLconstant GL_CONVOLUTION_1D = 0x8010;
AXLGLFLCONSTMODIFIER GLconstant GL_CONVOLUTION_2D = 0x8011;
AXLGLFLCONSTMODIFIER GLconstant GL_SEPARABLE_2D = 0x8012;
AXLGLFLCONSTMODIFIER GLconstant GL_HISTOGRAM = 0x8024;
AXLGLFLCONSTMODIFIER GLconstant GL_PROXY_HISTOGRAM = 0x8025;
AXLGLFLCONSTMODIFIER GLconstant GL_MINMAX = 0x802E;
AXLGLFLCONSTMODIFIER GLconstant GL_CONTEXT_RELEASE_BEHAVIOR = 0x82FB;
AXLGLFLCONSTMODIFIER GLconstant GL_CONTEXT_RELEASE_BEHAVIOR_FLUSH = 0x82FC;
typedef void (APIENTRYP PFNGLCLIPCONTROLPROC) (GLenum origin, GLenum depth);
typedef void (APIENTRYP PFNGLCREATETRANSFORMFEEDBACKSPROC) (GLsizei n, GLuint *ids);
typedef void (APIENTRYP PFNGLTRANSFORMFEEDBACKBUFFERBASEPROC) (GLuint xfb, GLuint index, GLuint buffer);
typedef void (APIENTRYP PFNGLTRANSFORMFEEDBACKBUFFERRANGEPROC) (GLuint xfb, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size);
typedef void (APIENTRYP PFNGLGETTRANSFORMFEEDBACKIVPROC) (GLuint xfb, GLenum pname, GLint *param);
typedef void (APIENTRYP PFNGLGETTRANSFORMFEEDBACKI_VPROC) (GLuint xfb, GLenum pname, GLuint index, GLint *param);
typedef void (APIENTRYP PFNGLGETTRANSFORMFEEDBACKI64_VPROC) (GLuint xfb, GLenum pname, GLuint index, GLint64 *param);
typedef void (APIENTRYP PFNGLCREATEBUFFERSPROC) (GLsizei n, GLuint *buffers);
typedef void (APIENTRYP PFNGLNAMEDBUFFERSTORAGEPROC) (GLuint buffer, GLsizeiptr size, const void *data, GLbitfield flags);
typedef void (APIENTRYP PFNGLNAMEDBUFFERDATAPROC) (GLuint buffer, GLsizeiptr size, const void *data, GLenum usage);
typedef void (APIENTRYP PFNGLNAMEDBUFFERSUBDATAPROC) (GLuint buffer, GLintptr offset, GLsizeiptr size, const void *data);
typedef void (APIENTRYP PFNGLCOPYNAMEDBUFFERSUBDATAPROC) (GLuint readBuffer, GLuint writeBuffer, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size);
typedef void (APIENTRYP PFNGLCLEARNAMEDBUFFERDATAPROC) (GLuint buffer, GLenum internalformat, GLenum format, GLenum type, const void *data);
typedef void (APIENTRYP PFNGLCLEARNAMEDBUFFERSUBDATAPROC) (GLuint buffer, GLenum internalformat, GLintptr offset, GLsizeiptr size, GLenum format, GLenum type, const void *data);
typedef void *(APIENTRYP PFNGLMAPNAMEDBUFFERPROC) (GLuint buffer, GLenum access);
typedef void *(APIENTRYP PFNGLMAPNAMEDBUFFERRANGEPROC) (GLuint buffer, GLintptr offset, GLsizeiptr length, GLbitfield access);
typedef GLboolean (APIENTRYP PFNGLUNMAPNAMEDBUFFERPROC) (GLuint buffer);
typedef void (APIENTRYP PFNGLFLUSHMAPPEDNAMEDBUFFERRANGEPROC) (GLuint buffer, GLintptr offset, GLsizeiptr length);
typedef void (APIENTRYP PFNGLGETNAMEDBUFFERPARAMETERIVPROC) (GLuint buffer, GLenum pname, GLint *params);
typedef void (APIENTRYP PFNGLGETNAMEDBUFFERPARAMETERI64VPROC) (GLuint buffer, GLenum pname, GLint64 *params);
typedef void (APIENTRYP PFNGLGETNAMEDBUFFERPOINTERVPROC) (GLuint buffer, GLenum pname, void **params);
typedef void (APIENTRYP PFNGLGETNAMEDBUFFERSUBDATAPROC) (GLuint buffer, GLintptr offset, GLsizeiptr size, void *data);
typedef void (APIENTRYP PFNGLCREATEFRAMEBUFFERSPROC) (GLsizei n, GLuint *framebuffers);
typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERRENDERBUFFERPROC) (GLuint framebuffer, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);
typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERPARAMETERIPROC) (GLuint framebuffer, GLenum pname, GLint param);
typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERTEXTUREPROC) (GLuint framebuffer, GLenum attachment, GLuint texture, GLint level);
typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERTEXTURELAYERPROC) (GLuint framebuffer, GLenum attachment, GLuint texture, GLint level, GLint layer);
typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERDRAWBUFFERPROC) (GLuint framebuffer, GLenum buf);
typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERDRAWBUFFERSPROC) (GLuint framebuffer, GLsizei n, const GLenum *bufs);
typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERREADBUFFERPROC) (GLuint framebuffer, GLenum src);
typedef void (APIENTRYP PFNGLINVALIDATENAMEDFRAMEBUFFERDATAPROC) (GLuint framebuffer, GLsizei numAttachments, const GLenum *attachments);
typedef void (APIENTRYP PFNGLINVALIDATENAMEDFRAMEBUFFERSUBDATAPROC) (GLuint framebuffer, GLsizei numAttachments, const GLenum *attachments, GLint x, GLint y, GLsizei width, GLsizei height);
typedef void (APIENTRYP PFNGLCLEARNAMEDFRAMEBUFFERIVPROC) (GLuint framebuffer, GLenum buffer, GLint drawbuffer, const GLint *value);
typedef void (APIENTRYP PFNGLCLEARNAMEDFRAMEBUFFERUIVPROC) (GLuint framebuffer, GLenum buffer, GLint drawbuffer, const GLuint *value);
typedef void (APIENTRYP PFNGLCLEARNAMEDFRAMEBUFFERFVPROC) (GLuint framebuffer, GLenum buffer, GLint drawbuffer, const GLfloat *value);
typedef void (APIENTRYP PFNGLCLEARNAMEDFRAMEBUFFERFIPROC) (GLuint framebuffer, GLenum buffer, GLint drawbuffer, GLfloat depth, GLint stencil);
typedef void (APIENTRYP PFNGLBLITNAMEDFRAMEBUFFERPROC) (GLuint readFramebuffer, GLuint drawFramebuffer, GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);
typedef GLenum (APIENTRYP PFNGLCHECKNAMEDFRAMEBUFFERSTATUSPROC) (GLuint framebuffer, GLenum target);
typedef void (APIENTRYP PFNGLGETNAMEDFRAMEBUFFERPARAMETERIVPROC) (GLuint framebuffer, GLenum pname, GLint *param);
typedef void (APIENTRYP PFNGLGETNAMEDFRAMEBUFFERATTACHMENTPARAMETERIVPROC) (GLuint framebuffer, GLenum attachment, GLenum pname, GLint *params);
typedef void (APIENTRYP PFNGLCREATERENDERBUFFERSPROC) (GLsizei n, GLuint *renderbuffers);
typedef void (APIENTRYP PFNGLNAMEDRENDERBUFFERSTORAGEPROC) (GLuint renderbuffer, GLenum internalformat, GLsizei width, GLsizei height);
typedef void (APIENTRYP PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEPROC) (GLuint renderbuffer, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
typedef void (APIENTRYP PFNGLGETNAMEDRENDERBUFFERPARAMETERIVPROC) (GLuint renderbuffer, GLenum pname, GLint *params);
typedef void (APIENTRYP PFNGLCREATETEXTURESPROC) (GLenum target, GLsizei n, GLuint *textures);
typedef void (APIENTRYP PFNGLTEXTUREBUFFERPROC) (GLuint texture, GLenum internalformat, GLuint buffer);
typedef void (APIENTRYP PFNGLTEXTUREBUFFERRANGEPROC) (GLuint texture, GLenum internalformat, GLuint buffer, GLintptr offset, GLsizeiptr size);
typedef void (APIENTRYP PFNGLTEXTURESTORAGE1DPROC) (GLuint texture, GLsizei levels, GLenum internalformat, GLsizei width);
typedef void (APIENTRYP PFNGLTEXTURESTORAGE2DPROC) (GLuint texture, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height);
typedef void (APIENTRYP PFNGLTEXTURESTORAGE3DPROC) (GLuint texture, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth);
typedef void (APIENTRYP PFNGLTEXTURESTORAGE2DMULTISAMPLEPROC) (GLuint texture, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations);
typedef void (APIENTRYP PFNGLTEXTURESTORAGE3DMULTISAMPLEPROC) (GLuint texture, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);
typedef void (APIENTRYP PFNGLTEXTURESUBIMAGE1DPROC) (GLuint texture, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const void *pixels);
typedef void (APIENTRYP PFNGLTEXTURESUBIMAGE2DPROC) (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *pixels);
typedef void (APIENTRYP PFNGLTEXTURESUBIMAGE3DPROC) (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void *pixels);
typedef void (APIENTRYP PFNGLCOMPRESSEDTEXTURESUBIMAGE1DPROC) (GLuint texture, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void *data);
typedef void (APIENTRYP PFNGLCOMPRESSEDTEXTURESUBIMAGE2DPROC) (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void *data);
typedef void (APIENTRYP PFNGLCOMPRESSEDTEXTURESUBIMAGE3DPROC) (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void *data);
typedef void (APIENTRYP PFNGLCOPYTEXTURESUBIMAGE1DPROC) (GLuint texture, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);
typedef void (APIENTRYP PFNGLCOPYTEXTURESUBIMAGE2DPROC) (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);
typedef void (APIENTRYP PFNGLCOPYTEXTURESUBIMAGE3DPROC) (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);
typedef void (APIENTRYP PFNGLTEXTUREPARAMETERFPROC) (GLuint texture, GLenum pname, GLfloat param);
typedef void (APIENTRYP PFNGLTEXTUREPARAMETERFVPROC) (GLuint texture, GLenum pname, const GLfloat *param);
typedef void (APIENTRYP PFNGLTEXTUREPARAMETERIPROC) (GLuint texture, GLenum pname, GLint param);
typedef void (APIENTRYP PFNGLTEXTUREPARAMETERIIVPROC) (GLuint texture, GLenum pname, const GLint *params);
typedef void (APIENTRYP PFNGLTEXTUREPARAMETERIUIVPROC) (GLuint texture, GLenum pname, const GLuint *params);
typedef void (APIENTRYP PFNGLTEXTUREPARAMETERIVPROC) (GLuint texture, GLenum pname, const GLint *param);
typedef void (APIENTRYP PFNGLGENERATETEXTUREMIPMAPPROC) (GLuint texture);
typedef void (APIENTRYP PFNGLBINDTEXTUREUNITPROC) (GLuint unit, GLuint texture);
typedef void (APIENTRYP PFNGLGETTEXTUREIMAGEPROC) (GLuint texture, GLint level, GLenum format, GLenum type, GLsizei bufSize, void *pixels);
typedef void (APIENTRYP PFNGLGETCOMPRESSEDTEXTUREIMAGEPROC) (GLuint texture, GLint level, GLsizei bufSize, void *pixels);
typedef void (APIENTRYP PFNGLGETTEXTURELEVELPARAMETERFVPROC) (GLuint texture, GLint level, GLenum pname, GLfloat *params);
typedef void (APIENTRYP PFNGLGETTEXTURELEVELPARAMETERIVPROC) (GLuint texture, GLint level, GLenum pname, GLint *params);
typedef void (APIENTRYP PFNGLGETTEXTUREPARAMETERFVPROC) (GLuint texture, GLenum pname, GLfloat *params);
typedef void (APIENTRYP PFNGLGETTEXTUREPARAMETERIIVPROC) (GLuint texture, GLenum pname, GLint *params);
typedef void (APIENTRYP PFNGLGETTEXTUREPARAMETERIUIVPROC) (GLuint texture, GLenum pname, GLuint *params);
typedef void (APIENTRYP PFNGLGETTEXTUREPARAMETERIVPROC) (GLuint texture, GLenum pname, GLint *params);
typedef void (APIENTRYP PFNGLCREATEVERTEXARRAYSPROC) (GLsizei n, GLuint *arrays);
typedef void (APIENTRYP PFNGLDISABLEVERTEXARRAYATTRIBPROC) (GLuint vaobj, GLuint index);
typedef void (APIENTRYP PFNGLENABLEVERTEXARRAYATTRIBPROC) (GLuint vaobj, GLuint index);
typedef void (APIENTRYP PFNGLVERTEXARRAYELEMENTBUFFERPROC) (GLuint vaobj, GLuint buffer);
typedef void (APIENTRYP PFNGLVERTEXARRAYVERTEXBUFFERPROC) (GLuint vaobj, GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride);
typedef void (APIENTRYP PFNGLVERTEXARRAYVERTEXBUFFERSPROC) (GLuint vaobj, GLuint first, GLsizei count, const GLuint *buffers, const GLintptr *offsets, const GLsizei *strides);
typedef void (APIENTRYP PFNGLVERTEXARRAYATTRIBBINDINGPROC) (GLuint vaobj, GLuint attribindex, GLuint bindingindex);
typedef void (APIENTRYP PFNGLVERTEXARRAYATTRIBFORMATPROC) (GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset);
typedef void (APIENTRYP PFNGLVERTEXARRAYATTRIBIFORMATPROC) (GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
typedef void (APIENTRYP PFNGLVERTEXARRAYATTRIBLFORMATPROC) (GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
typedef void (APIENTRYP PFNGLVERTEXARRAYBINDINGDIVISORPROC) (GLuint vaobj, GLuint bindingindex, GLuint divisor);
typedef void (APIENTRYP PFNGLGETVERTEXARRAYIVPROC) (GLuint vaobj, GLenum pname, GLint *param);
typedef void (APIENTRYP PFNGLGETVERTEXARRAYINDEXEDIVPROC) (GLuint vaobj, GLuint index, GLenum pname, GLint *param);
typedef void (APIENTRYP PFNGLGETVERTEXARRAYINDEXED64IVPROC) (GLuint vaobj, GLuint index, GLenum pname, GLint64 *param);
typedef void (APIENTRYP PFNGLCREATESAMPLERSPROC) (GLsizei n, GLuint *samplers);
typedef void (APIENTRYP PFNGLCREATEPROGRAMPIPELINESPROC) (GLsizei n, GLuint *pipelines);
typedef void (APIENTRYP PFNGLCREATEQUERIESPROC) (GLenum target, GLsizei n, GLuint *ids);
typedef void (APIENTRYP PFNGLGETQUERYBUFFEROBJECTI64VPROC) (GLuint id, GLuint buffer, GLenum pname, GLintptr offset);
typedef void (APIENTRYP PFNGLGETQUERYBUFFEROBJECTIVPROC) (GLuint id, GLuint buffer, GLenum pname, GLintptr offset);
typedef void (APIENTRYP PFNGLGETQUERYBUFFEROBJECTUI64VPROC) (GLuint id, GLuint buffer, GLenum pname, GLintptr offset);
typedef void (APIENTRYP PFNGLGETQUERYBUFFEROBJECTUIVPROC) (GLuint id, GLuint buffer, GLenum pname, GLintptr offset);
typedef void (APIENTRYP PFNGLMEMORYBARRIERBYREGIONPROC) (GLbitfield barriers);
typedef void (APIENTRYP PFNGLGETTEXTURESUBIMAGEPROC) (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, GLsizei bufSize, void *pixels);
typedef void (APIENTRYP PFNGLGETCOMPRESSEDTEXTURESUBIMAGEPROC) (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLsizei bufSize, void *pixels);
typedef GLenum (APIENTRYP PFNGLGETGRAPHICSRESETSTATUSPROC) (void);
typedef void (APIENTRYP PFNGLGETNCOMPRESSEDTEXIMAGEPROC) (GLenum target, GLint lod, GLsizei bufSize, void *pixels);
typedef void (APIENTRYP PFNGLGETNTEXIMAGEPROC) (GLenum target, GLint level, GLenum format, GLenum type, GLsizei bufSize, void *pixels);
typedef void (APIENTRYP PFNGLGETNUNIFORMDVPROC) (GLuint program, GLint location, GLsizei bufSize, GLdouble *params);
typedef void (APIENTRYP PFNGLGETNUNIFORMFVPROC) (GLuint program, GLint location, GLsizei bufSize, GLfloat *params);
typedef void (APIENTRYP PFNGLGETNUNIFORMIVPROC) (GLuint program, GLint location, GLsizei bufSize, GLint *params);
typedef void (APIENTRYP PFNGLGETNUNIFORMUIVPROC) (GLuint program, GLint location, GLsizei bufSize, GLuint *params);
typedef void (APIENTRYP PFNGLREADNPIXELSPROC) (GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLsizei bufSize, void *data);
typedef void (APIENTRYP PFNGLGETNMAPDVPROC) (GLenum target, GLenum query, GLsizei bufSize, GLdouble *v);
typedef void (APIENTRYP PFNGLGETNMAPFVPROC) (GLenum target, GLenum query, GLsizei bufSize, GLfloat *v);
typedef void (APIENTRYP PFNGLGETNMAPIVPROC) (GLenum target, GLenum query, GLsizei bufSize, GLint *v);
typedef void (APIENTRYP PFNGLGETNPIXELMAPFVPROC) (GLenum map, GLsizei bufSize, GLfloat *values);
typedef void (APIENTRYP PFNGLGETNPIXELMAPUIVPROC) (GLenum map, GLsizei bufSize, GLuint *values);
typedef void (APIENTRYP PFNGLGETNPIXELMAPUSVPROC) (GLenum map, GLsizei bufSize, GLushort *values);
typedef void (APIENTRYP PFNGLGETNPOLYGONSTIPPLEPROC) (GLsizei bufSize, GLubyte *pattern);
typedef void (APIENTRYP PFNGLGETNCOLORTABLEPROC) (GLenum target, GLenum format, GLenum type, GLsizei bufSize, void *table);
typedef void (APIENTRYP PFNGLGETNCONVOLUTIONFILTERPROC) (GLenum target, GLenum format, GLenum type, GLsizei bufSize, void *image);
typedef void (APIENTRYP PFNGLGETNSEPARABLEFILTERPROC) (GLenum target, GLenum format, GLenum type, GLsizei rowBufSize, void *row, GLsizei columnBufSize, void *column, void *span);
typedef void (APIENTRYP PFNGLGETNHISTOGRAMPROC) (GLenum target, GLboolean reset, GLenum format, GLenum type, GLsizei bufSize, void *values);
typedef void (APIENTRYP PFNGLGETNMINMAXPROC) (GLenum target, GLboolean reset, GLenum format, GLenum type, GLsizei bufSize, void *values);
typedef void (APIENTRYP PFNGLTEXTUREBARRIERPROC) (void);
// GL_VERSION_4_5

// GL_VERSION_4_6
AXLGLFLAPI bool GL_VERSION_4_6;
AXLGLFLCONSTMODIFIER GLconstant GL_SHADER_BINARY_FORMAT_SPIR_V = 0x9551;
AXLGLFLCONSTMODIFIER GLconstant GL_SPIR_V_BINARY = 0x9552;
AXLGLFLCONSTMODIFIER GLconstant GL_PARAMETER_BUFFER = 0x80EE;
AXLGLFLCONSTMODIFIER GLconstant GL_PARAMETER_BUFFER_BINDING = 0x80EF;
AXLGLFLCONSTMODIFIER GLconstant GL_CONTEXT_FLAG_NO_ERROR_BIT = 0x000000;08
AXLGLFLCONSTMODIFIER GLconstant GL_VERTICES_SUBMITTED = 0x82EE;
AXLGLFLCONSTMODIFIER GLconstant GL_PRIMITIVES_SUBMITTED = 0x82EF;
AXLGLFLCONSTMODIFIER GLconstant GL_VERTEX_SHADER_INVOCATIONS = 0x82F0;
AXLGLFLCONSTMODIFIER GLconstant GL_TESS_CONTROL_SHADER_PATCHES = 0x82F1;
AXLGLFLCONSTMODIFIER GLconstant GL_TESS_EVALUATION_SHADER_INVOCATIONS = 0x82F2;
AXLGLFLCONSTMODIFIER GLconstant GL_GEOMETRY_SHADER_PRIMITIVES_EMITTED = 0x82F3;
AXLGLFLCONSTMODIFIER GLconstant GL_FRAGMENT_SHADER_INVOCATIONS = 0x82F4;
AXLGLFLCONSTMODIFIER GLconstant GL_COMPUTE_SHADER_INVOCATIONS = 0x82F5;
AXLGLFLCONSTMODIFIER GLconstant GL_CLIPPING_INPUT_PRIMITIVES = 0x82F6;
AXLGLFLCONSTMODIFIER GLconstant GL_CLIPPING_OUTPUT_PRIMITIVES = 0x82F7;
AXLGLFLCONSTMODIFIER GLconstant GL_POLYGON_OFFSET_CLAMP = 0x8E1B;
AXLGLFLCONSTMODIFIER GLconstant GL_SPIR_V_EXTENSIONS = 0x9553;
AXLGLFLCONSTMODIFIER GLconstant GL_NUM_SPIR_V_EXTENSIONS = 0x9554;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_MAX_ANISOTROPY = 0x84FE;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_TEXTURE_MAX_ANISOTROPY = 0x84FF;
AXLGLFLCONSTMODIFIER GLconstant GL_TRANSFORM_FEEDBACK_OVERFLOW = 0x82EC;
AXLGLFLCONSTMODIFIER GLconstant GL_TRANSFORM_FEEDBACK_STREAM_OVERFLOW = 0x82ED;
typedef void (APIENTRYP PFNGLSPECIALIZESHADERPROC) (GLuint shader, const GLchar *pEntryPoint, GLuint numSpecializationConstants, const GLuint *pConstantIndex, const GLuint *pConstantValue);
typedef void (APIENTRYP PFNGLMULTIDRAWARRAYSINDIRECTCOUNTPROC) (GLenum mode, const void *indirect, GLintptr drawcount, GLsizei maxdrawcount, GLsizei stride);
typedef void (APIENTRYP PFNGLMULTIDRAWELEMENTSINDIRECTCOUNTPROC) (GLenum mode, GLenum type, const void *indirect, GLintptr drawcount, GLsizei maxdrawcount, GLsizei stride);
typedef void (APIENTRYP PFNGLPOLYGONOFFSETCLAMPPROC) (GLfloat factor, GLfloat units, GLfloat clamp);
// GL_VERSION_4_6

} // axl::glfl::GL4

namespace GLARB {

// GL_ARB_ES2_compatibility
AXLGLFLAPI bool GL_ARB_ES2_compatibility;
// GL_ARB_ES2_compatibility

// GL_ARB_ES3_1_compatibility
AXLGLFLAPI bool GL_ARB_ES3_1_compatibility;
// GL_ARB_ES3_1_compatibility

// GL_ARB_ES3_2_compatibility
AXLGLFLAPI bool GL_ARB_ES3_2_compatibility;
AXLGLFLCONSTMODIFIER GLconstant GL_PRIMITIVE_BOUNDING_BOX_ARB = 0x92BE;
AXLGLFLCONSTMODIFIER GLconstant GL_MULTISAMPLE_LINE_WIDTH_RANGE_ARB = 0x9381;
AXLGLFLCONSTMODIFIER GLconstant GL_MULTISAMPLE_LINE_WIDTH_GRANULARITY_ARB = 0x9382;
typedef void (APIENTRYP PFNGLPRIMITIVEBOUNDINGBOXARBPROC) (GLfloat minX, GLfloat minY, GLfloat minZ, GLfloat minW, GLfloat maxX, GLfloat maxY, GLfloat maxZ, GLfloat maxW);
// GL_ARB_ES3_2_compatibility

// GL_ARB_ES3_compatibility
AXLGLFLAPI bool GL_ARB_ES3_compatibility;
// GL_ARB_ES3_compatibility

// GL_ARB_arrays_of_arrays
AXLGLFLAPI bool GL_ARB_arrays_of_arrays;
// GL_ARB_arrays_of_arrays

// GL_ARB_base_instance
AXLGLFLAPI bool GL_ARB_base_instance;
// GL_ARB_base_instance

// GL_ARB_bindless_texture
AXLGLFLAPI bool GL_ARB_bindless_texture;
typedef uint64_t GLuint64EXT;
AXLGLFLCONSTMODIFIER GLconstant GL_UNSIGNED_INT64_ARB = 0x140F;
typedef GLuint64 (APIENTRYP PFNGLGETTEXTUREHANDLEARBPROC) (GLuint texture);
typedef GLuint64 (APIENTRYP PFNGLGETTEXTURESAMPLERHANDLEARBPROC) (GLuint texture, GLuint sampler);
typedef void (APIENTRYP PFNGLMAKETEXTUREHANDLERESIDENTARBPROC) (GLuint64 handle);
typedef void (APIENTRYP PFNGLMAKETEXTUREHANDLENONRESIDENTARBPROC) (GLuint64 handle);
typedef GLuint64 (APIENTRYP PFNGLGETIMAGEHANDLEARBPROC) (GLuint texture, GLint level, GLboolean layered, GLint layer, GLenum format);
typedef void (APIENTRYP PFNGLMAKEIMAGEHANDLERESIDENTARBPROC) (GLuint64 handle, GLenum access);
typedef void (APIENTRYP PFNGLMAKEIMAGEHANDLENONRESIDENTARBPROC) (GLuint64 handle);
typedef void (APIENTRYP PFNGLUNIFORMHANDLEUI64ARBPROC) (GLint location, GLuint64 value);
typedef void (APIENTRYP PFNGLUNIFORMHANDLEUI64VARBPROC) (GLint location, GLsizei count, const GLuint64 *value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMHANDLEUI64ARBPROC) (GLuint program, GLint location, GLuint64 value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMHANDLEUI64VARBPROC) (GLuint program, GLint location, GLsizei count, const GLuint64 *values);
typedef GLboolean (APIENTRYP PFNGLISTEXTUREHANDLERESIDENTARBPROC) (GLuint64 handle);
typedef GLboolean (APIENTRYP PFNGLISIMAGEHANDLERESIDENTARBPROC) (GLuint64 handle);
typedef void (APIENTRYP PFNGLVERTEXATTRIBL1UI64ARBPROC) (GLuint index, GLuint64EXT x);
typedef void (APIENTRYP PFNGLVERTEXATTRIBL1UI64VARBPROC) (GLuint index, const GLuint64EXT *v);
typedef void (APIENTRYP PFNGLGETVERTEXATTRIBLUI64VARBPROC) (GLuint index, GLenum pname, GLuint64EXT *params);
// GL_ARB_bindless_texture

// GL_ARB_blend_func_extended
AXLGLFLAPI bool GL_ARB_blend_func_extended;
// GL_ARB_blend_func_extended

// GL_ARB_buffer_storage
AXLGLFLAPI bool GL_ARB_buffer_storage;
// GL_ARB_buffer_storage

// GL_ARB_cl_event
AXLGLFLAPI bool GL_ARB_cl_event;
struct _cl_context;
struct _cl_event;
AXLGLFLCONSTMODIFIER GLconstant GL_SYNC_CL_EVENT_ARB = 0x8240;
AXLGLFLCONSTMODIFIER GLconstant GL_SYNC_CL_EVENT_COMPLETE_ARB = 0x8241;
typedef GLsync (APIENTRYP PFNGLCREATESYNCFROMCLEVENTARBPROC) (struct _cl_context *context, struct _cl_event *event, GLbitfield flags);
// GL_ARB_cl_event

// GL_ARB_clear_buffer_object
AXLGLFLAPI bool GL_ARB_clear_buffer_object;
// GL_ARB_clear_buffer_object

// GL_ARB_clear_texture
AXLGLFLAPI bool GL_ARB_clear_texture;
// GL_ARB_clear_texture

// GL_ARB_clip_control
AXLGLFLAPI bool GL_ARB_clip_control;
// GL_ARB_clip_control

// GL_ARB_color_buffer_float
AXLGLFLAPI bool GL_ARB_color_buffer_float;
AXLGLFLCONSTMODIFIER GLconstant GL_RGBA_FLOAT_MODE_ARB = 0x8820;
AXLGLFLCONSTMODIFIER GLconstant GL_CLAMP_VERTEX_COLOR_ARB = 0x891A;
AXLGLFLCONSTMODIFIER GLconstant GL_CLAMP_FRAGMENT_COLOR_ARB = 0x891B;
AXLGLFLCONSTMODIFIER GLconstant GL_CLAMP_READ_COLOR_ARB = 0x891C;
AXLGLFLCONSTMODIFIER GLconstant GL_FIXED_ONLY_ARB = 0x891D;
typedef void (APIENTRYP PFNGLCLAMPCOLORARBPROC) (GLenum target, GLenum clamp);
// GL_ARB_color_buffer_float

// GL_ARB_compatibility
AXLGLFLAPI bool GL_ARB_compatibility;
// GL_ARB_compatibility

// GL_ARB_compressed_texture_pixel_storage
AXLGLFLAPI bool GL_ARB_compressed_texture_pixel_storage;
// GL_ARB_compressed_texture_pixel_storage

// GL_ARB_compute_shader
AXLGLFLAPI bool GL_ARB_compute_shader;
// GL_ARB_compute_shader

// GL_ARB_compute_variable_group_size
AXLGLFLAPI bool GL_ARB_compute_variable_group_size;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_COMPUTE_VARIABLE_GROUP_INVOCATIONS_ARB = 0x9344;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_COMPUTE_FIXED_GROUP_INVOCATIONS_ARB = 0x90EB;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_COMPUTE_VARIABLE_GROUP_SIZE_ARB = 0x9345;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_COMPUTE_FIXED_GROUP_SIZE_ARB = 0x91BF;
typedef void (APIENTRYP PFNGLDISPATCHCOMPUTEGROUPSIZEARBPROC) (GLuint num_groups_x, GLuint num_groups_y, GLuint num_groups_z, GLuint group_size_x, GLuint group_size_y, GLuint group_size_z);
// GL_ARB_compute_variable_group_size

// GL_ARB_conditional_render_inverted
AXLGLFLAPI bool GL_ARB_conditional_render_inverted;
// GL_ARB_conditional_render_inverted

// GL_ARB_conservative_depth
AXLGLFLAPI bool GL_ARB_conservative_depth;
// GL_ARB_conservative_depth

// GL_ARB_copy_buffer
AXLGLFLAPI bool GL_ARB_copy_buffer;
// GL_ARB_copy_buffer

// GL_ARB_copy_image
AXLGLFLAPI bool GL_ARB_copy_image;
// GL_ARB_copy_image

// GL_ARB_cull_distance
AXLGLFLAPI bool GL_ARB_cull_distance;
// GL_ARB_cull_distance

// GL_ARB_debug_output
AXLGLFLAPI bool GL_ARB_debug_output;
typedef void (APIENTRY  *GLDEBUGPROCARB)(GLenum source,GLenum type,GLuint id,GLenum severity,GLsizei length,const GLchar *message,const void *userParam);
AXLGLFLCONSTMODIFIER GLconstant GL_DEBUG_OUTPUT_SYNCHRONOUS_ARB = 0x8242;
AXLGLFLCONSTMODIFIER GLconstant GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH_ARB = 0x8243;
AXLGLFLCONSTMODIFIER GLconstant GL_DEBUG_CALLBACK_FUNCTION_ARB = 0x8244;
AXLGLFLCONSTMODIFIER GLconstant GL_DEBUG_CALLBACK_USER_PARAM_ARB = 0x8245;
AXLGLFLCONSTMODIFIER GLconstant GL_DEBUG_SOURCE_API_ARB = 0x8246;
AXLGLFLCONSTMODIFIER GLconstant GL_DEBUG_SOURCE_WINDOW_SYSTEM_ARB = 0x8247;
AXLGLFLCONSTMODIFIER GLconstant GL_DEBUG_SOURCE_SHADER_COMPILER_ARB = 0x8248;
AXLGLFLCONSTMODIFIER GLconstant GL_DEBUG_SOURCE_THIRD_PARTY_ARB = 0x8249;
AXLGLFLCONSTMODIFIER GLconstant GL_DEBUG_SOURCE_APPLICATION_ARB = 0x824A;
AXLGLFLCONSTMODIFIER GLconstant GL_DEBUG_SOURCE_OTHER_ARB = 0x824B;
AXLGLFLCONSTMODIFIER GLconstant GL_DEBUG_TYPE_ERROR_ARB = 0x824C;
AXLGLFLCONSTMODIFIER GLconstant GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR_ARB = 0x824D;
AXLGLFLCONSTMODIFIER GLconstant GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR_ARB = 0x824E;
AXLGLFLCONSTMODIFIER GLconstant GL_DEBUG_TYPE_PORTABILITY_ARB = 0x824F;
AXLGLFLCONSTMODIFIER GLconstant GL_DEBUG_TYPE_PERFORMANCE_ARB = 0x8250;
AXLGLFLCONSTMODIFIER GLconstant GL_DEBUG_TYPE_OTHER_ARB = 0x8251;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_DEBUG_MESSAGE_LENGTH_ARB = 0x9143;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_DEBUG_LOGGED_MESSAGES_ARB = 0x9144;
AXLGLFLCONSTMODIFIER GLconstant GL_DEBUG_LOGGED_MESSAGES_ARB = 0x9145;
AXLGLFLCONSTMODIFIER GLconstant GL_DEBUG_SEVERITY_HIGH_ARB = 0x9146;
AXLGLFLCONSTMODIFIER GLconstant GL_DEBUG_SEVERITY_MEDIUM_ARB = 0x9147;
AXLGLFLCONSTMODIFIER GLconstant GL_DEBUG_SEVERITY_LOW_ARB = 0x9148;
typedef void (APIENTRYP PFNGLDEBUGMESSAGECONTROLARBPROC) (GLenum source, GLenum type, GLenum severity, GLsizei count, const GLuint *ids, GLboolean enabled);
typedef void (APIENTRYP PFNGLDEBUGMESSAGEINSERTARBPROC) (GLenum source, GLenum type, GLuint id, GLenum severity, GLsizei length, const GLchar *buf);
typedef void (APIENTRYP PFNGLDEBUGMESSAGECALLBACKARBPROC) (GLDEBUGPROCARB callback, const void *userParam);
typedef GLuint (APIENTRYP PFNGLGETDEBUGMESSAGELOGARBPROC) (GLuint count, GLsizei bufSize, GLenum *sources, GLenum *types, GLuint *ids, GLenum *severities, GLsizei *lengths, GLchar *messageLog);
// GL_ARB_debug_output

// GL_ARB_depth_buffer_float
AXLGLFLAPI bool GL_ARB_depth_buffer_float;
// GL_ARB_depth_buffer_float

// GL_ARB_depth_clamp
AXLGLFLAPI bool GL_ARB_depth_clamp;
// GL_ARB_depth_clamp

// GL_ARB_depth_texture
AXLGLFLAPI bool GL_ARB_depth_texture;
AXLGLFLCONSTMODIFIER GLconstant GL_DEPTH_COMPONENT16_ARB = 0x81A5;
AXLGLFLCONSTMODIFIER GLconstant GL_DEPTH_COMPONENT24_ARB = 0x81A6;
AXLGLFLCONSTMODIFIER GLconstant GL_DEPTH_COMPONENT32_ARB = 0x81A7;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_DEPTH_SIZE_ARB = 0x884A;
AXLGLFLCONSTMODIFIER GLconstant GL_DEPTH_TEXTURE_MODE_ARB = 0x884B;
// GL_ARB_depth_texture

// GL_ARB_derivative_control
AXLGLFLAPI bool GL_ARB_derivative_control;
// GL_ARB_derivative_control

// GL_ARB_direct_state_access
AXLGLFLAPI bool GL_ARB_direct_state_access;
// GL_ARB_direct_state_access

// GL_ARB_draw_buffers
AXLGLFLAPI bool GL_ARB_draw_buffers;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_DRAW_BUFFERS_ARB = 0x8824;
AXLGLFLCONSTMODIFIER GLconstant GL_DRAW_BUFFER0_ARB = 0x8825;
AXLGLFLCONSTMODIFIER GLconstant GL_DRAW_BUFFER1_ARB = 0x8826;
AXLGLFLCONSTMODIFIER GLconstant GL_DRAW_BUFFER2_ARB = 0x8827;
AXLGLFLCONSTMODIFIER GLconstant GL_DRAW_BUFFER3_ARB = 0x8828;
AXLGLFLCONSTMODIFIER GLconstant GL_DRAW_BUFFER4_ARB = 0x8829;
AXLGLFLCONSTMODIFIER GLconstant GL_DRAW_BUFFER5_ARB = 0x882A;
AXLGLFLCONSTMODIFIER GLconstant GL_DRAW_BUFFER6_ARB = 0x882B;
AXLGLFLCONSTMODIFIER GLconstant GL_DRAW_BUFFER7_ARB = 0x882C;
AXLGLFLCONSTMODIFIER GLconstant GL_DRAW_BUFFER8_ARB = 0x882D;
AXLGLFLCONSTMODIFIER GLconstant GL_DRAW_BUFFER9_ARB = 0x882E;
AXLGLFLCONSTMODIFIER GLconstant GL_DRAW_BUFFER10_ARB = 0x882F;
AXLGLFLCONSTMODIFIER GLconstant GL_DRAW_BUFFER11_ARB = 0x8830;
AXLGLFLCONSTMODIFIER GLconstant GL_DRAW_BUFFER12_ARB = 0x8831;
AXLGLFLCONSTMODIFIER GLconstant GL_DRAW_BUFFER13_ARB = 0x8832;
AXLGLFLCONSTMODIFIER GLconstant GL_DRAW_BUFFER14_ARB = 0x8833;
AXLGLFLCONSTMODIFIER GLconstant GL_DRAW_BUFFER15_ARB = 0x8834;
typedef void (APIENTRYP PFNGLDRAWBUFFERSARBPROC) (GLsizei n, const GLenum *bufs);
// GL_ARB_draw_buffers

// GL_ARB_draw_buffers_blend
AXLGLFLAPI bool GL_ARB_draw_buffers_blend;
typedef void (APIENTRYP PFNGLBLENDEQUATIONIARBPROC) (GLuint buf, GLenum mode);
typedef void (APIENTRYP PFNGLBLENDEQUATIONSEPARATEIARBPROC) (GLuint buf, GLenum modeRGB, GLenum modeAlpha);
typedef void (APIENTRYP PFNGLBLENDFUNCIARBPROC) (GLuint buf, GLenum src, GLenum dst);
typedef void (APIENTRYP PFNGLBLENDFUNCSEPARATEIARBPROC) (GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha);
// GL_ARB_draw_buffers_blend

// GL_ARB_draw_elements_base_vertex
AXLGLFLAPI bool GL_ARB_draw_elements_base_vertex;
// GL_ARB_draw_elements_base_vertex

// GL_ARB_draw_indirect
AXLGLFLAPI bool GL_ARB_draw_indirect;
// GL_ARB_draw_indirect

// GL_ARB_draw_instanced
AXLGLFLAPI bool GL_ARB_draw_instanced;
typedef void (APIENTRYP PFNGLDRAWARRAYSINSTANCEDARBPROC) (GLenum mode, GLint first, GLsizei count, GLsizei primcount);
typedef void (APIENTRYP PFNGLDRAWELEMENTSINSTANCEDARBPROC) (GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei primcount);
// GL_ARB_draw_instanced

// GL_ARB_enhanced_layouts
AXLGLFLAPI bool GL_ARB_enhanced_layouts;
// GL_ARB_enhanced_layouts

// GL_ARB_explicit_attrib_location
AXLGLFLAPI bool GL_ARB_explicit_attrib_location;
// GL_ARB_explicit_attrib_location

// GL_ARB_explicit_uniform_location
AXLGLFLAPI bool GL_ARB_explicit_uniform_location;
// GL_ARB_explicit_uniform_location

// GL_ARB_fragment_coord_conventions
AXLGLFLAPI bool GL_ARB_fragment_coord_conventions;
// GL_ARB_fragment_coord_conventions

// GL_ARB_fragment_layer_viewport
AXLGLFLAPI bool GL_ARB_fragment_layer_viewport;
// GL_ARB_fragment_layer_viewport

// GL_ARB_fragment_program
AXLGLFLAPI bool GL_ARB_fragment_program;
AXLGLFLCONSTMODIFIER GLconstant GL_FRAGMENT_PROGRAM_ARB = 0x8804;
AXLGLFLCONSTMODIFIER GLconstant GL_PROGRAM_FORMAT_ASCII_ARB = 0x8875;
AXLGLFLCONSTMODIFIER GLconstant GL_PROGRAM_LENGTH_ARB = 0x8627;
AXLGLFLCONSTMODIFIER GLconstant GL_PROGRAM_FORMAT_ARB = 0x8876;
AXLGLFLCONSTMODIFIER GLconstant GL_PROGRAM_BINDING_ARB = 0x8677;
AXLGLFLCONSTMODIFIER GLconstant GL_PROGRAM_INSTRUCTIONS_ARB = 0x88A0;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_PROGRAM_INSTRUCTIONS_ARB = 0x88A1;
AXLGLFLCONSTMODIFIER GLconstant GL_PROGRAM_NATIVE_INSTRUCTIONS_ARB = 0x88A2;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_PROGRAM_NATIVE_INSTRUCTIONS_ARB = 0x88A3;
AXLGLFLCONSTMODIFIER GLconstant GL_PROGRAM_TEMPORARIES_ARB = 0x88A4;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_PROGRAM_TEMPORARIES_ARB = 0x88A5;
AXLGLFLCONSTMODIFIER GLconstant GL_PROGRAM_NATIVE_TEMPORARIES_ARB = 0x88A6;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_PROGRAM_NATIVE_TEMPORARIES_ARB = 0x88A7;
AXLGLFLCONSTMODIFIER GLconstant GL_PROGRAM_PARAMETERS_ARB = 0x88A8;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_PROGRAM_PARAMETERS_ARB = 0x88A9;
AXLGLFLCONSTMODIFIER GLconstant GL_PROGRAM_NATIVE_PARAMETERS_ARB = 0x88AA;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_PROGRAM_NATIVE_PARAMETERS_ARB = 0x88AB;
AXLGLFLCONSTMODIFIER GLconstant GL_PROGRAM_ATTRIBS_ARB = 0x88AC;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_PROGRAM_ATTRIBS_ARB = 0x88AD;
AXLGLFLCONSTMODIFIER GLconstant GL_PROGRAM_NATIVE_ATTRIBS_ARB = 0x88AE;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_PROGRAM_NATIVE_ATTRIBS_ARB = 0x88AF;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_PROGRAM_LOCAL_PARAMETERS_ARB = 0x88B4;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_PROGRAM_ENV_PARAMETERS_ARB = 0x88B5;
AXLGLFLCONSTMODIFIER GLconstant GL_PROGRAM_UNDER_NATIVE_LIMITS_ARB = 0x88B6;
AXLGLFLCONSTMODIFIER GLconstant GL_PROGRAM_ALU_INSTRUCTIONS_ARB = 0x8805;
AXLGLFLCONSTMODIFIER GLconstant GL_PROGRAM_TEX_INSTRUCTIONS_ARB = 0x8806;
AXLGLFLCONSTMODIFIER GLconstant GL_PROGRAM_TEX_INDIRECTIONS_ARB = 0x8807;
AXLGLFLCONSTMODIFIER GLconstant GL_PROGRAM_NATIVE_ALU_INSTRUCTIONS_ARB = 0x8808;
AXLGLFLCONSTMODIFIER GLconstant GL_PROGRAM_NATIVE_TEX_INSTRUCTIONS_ARB = 0x8809;
AXLGLFLCONSTMODIFIER GLconstant GL_PROGRAM_NATIVE_TEX_INDIRECTIONS_ARB = 0x880A;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_PROGRAM_ALU_INSTRUCTIONS_ARB = 0x880B;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_PROGRAM_TEX_INSTRUCTIONS_ARB = 0x880C;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_PROGRAM_TEX_INDIRECTIONS_ARB = 0x880D;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_PROGRAM_NATIVE_ALU_INSTRUCTIONS_ARB = 0x880E;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_PROGRAM_NATIVE_TEX_INSTRUCTIONS_ARB = 0x880F;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_PROGRAM_NATIVE_TEX_INDIRECTIONS_ARB = 0x8810;
AXLGLFLCONSTMODIFIER GLconstant GL_PROGRAM_STRING_ARB = 0x8628;
AXLGLFLCONSTMODIFIER GLconstant GL_PROGRAM_ERROR_POSITION_ARB = 0x864B;
AXLGLFLCONSTMODIFIER GLconstant GL_CURRENT_MATRIX_ARB = 0x8641;
AXLGLFLCONSTMODIFIER GLconstant GL_TRANSPOSE_CURRENT_MATRIX_ARB = 0x88B7;
AXLGLFLCONSTMODIFIER GLconstant GL_CURRENT_MATRIX_STACK_DEPTH_ARB = 0x8640;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_PROGRAM_MATRICES_ARB = 0x862F;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_PROGRAM_MATRIX_STACK_DEPTH_ARB = 0x862E;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_TEXTURE_COORDS_ARB = 0x8871;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_TEXTURE_IMAGE_UNITS_ARB = 0x8872;
AXLGLFLCONSTMODIFIER GLconstant GL_PROGRAM_ERROR_STRING_ARB = 0x8874;
AXLGLFLCONSTMODIFIER GLconstant GL_MATRIX0_ARB = 0x88C0;
AXLGLFLCONSTMODIFIER GLconstant GL_MATRIX1_ARB = 0x88C1;
AXLGLFLCONSTMODIFIER GLconstant GL_MATRIX2_ARB = 0x88C2;
AXLGLFLCONSTMODIFIER GLconstant GL_MATRIX3_ARB = 0x88C3;
AXLGLFLCONSTMODIFIER GLconstant GL_MATRIX4_ARB = 0x88C4;
AXLGLFLCONSTMODIFIER GLconstant GL_MATRIX5_ARB = 0x88C5;
AXLGLFLCONSTMODIFIER GLconstant GL_MATRIX6_ARB = 0x88C6;
AXLGLFLCONSTMODIFIER GLconstant GL_MATRIX7_ARB = 0x88C7;
AXLGLFLCONSTMODIFIER GLconstant GL_MATRIX8_ARB = 0x88C8;
AXLGLFLCONSTMODIFIER GLconstant GL_MATRIX9_ARB = 0x88C9;
AXLGLFLCONSTMODIFIER GLconstant GL_MATRIX10_ARB = 0x88CA;
AXLGLFLCONSTMODIFIER GLconstant GL_MATRIX11_ARB = 0x88CB;
AXLGLFLCONSTMODIFIER GLconstant GL_MATRIX12_ARB = 0x88CC;
AXLGLFLCONSTMODIFIER GLconstant GL_MATRIX13_ARB = 0x88CD;
AXLGLFLCONSTMODIFIER GLconstant GL_MATRIX14_ARB = 0x88CE;
AXLGLFLCONSTMODIFIER GLconstant GL_MATRIX15_ARB = 0x88CF;
AXLGLFLCONSTMODIFIER GLconstant GL_MATRIX16_ARB = 0x88D0;
AXLGLFLCONSTMODIFIER GLconstant GL_MATRIX17_ARB = 0x88D1;
AXLGLFLCONSTMODIFIER GLconstant GL_MATRIX18_ARB = 0x88D2;
AXLGLFLCONSTMODIFIER GLconstant GL_MATRIX19_ARB = 0x88D3;
AXLGLFLCONSTMODIFIER GLconstant GL_MATRIX20_ARB = 0x88D4;
AXLGLFLCONSTMODIFIER GLconstant GL_MATRIX21_ARB = 0x88D5;
AXLGLFLCONSTMODIFIER GLconstant GL_MATRIX22_ARB = 0x88D6;
AXLGLFLCONSTMODIFIER GLconstant GL_MATRIX23_ARB = 0x88D7;
AXLGLFLCONSTMODIFIER GLconstant GL_MATRIX24_ARB = 0x88D8;
AXLGLFLCONSTMODIFIER GLconstant GL_MATRIX25_ARB = 0x88D9;
AXLGLFLCONSTMODIFIER GLconstant GL_MATRIX26_ARB = 0x88DA;
AXLGLFLCONSTMODIFIER GLconstant GL_MATRIX27_ARB = 0x88DB;
AXLGLFLCONSTMODIFIER GLconstant GL_MATRIX28_ARB = 0x88DC;
AXLGLFLCONSTMODIFIER GLconstant GL_MATRIX29_ARB = 0x88DD;
AXLGLFLCONSTMODIFIER GLconstant GL_MATRIX30_ARB = 0x88DE;
AXLGLFLCONSTMODIFIER GLconstant GL_MATRIX31_ARB = 0x88DF;
typedef void (APIENTRYP PFNGLPROGRAMSTRINGARBPROC) (GLenum target, GLenum format, GLsizei len, const void *string);
typedef void (APIENTRYP PFNGLBINDPROGRAMARBPROC) (GLenum target, GLuint program);
typedef void (APIENTRYP PFNGLDELETEPROGRAMSARBPROC) (GLsizei n, const GLuint *programs);
typedef void (APIENTRYP PFNGLGENPROGRAMSARBPROC) (GLsizei n, GLuint *programs);
typedef void (APIENTRYP PFNGLPROGRAMENVPARAMETER4DARBPROC) (GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
typedef void (APIENTRYP PFNGLPROGRAMENVPARAMETER4DVARBPROC) (GLenum target, GLuint index, const GLdouble *params);
typedef void (APIENTRYP PFNGLPROGRAMENVPARAMETER4FARBPROC) (GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
typedef void (APIENTRYP PFNGLPROGRAMENVPARAMETER4FVARBPROC) (GLenum target, GLuint index, const GLfloat *params);
typedef void (APIENTRYP PFNGLPROGRAMLOCALPARAMETER4DARBPROC) (GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
typedef void (APIENTRYP PFNGLPROGRAMLOCALPARAMETER4DVARBPROC) (GLenum target, GLuint index, const GLdouble *params);
typedef void (APIENTRYP PFNGLPROGRAMLOCALPARAMETER4FARBPROC) (GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
typedef void (APIENTRYP PFNGLPROGRAMLOCALPARAMETER4FVARBPROC) (GLenum target, GLuint index, const GLfloat *params);
typedef void (APIENTRYP PFNGLGETPROGRAMENVPARAMETERDVARBPROC) (GLenum target, GLuint index, GLdouble *params);
typedef void (APIENTRYP PFNGLGETPROGRAMENVPARAMETERFVARBPROC) (GLenum target, GLuint index, GLfloat *params);
typedef void (APIENTRYP PFNGLGETPROGRAMLOCALPARAMETERDVARBPROC) (GLenum target, GLuint index, GLdouble *params);
typedef void (APIENTRYP PFNGLGETPROGRAMLOCALPARAMETERFVARBPROC) (GLenum target, GLuint index, GLfloat *params);
typedef void (APIENTRYP PFNGLGETPROGRAMIVARBPROC) (GLenum target, GLenum pname, GLint *params);
typedef void (APIENTRYP PFNGLGETPROGRAMSTRINGARBPROC) (GLenum target, GLenum pname, void *string);
typedef GLboolean (APIENTRYP PFNGLISPROGRAMARBPROC) (GLuint program);
// GL_ARB_fragment_program

// GL_ARB_fragment_program_shadow
AXLGLFLAPI bool GL_ARB_fragment_program_shadow;
// GL_ARB_fragment_program_shadow

// GL_ARB_fragment_shader
AXLGLFLAPI bool GL_ARB_fragment_shader;
AXLGLFLCONSTMODIFIER GLconstant GL_FRAGMENT_SHADER_ARB = 0x8B30;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_FRAGMENT_UNIFORM_COMPONENTS_ARB = 0x8B49;
AXLGLFLCONSTMODIFIER GLconstant GL_FRAGMENT_SHADER_DERIVATIVE_HINT_ARB = 0x8B8B;
// GL_ARB_fragment_shader

// GL_ARB_fragment_shader_interlock
AXLGLFLAPI bool GL_ARB_fragment_shader_interlock;
// GL_ARB_fragment_shader_interlock

// GL_ARB_framebuffer_no_attachments
AXLGLFLAPI bool GL_ARB_framebuffer_no_attachments;
// GL_ARB_framebuffer_no_attachments

// GL_ARB_framebuffer_object
AXLGLFLAPI bool GL_ARB_framebuffer_object;
// GL_ARB_framebuffer_object

// GL_ARB_framebuffer_sRGB
AXLGLFLAPI bool GL_ARB_framebuffer_sRGB;
// GL_ARB_framebuffer_sRGB

// GL_ARB_geometry_shader4
AXLGLFLAPI bool GL_ARB_geometry_shader4;
AXLGLFLCONSTMODIFIER GLconstant GL_LINES_ADJACENCY_ARB = 0x000A;
AXLGLFLCONSTMODIFIER GLconstant GL_LINE_STRIP_ADJACENCY_ARB = 0x000B;
AXLGLFLCONSTMODIFIER GLconstant GL_TRIANGLES_ADJACENCY_ARB = 0x000C;
AXLGLFLCONSTMODIFIER GLconstant GL_TRIANGLE_STRIP_ADJACENCY_ARB = 0x000D;
AXLGLFLCONSTMODIFIER GLconstant GL_PROGRAM_POINT_SIZE_ARB = 0x8642;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_ARB = 0x8C29;
AXLGLFLCONSTMODIFIER GLconstant GL_FRAMEBUFFER_ATTACHMENT_LAYERED_ARB = 0x8DA7;
AXLGLFLCONSTMODIFIER GLconstant GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_ARB = 0x8DA8;
AXLGLFLCONSTMODIFIER GLconstant GL_FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_ARB = 0x8DA9;
AXLGLFLCONSTMODIFIER GLconstant GL_GEOMETRY_SHADER_ARB = 0x8DD9;
AXLGLFLCONSTMODIFIER GLconstant GL_GEOMETRY_VERTICES_OUT_ARB = 0x8DDA;
AXLGLFLCONSTMODIFIER GLconstant GL_GEOMETRY_INPUT_TYPE_ARB = 0x8DDB;
AXLGLFLCONSTMODIFIER GLconstant GL_GEOMETRY_OUTPUT_TYPE_ARB = 0x8DDC;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_GEOMETRY_VARYING_COMPONENTS_ARB = 0x8DDD;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_VERTEX_VARYING_COMPONENTS_ARB = 0x8DDE;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_ARB = 0x8DDF;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_GEOMETRY_OUTPUT_VERTICES_ARB = 0x8DE0;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_ARB = 0x8DE1;
typedef void (APIENTRYP PFNGLPROGRAMPARAMETERIARBPROC) (GLuint program, GLenum pname, GLint value);
typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTUREARBPROC) (GLenum target, GLenum attachment, GLuint texture, GLint level);
typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTURELAYERARBPROC) (GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer);
typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTUREFACEARBPROC) (GLenum target, GLenum attachment, GLuint texture, GLint level, GLenum face);
// GL_ARB_geometry_shader4

// GL_ARB_get_program_binary
AXLGLFLAPI bool GL_ARB_get_program_binary;
// GL_ARB_get_program_binary

// GL_ARB_get_texture_sub_image
AXLGLFLAPI bool GL_ARB_get_texture_sub_image;
// GL_ARB_get_texture_sub_image

// GL_ARB_gl_spirv
AXLGLFLAPI bool GL_ARB_gl_spirv;
AXLGLFLCONSTMODIFIER GLconstant GL_SHADER_BINARY_FORMAT_SPIR_V_ARB = 0x9551;
AXLGLFLCONSTMODIFIER GLconstant GL_SPIR_V_BINARY_ARB = 0x9552;
typedef void (APIENTRYP PFNGLSPECIALIZESHADERARBPROC) (GLuint shader, const GLchar *pEntryPoint, GLuint numSpecializationConstants, const GLuint *pConstantIndex, const GLuint *pConstantValue);
// GL_ARB_gl_spirv

// GL_ARB_gpu_shader5
AXLGLFLAPI bool GL_ARB_gpu_shader5;
// GL_ARB_gpu_shader5

// GL_ARB_gpu_shader_fp64
AXLGLFLAPI bool GL_ARB_gpu_shader_fp64;
// GL_ARB_gpu_shader_fp64

// GL_ARB_gpu_shader_int64
AXLGLFLAPI bool GL_ARB_gpu_shader_int64;
AXLGLFLCONSTMODIFIER GLconstant GL_INT64_ARB = 0x140E;
AXLGLFLCONSTMODIFIER GLconstant GL_INT64_VEC2_ARB = 0x8FE9;
AXLGLFLCONSTMODIFIER GLconstant GL_INT64_VEC3_ARB = 0x8FEA;
AXLGLFLCONSTMODIFIER GLconstant GL_INT64_VEC4_ARB = 0x8FEB;
AXLGLFLCONSTMODIFIER GLconstant GL_UNSIGNED_INT64_VEC2_ARB = 0x8FF5;
AXLGLFLCONSTMODIFIER GLconstant GL_UNSIGNED_INT64_VEC3_ARB = 0x8FF6;
AXLGLFLCONSTMODIFIER GLconstant GL_UNSIGNED_INT64_VEC4_ARB = 0x8FF7;
typedef void (APIENTRYP PFNGLUNIFORM1I64ARBPROC) (GLint location, GLint64 x);
typedef void (APIENTRYP PFNGLUNIFORM2I64ARBPROC) (GLint location, GLint64 x, GLint64 y);
typedef void (APIENTRYP PFNGLUNIFORM3I64ARBPROC) (GLint location, GLint64 x, GLint64 y, GLint64 z);
typedef void (APIENTRYP PFNGLUNIFORM4I64ARBPROC) (GLint location, GLint64 x, GLint64 y, GLint64 z, GLint64 w);
typedef void (APIENTRYP PFNGLUNIFORM1I64VARBPROC) (GLint location, GLsizei count, const GLint64 *value);
typedef void (APIENTRYP PFNGLUNIFORM2I64VARBPROC) (GLint location, GLsizei count, const GLint64 *value);
typedef void (APIENTRYP PFNGLUNIFORM3I64VARBPROC) (GLint location, GLsizei count, const GLint64 *value);
typedef void (APIENTRYP PFNGLUNIFORM4I64VARBPROC) (GLint location, GLsizei count, const GLint64 *value);
typedef void (APIENTRYP PFNGLUNIFORM1UI64ARBPROC) (GLint location, GLuint64 x);
typedef void (APIENTRYP PFNGLUNIFORM2UI64ARBPROC) (GLint location, GLuint64 x, GLuint64 y);
typedef void (APIENTRYP PFNGLUNIFORM3UI64ARBPROC) (GLint location, GLuint64 x, GLuint64 y, GLuint64 z);
typedef void (APIENTRYP PFNGLUNIFORM4UI64ARBPROC) (GLint location, GLuint64 x, GLuint64 y, GLuint64 z, GLuint64 w);
typedef void (APIENTRYP PFNGLUNIFORM1UI64VARBPROC) (GLint location, GLsizei count, const GLuint64 *value);
typedef void (APIENTRYP PFNGLUNIFORM2UI64VARBPROC) (GLint location, GLsizei count, const GLuint64 *value);
typedef void (APIENTRYP PFNGLUNIFORM3UI64VARBPROC) (GLint location, GLsizei count, const GLuint64 *value);
typedef void (APIENTRYP PFNGLUNIFORM4UI64VARBPROC) (GLint location, GLsizei count, const GLuint64 *value);
typedef void (APIENTRYP PFNGLGETUNIFORMI64VARBPROC) (GLuint program, GLint location, GLint64 *params);
typedef void (APIENTRYP PFNGLGETUNIFORMUI64VARBPROC) (GLuint program, GLint location, GLuint64 *params);
typedef void (APIENTRYP PFNGLGETNUNIFORMI64VARBPROC) (GLuint program, GLint location, GLsizei bufSize, GLint64 *params);
typedef void (APIENTRYP PFNGLGETNUNIFORMUI64VARBPROC) (GLuint program, GLint location, GLsizei bufSize, GLuint64 *params);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1I64ARBPROC) (GLuint program, GLint location, GLint64 x);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2I64ARBPROC) (GLuint program, GLint location, GLint64 x, GLint64 y);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3I64ARBPROC) (GLuint program, GLint location, GLint64 x, GLint64 y, GLint64 z);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4I64ARBPROC) (GLuint program, GLint location, GLint64 x, GLint64 y, GLint64 z, GLint64 w);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1I64VARBPROC) (GLuint program, GLint location, GLsizei count, const GLint64 *value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2I64VARBPROC) (GLuint program, GLint location, GLsizei count, const GLint64 *value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3I64VARBPROC) (GLuint program, GLint location, GLsizei count, const GLint64 *value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4I64VARBPROC) (GLuint program, GLint location, GLsizei count, const GLint64 *value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1UI64ARBPROC) (GLuint program, GLint location, GLuint64 x);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2UI64ARBPROC) (GLuint program, GLint location, GLuint64 x, GLuint64 y);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3UI64ARBPROC) (GLuint program, GLint location, GLuint64 x, GLuint64 y, GLuint64 z);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4UI64ARBPROC) (GLuint program, GLint location, GLuint64 x, GLuint64 y, GLuint64 z, GLuint64 w);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1UI64VARBPROC) (GLuint program, GLint location, GLsizei count, const GLuint64 *value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2UI64VARBPROC) (GLuint program, GLint location, GLsizei count, const GLuint64 *value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3UI64VARBPROC) (GLuint program, GLint location, GLsizei count, const GLuint64 *value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4UI64VARBPROC) (GLuint program, GLint location, GLsizei count, const GLuint64 *value);
// GL_ARB_gpu_shader_int64

// GL_ARB_half_float_pixel
AXLGLFLAPI bool GL_ARB_half_float_pixel;
typedef uint16_t GLhalfARB;
AXLGLFLCONSTMODIFIER GLconstant GL_HALF_FLOAT_ARB = 0x140B;
// GL_ARB_half_float_pixel

// GL_ARB_half_float_vertex
AXLGLFLAPI bool GL_ARB_half_float_vertex;
// GL_ARB_half_float_vertex

// GL_ARB_imaging
AXLGLFLAPI bool GL_ARB_imaging;
AXLGLFLCONSTMODIFIER GLconstant GL_CONVOLUTION_BORDER_MODE = 0x8013;
AXLGLFLCONSTMODIFIER GLconstant GL_CONVOLUTION_FILTER_SCALE = 0x8014;
AXLGLFLCONSTMODIFIER GLconstant GL_CONVOLUTION_FILTER_BIAS = 0x8015;
AXLGLFLCONSTMODIFIER GLconstant GL_REDUCE = 0x8016;
AXLGLFLCONSTMODIFIER GLconstant GL_CONVOLUTION_FORMAT = 0x8017;
AXLGLFLCONSTMODIFIER GLconstant GL_CONVOLUTION_WIDTH = 0x8018;
AXLGLFLCONSTMODIFIER GLconstant GL_CONVOLUTION_HEIGHT = 0x8019;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_CONVOLUTION_WIDTH = 0x801A;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_CONVOLUTION_HEIGHT = 0x801B;
AXLGLFLCONSTMODIFIER GLconstant GL_POST_CONVOLUTION_RED_SCALE = 0x801C;
AXLGLFLCONSTMODIFIER GLconstant GL_POST_CONVOLUTION_GREEN_SCALE = 0x801D;
AXLGLFLCONSTMODIFIER GLconstant GL_POST_CONVOLUTION_BLUE_SCALE = 0x801E;
AXLGLFLCONSTMODIFIER GLconstant GL_POST_CONVOLUTION_ALPHA_SCALE = 0x801F;
AXLGLFLCONSTMODIFIER GLconstant GL_POST_CONVOLUTION_RED_BIAS = 0x8020;
AXLGLFLCONSTMODIFIER GLconstant GL_POST_CONVOLUTION_GREEN_BIAS = 0x8021;
AXLGLFLCONSTMODIFIER GLconstant GL_POST_CONVOLUTION_BLUE_BIAS = 0x8022;
AXLGLFLCONSTMODIFIER GLconstant GL_POST_CONVOLUTION_ALPHA_BIAS = 0x8023;
AXLGLFLCONSTMODIFIER GLconstant GL_HISTOGRAM_WIDTH = 0x8026;
AXLGLFLCONSTMODIFIER GLconstant GL_HISTOGRAM_FORMAT = 0x8027;
AXLGLFLCONSTMODIFIER GLconstant GL_HISTOGRAM_RED_SIZE = 0x8028;
AXLGLFLCONSTMODIFIER GLconstant GL_HISTOGRAM_GREEN_SIZE = 0x8029;
AXLGLFLCONSTMODIFIER GLconstant GL_HISTOGRAM_BLUE_SIZE = 0x802A;
AXLGLFLCONSTMODIFIER GLconstant GL_HISTOGRAM_ALPHA_SIZE = 0x802B;
AXLGLFLCONSTMODIFIER GLconstant GL_HISTOGRAM_LUMINANCE_SIZE = 0x802C;
AXLGLFLCONSTMODIFIER GLconstant GL_HISTOGRAM_SINK = 0x802D;
AXLGLFLCONSTMODIFIER GLconstant GL_MINMAX_FORMAT = 0x802F;
AXLGLFLCONSTMODIFIER GLconstant GL_MINMAX_SINK = 0x8030;
AXLGLFLCONSTMODIFIER GLconstant GL_TABLE_TOO_LARGE = 0x8031;
AXLGLFLCONSTMODIFIER GLconstant GL_COLOR_MATRIX = 0x80B1;
AXLGLFLCONSTMODIFIER GLconstant GL_COLOR_MATRIX_STACK_DEPTH = 0x80B2;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_COLOR_MATRIX_STACK_DEPTH = 0x80B3;
AXLGLFLCONSTMODIFIER GLconstant GL_POST_COLOR_MATRIX_RED_SCALE = 0x80B4;
AXLGLFLCONSTMODIFIER GLconstant GL_POST_COLOR_MATRIX_GREEN_SCALE = 0x80B5;
AXLGLFLCONSTMODIFIER GLconstant GL_POST_COLOR_MATRIX_BLUE_SCALE = 0x80B6;
AXLGLFLCONSTMODIFIER GLconstant GL_POST_COLOR_MATRIX_ALPHA_SCALE = 0x80B7;
AXLGLFLCONSTMODIFIER GLconstant GL_POST_COLOR_MATRIX_RED_BIAS = 0x80B8;
AXLGLFLCONSTMODIFIER GLconstant GL_POST_COLOR_MATRIX_GREEN_BIAS = 0x80B9;
AXLGLFLCONSTMODIFIER GLconstant GL_POST_COLOR_MATRIX_BLUE_BIAS = 0x80BA;
AXLGLFLCONSTMODIFIER GLconstant GL_POST_COLOR_MATRIX_ALPHA_BIAS = 0x80BB;
AXLGLFLCONSTMODIFIER GLconstant GL_COLOR_TABLE_SCALE = 0x80D6;
AXLGLFLCONSTMODIFIER GLconstant GL_COLOR_TABLE_BIAS = 0x80D7;
AXLGLFLCONSTMODIFIER GLconstant GL_COLOR_TABLE_FORMAT = 0x80D8;
AXLGLFLCONSTMODIFIER GLconstant GL_COLOR_TABLE_WIDTH = 0x80D9;
AXLGLFLCONSTMODIFIER GLconstant GL_COLOR_TABLE_RED_SIZE = 0x80DA;
AXLGLFLCONSTMODIFIER GLconstant GL_COLOR_TABLE_GREEN_SIZE = 0x80DB;
AXLGLFLCONSTMODIFIER GLconstant GL_COLOR_TABLE_BLUE_SIZE = 0x80DC;
AXLGLFLCONSTMODIFIER GLconstant GL_COLOR_TABLE_ALPHA_SIZE = 0x80DD;
AXLGLFLCONSTMODIFIER GLconstant GL_COLOR_TABLE_LUMINANCE_SIZE = 0x80DE;
AXLGLFLCONSTMODIFIER GLconstant GL_COLOR_TABLE_INTENSITY_SIZE = 0x80DF;
AXLGLFLCONSTMODIFIER GLconstant GL_CONSTANT_BORDER = 0x8151;
AXLGLFLCONSTMODIFIER GLconstant GL_REPLICATE_BORDER = 0x8153;
AXLGLFLCONSTMODIFIER GLconstant GL_CONVOLUTION_BORDER_COLOR = 0x8154;
typedef void (APIENTRYP PFNGLCOLORTABLEPROC) (GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const void *table);
typedef void (APIENTRYP PFNGLCOLORTABLEPARAMETERFVPROC) (GLenum target, GLenum pname, const GLfloat *params);
typedef void (APIENTRYP PFNGLCOLORTABLEPARAMETERIVPROC) (GLenum target, GLenum pname, const GLint *params);
typedef void (APIENTRYP PFNGLCOPYCOLORTABLEPROC) (GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width);
typedef void (APIENTRYP PFNGLGETCOLORTABLEPROC) (GLenum target, GLenum format, GLenum type, void *table);
typedef void (APIENTRYP PFNGLGETCOLORTABLEPARAMETERFVPROC) (GLenum target, GLenum pname, GLfloat *params);
typedef void (APIENTRYP PFNGLGETCOLORTABLEPARAMETERIVPROC) (GLenum target, GLenum pname, GLint *params);
typedef void (APIENTRYP PFNGLCOLORSUBTABLEPROC) (GLenum target, GLsizei start, GLsizei count, GLenum format, GLenum type, const void *data);
typedef void (APIENTRYP PFNGLCOPYCOLORSUBTABLEPROC) (GLenum target, GLsizei start, GLint x, GLint y, GLsizei width);
typedef void (APIENTRYP PFNGLCONVOLUTIONFILTER1DPROC) (GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const void *image);
typedef void (APIENTRYP PFNGLCONVOLUTIONFILTER2DPROC) (GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *image);
typedef void (APIENTRYP PFNGLCONVOLUTIONPARAMETERFPROC) (GLenum target, GLenum pname, GLfloat params);
typedef void (APIENTRYP PFNGLCONVOLUTIONPARAMETERFVPROC) (GLenum target, GLenum pname, const GLfloat *params);
typedef void (APIENTRYP PFNGLCONVOLUTIONPARAMETERIPROC) (GLenum target, GLenum pname, GLint params);
typedef void (APIENTRYP PFNGLCONVOLUTIONPARAMETERIVPROC) (GLenum target, GLenum pname, const GLint *params);
typedef void (APIENTRYP PFNGLCOPYCONVOLUTIONFILTER1DPROC) (GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width);
typedef void (APIENTRYP PFNGLCOPYCONVOLUTIONFILTER2DPROC) (GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height);
typedef void (APIENTRYP PFNGLGETCONVOLUTIONFILTERPROC) (GLenum target, GLenum format, GLenum type, void *image);
typedef void (APIENTRYP PFNGLGETCONVOLUTIONPARAMETERFVPROC) (GLenum target, GLenum pname, GLfloat *params);
typedef void (APIENTRYP PFNGLGETCONVOLUTIONPARAMETERIVPROC) (GLenum target, GLenum pname, GLint *params);
typedef void (APIENTRYP PFNGLGETSEPARABLEFILTERPROC) (GLenum target, GLenum format, GLenum type, void *row, void *column, void *span);
typedef void (APIENTRYP PFNGLSEPARABLEFILTER2DPROC) (GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *row, const void *column);
typedef void (APIENTRYP PFNGLGETHISTOGRAMPROC) (GLenum target, GLboolean reset, GLenum format, GLenum type, void *values);
typedef void (APIENTRYP PFNGLGETHISTOGRAMPARAMETERFVPROC) (GLenum target, GLenum pname, GLfloat *params);
typedef void (APIENTRYP PFNGLGETHISTOGRAMPARAMETERIVPROC) (GLenum target, GLenum pname, GLint *params);
typedef void (APIENTRYP PFNGLGETMINMAXPROC) (GLenum target, GLboolean reset, GLenum format, GLenum type, void *values);
typedef void (APIENTRYP PFNGLGETMINMAXPARAMETERFVPROC) (GLenum target, GLenum pname, GLfloat *params);
typedef void (APIENTRYP PFNGLGETMINMAXPARAMETERIVPROC) (GLenum target, GLenum pname, GLint *params);
typedef void (APIENTRYP PFNGLHISTOGRAMPROC) (GLenum target, GLsizei width, GLenum internalformat, GLboolean sink);
typedef void (APIENTRYP PFNGLMINMAXPROC) (GLenum target, GLenum internalformat, GLboolean sink);
typedef void (APIENTRYP PFNGLRESETHISTOGRAMPROC) (GLenum target);
typedef void (APIENTRYP PFNGLRESETMINMAXPROC) (GLenum target);
// GL_ARB_imaging

// GL_ARB_indirect_parameters
AXLGLFLAPI bool GL_ARB_indirect_parameters;
AXLGLFLCONSTMODIFIER GLconstant GL_PARAMETER_BUFFER_ARB = 0x80EE;
AXLGLFLCONSTMODIFIER GLconstant GL_PARAMETER_BUFFER_BINDING_ARB = 0x80EF;
typedef void (APIENTRYP PFNGLMULTIDRAWARRAYSINDIRECTCOUNTARBPROC) (GLenum mode, const void *indirect, GLintptr drawcount, GLsizei maxdrawcount, GLsizei stride);
typedef void (APIENTRYP PFNGLMULTIDRAWELEMENTSINDIRECTCOUNTARBPROC) (GLenum mode, GLenum type, const void *indirect, GLintptr drawcount, GLsizei maxdrawcount, GLsizei stride);
// GL_ARB_indirect_parameters

// GL_ARB_instanced_arrays
AXLGLFLAPI bool GL_ARB_instanced_arrays;
AXLGLFLCONSTMODIFIER GLconstant GL_VERTEX_ATTRIB_ARRAY_DIVISOR_ARB = 0x88FE;
typedef void (APIENTRYP PFNGLVERTEXATTRIBDIVISORARBPROC) (GLuint index, GLuint divisor);
// GL_ARB_instanced_arrays

// GL_ARB_internalformat_query
AXLGLFLAPI bool GL_ARB_internalformat_query;
// GL_ARB_internalformat_query

// GL_ARB_internalformat_query2
AXLGLFLAPI bool GL_ARB_internalformat_query2;
AXLGLFLCONSTMODIFIER GLconstant GL_SRGB_DECODE_ARB = 0x8299;
AXLGLFLCONSTMODIFIER GLconstant GL_VIEW_CLASS_EAC_R11 = 0x9383;
AXLGLFLCONSTMODIFIER GLconstant GL_VIEW_CLASS_EAC_RG11 = 0x9384;
AXLGLFLCONSTMODIFIER GLconstant GL_VIEW_CLASS_ETC2_RGB = 0x9385;
AXLGLFLCONSTMODIFIER GLconstant GL_VIEW_CLASS_ETC2_RGBA = 0x9386;
AXLGLFLCONSTMODIFIER GLconstant GL_VIEW_CLASS_ETC2_EAC_RGBA = 0x9387;
AXLGLFLCONSTMODIFIER GLconstant GL_VIEW_CLASS_ASTC_4x4_RGBA = 0x9388;
AXLGLFLCONSTMODIFIER GLconstant GL_VIEW_CLASS_ASTC_5x4_RGBA = 0x9389;
AXLGLFLCONSTMODIFIER GLconstant GL_VIEW_CLASS_ASTC_5x5_RGBA = 0x938A;
AXLGLFLCONSTMODIFIER GLconstant GL_VIEW_CLASS_ASTC_6x5_RGBA = 0x938B;
AXLGLFLCONSTMODIFIER GLconstant GL_VIEW_CLASS_ASTC_6x6_RGBA = 0x938C;
AXLGLFLCONSTMODIFIER GLconstant GL_VIEW_CLASS_ASTC_8x5_RGBA = 0x938D;
AXLGLFLCONSTMODIFIER GLconstant GL_VIEW_CLASS_ASTC_8x6_RGBA = 0x938E;
AXLGLFLCONSTMODIFIER GLconstant GL_VIEW_CLASS_ASTC_8x8_RGBA = 0x938F;
AXLGLFLCONSTMODIFIER GLconstant GL_VIEW_CLASS_ASTC_10x5_RGBA = 0x9390;
AXLGLFLCONSTMODIFIER GLconstant GL_VIEW_CLASS_ASTC_10x6_RGBA = 0x9391;
AXLGLFLCONSTMODIFIER GLconstant GL_VIEW_CLASS_ASTC_10x8_RGBA = 0x9392;
AXLGLFLCONSTMODIFIER GLconstant GL_VIEW_CLASS_ASTC_10x10_RGBA = 0x9393;
AXLGLFLCONSTMODIFIER GLconstant GL_VIEW_CLASS_ASTC_12x10_RGBA = 0x9394;
AXLGLFLCONSTMODIFIER GLconstant GL_VIEW_CLASS_ASTC_12x12_RGBA = 0x9395;
// GL_ARB_internalformat_query2

// GL_ARB_invalidate_subdata
AXLGLFLAPI bool GL_ARB_invalidate_subdata;
// GL_ARB_invalidate_subdata

// GL_ARB_map_buffer_alignment
AXLGLFLAPI bool GL_ARB_map_buffer_alignment;
// GL_ARB_map_buffer_alignment

// GL_ARB_map_buffer_range
AXLGLFLAPI bool GL_ARB_map_buffer_range;
// GL_ARB_map_buffer_range

// GL_ARB_matrix_palette
AXLGLFLAPI bool GL_ARB_matrix_palette;
AXLGLFLCONSTMODIFIER GLconstant GL_MATRIX_PALETTE_ARB = 0x8840;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_MATRIX_PALETTE_STACK_DEPTH_ARB = 0x8841;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_PALETTE_MATRICES_ARB = 0x8842;
AXLGLFLCONSTMODIFIER GLconstant GL_CURRENT_PALETTE_MATRIX_ARB = 0x8843;
AXLGLFLCONSTMODIFIER GLconstant GL_MATRIX_INDEX_ARRAY_ARB = 0x8844;
AXLGLFLCONSTMODIFIER GLconstant GL_CURRENT_MATRIX_INDEX_ARB = 0x8845;
AXLGLFLCONSTMODIFIER GLconstant GL_MATRIX_INDEX_ARRAY_SIZE_ARB = 0x8846;
AXLGLFLCONSTMODIFIER GLconstant GL_MATRIX_INDEX_ARRAY_TYPE_ARB = 0x8847;
AXLGLFLCONSTMODIFIER GLconstant GL_MATRIX_INDEX_ARRAY_STRIDE_ARB = 0x8848;
AXLGLFLCONSTMODIFIER GLconstant GL_MATRIX_INDEX_ARRAY_POINTER_ARB = 0x8849;
typedef void (APIENTRYP PFNGLCURRENTPALETTEMATRIXARBPROC) (GLint index);
typedef void (APIENTRYP PFNGLMATRIXINDEXUBVARBPROC) (GLint size, const GLubyte *indices);
typedef void (APIENTRYP PFNGLMATRIXINDEXUSVARBPROC) (GLint size, const GLushort *indices);
typedef void (APIENTRYP PFNGLMATRIXINDEXUIVARBPROC) (GLint size, const GLuint *indices);
typedef void (APIENTRYP PFNGLMATRIXINDEXPOINTERARBPROC) (GLint size, GLenum type, GLsizei stride, const void *pointer);
// GL_ARB_matrix_palette

// GL_ARB_multi_bind
AXLGLFLAPI bool GL_ARB_multi_bind;
// GL_ARB_multi_bind

// GL_ARB_multi_draw_indirect
AXLGLFLAPI bool GL_ARB_multi_draw_indirect;
// GL_ARB_multi_draw_indirect

// GL_ARB_multisample
AXLGLFLAPI bool GL_ARB_multisample;
AXLGLFLCONSTMODIFIER GLconstant GL_MULTISAMPLE_ARB = 0x809D;
AXLGLFLCONSTMODIFIER GLconstant GL_SAMPLE_ALPHA_TO_COVERAGE_ARB = 0x809E;
AXLGLFLCONSTMODIFIER GLconstant GL_SAMPLE_ALPHA_TO_ONE_ARB = 0x809F;
AXLGLFLCONSTMODIFIER GLconstant GL_SAMPLE_COVERAGE_ARB = 0x80A0;
AXLGLFLCONSTMODIFIER GLconstant GL_SAMPLE_BUFFERS_ARB = 0x80A8;
AXLGLFLCONSTMODIFIER GLconstant GL_SAMPLES_ARB = 0x80A9;
AXLGLFLCONSTMODIFIER GLconstant GL_SAMPLE_COVERAGE_VALUE_ARB = 0x80AA;
AXLGLFLCONSTMODIFIER GLconstant GL_SAMPLE_COVERAGE_INVERT_ARB = 0x80AB;
AXLGLFLCONSTMODIFIER GLconstant GL_MULTISAMPLE_BIT_ARB = 0x200000;00
typedef void (APIENTRYP PFNGLSAMPLECOVERAGEARBPROC) (GLfloat value, GLboolean invert);
// GL_ARB_multisample

// GL_ARB_multitexture
AXLGLFLAPI bool GL_ARB_multitexture;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE0_ARB = 0x84C0;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE1_ARB = 0x84C1;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE2_ARB = 0x84C2;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE3_ARB = 0x84C3;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE4_ARB = 0x84C4;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE5_ARB = 0x84C5;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE6_ARB = 0x84C6;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE7_ARB = 0x84C7;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE8_ARB = 0x84C8;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE9_ARB = 0x84C9;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE10_ARB = 0x84CA;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE11_ARB = 0x84CB;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE12_ARB = 0x84CC;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE13_ARB = 0x84CD;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE14_ARB = 0x84CE;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE15_ARB = 0x84CF;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE16_ARB = 0x84D0;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE17_ARB = 0x84D1;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE18_ARB = 0x84D2;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE19_ARB = 0x84D3;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE20_ARB = 0x84D4;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE21_ARB = 0x84D5;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE22_ARB = 0x84D6;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE23_ARB = 0x84D7;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE24_ARB = 0x84D8;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE25_ARB = 0x84D9;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE26_ARB = 0x84DA;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE27_ARB = 0x84DB;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE28_ARB = 0x84DC;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE29_ARB = 0x84DD;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE30_ARB = 0x84DE;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE31_ARB = 0x84DF;
AXLGLFLCONSTMODIFIER GLconstant GL_ACTIVE_TEXTURE_ARB = 0x84E0;
AXLGLFLCONSTMODIFIER GLconstant GL_CLIENT_ACTIVE_TEXTURE_ARB = 0x84E1;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_TEXTURE_UNITS_ARB = 0x84E2;
typedef void (APIENTRYP PFNGLACTIVETEXTUREARBPROC) (GLenum texture);
typedef void (APIENTRYP PFNGLCLIENTACTIVETEXTUREARBPROC) (GLenum texture);
typedef void (APIENTRYP PFNGLMULTITEXCOORD1DARBPROC) (GLenum target, GLdouble s);
typedef void (APIENTRYP PFNGLMULTITEXCOORD1DVARBPROC) (GLenum target, const GLdouble *v);
typedef void (APIENTRYP PFNGLMULTITEXCOORD1FARBPROC) (GLenum target, GLfloat s);
typedef void (APIENTRYP PFNGLMULTITEXCOORD1FVARBPROC) (GLenum target, const GLfloat *v);
typedef void (APIENTRYP PFNGLMULTITEXCOORD1IARBPROC) (GLenum target, GLint s);
typedef void (APIENTRYP PFNGLMULTITEXCOORD1IVARBPROC) (GLenum target, const GLint *v);
typedef void (APIENTRYP PFNGLMULTITEXCOORD1SARBPROC) (GLenum target, GLshort s);
typedef void (APIENTRYP PFNGLMULTITEXCOORD1SVARBPROC) (GLenum target, const GLshort *v);
typedef void (APIENTRYP PFNGLMULTITEXCOORD2DARBPROC) (GLenum target, GLdouble s, GLdouble t);
typedef void (APIENTRYP PFNGLMULTITEXCOORD2DVARBPROC) (GLenum target, const GLdouble *v);
typedef void (APIENTRYP PFNGLMULTITEXCOORD2FARBPROC) (GLenum target, GLfloat s, GLfloat t);
typedef void (APIENTRYP PFNGLMULTITEXCOORD2FVARBPROC) (GLenum target, const GLfloat *v);
typedef void (APIENTRYP PFNGLMULTITEXCOORD2IARBPROC) (GLenum target, GLint s, GLint t);
typedef void (APIENTRYP PFNGLMULTITEXCOORD2IVARBPROC) (GLenum target, const GLint *v);
typedef void (APIENTRYP PFNGLMULTITEXCOORD2SARBPROC) (GLenum target, GLshort s, GLshort t);
typedef void (APIENTRYP PFNGLMULTITEXCOORD2SVARBPROC) (GLenum target, const GLshort *v);
typedef void (APIENTRYP PFNGLMULTITEXCOORD3DARBPROC) (GLenum target, GLdouble s, GLdouble t, GLdouble r);
typedef void (APIENTRYP PFNGLMULTITEXCOORD3DVARBPROC) (GLenum target, const GLdouble *v);
typedef void (APIENTRYP PFNGLMULTITEXCOORD3FARBPROC) (GLenum target, GLfloat s, GLfloat t, GLfloat r);
typedef void (APIENTRYP PFNGLMULTITEXCOORD3FVARBPROC) (GLenum target, const GLfloat *v);
typedef void (APIENTRYP PFNGLMULTITEXCOORD3IARBPROC) (GLenum target, GLint s, GLint t, GLint r);
typedef void (APIENTRYP PFNGLMULTITEXCOORD3IVARBPROC) (GLenum target, const GLint *v);
typedef void (APIENTRYP PFNGLMULTITEXCOORD3SARBPROC) (GLenum target, GLshort s, GLshort t, GLshort r);
typedef void (APIENTRYP PFNGLMULTITEXCOORD3SVARBPROC) (GLenum target, const GLshort *v);
typedef void (APIENTRYP PFNGLMULTITEXCOORD4DARBPROC) (GLenum target, GLdouble s, GLdouble t, GLdouble r, GLdouble q);
typedef void (APIENTRYP PFNGLMULTITEXCOORD4DVARBPROC) (GLenum target, const GLdouble *v);
typedef void (APIENTRYP PFNGLMULTITEXCOORD4FARBPROC) (GLenum target, GLfloat s, GLfloat t, GLfloat r, GLfloat q);
typedef void (APIENTRYP PFNGLMULTITEXCOORD4FVARBPROC) (GLenum target, const GLfloat *v);
typedef void (APIENTRYP PFNGLMULTITEXCOORD4IARBPROC) (GLenum target, GLint s, GLint t, GLint r, GLint q);
typedef void (APIENTRYP PFNGLMULTITEXCOORD4IVARBPROC) (GLenum target, const GLint *v);
typedef void (APIENTRYP PFNGLMULTITEXCOORD4SARBPROC) (GLenum target, GLshort s, GLshort t, GLshort r, GLshort q);
typedef void (APIENTRYP PFNGLMULTITEXCOORD4SVARBPROC) (GLenum target, const GLshort *v);
// GL_ARB_multitexture

// GL_ARB_occlusion_query
AXLGLFLAPI bool GL_ARB_occlusion_query;
AXLGLFLCONSTMODIFIER GLconstant GL_QUERY_COUNTER_BITS_ARB = 0x8864;
AXLGLFLCONSTMODIFIER GLconstant GL_CURRENT_QUERY_ARB = 0x8865;
AXLGLFLCONSTMODIFIER GLconstant GL_QUERY_RESULT_ARB = 0x8866;
AXLGLFLCONSTMODIFIER GLconstant GL_QUERY_RESULT_AVAILABLE_ARB = 0x8867;
AXLGLFLCONSTMODIFIER GLconstant GL_SAMPLES_PASSED_ARB = 0x8914;
typedef void (APIENTRYP PFNGLGENQUERIESARBPROC) (GLsizei n, GLuint *ids);
typedef void (APIENTRYP PFNGLDELETEQUERIESARBPROC) (GLsizei n, const GLuint *ids);
typedef GLboolean (APIENTRYP PFNGLISQUERYARBPROC) (GLuint id);
typedef void (APIENTRYP PFNGLBEGINQUERYARBPROC) (GLenum target, GLuint id);
typedef void (APIENTRYP PFNGLENDQUERYARBPROC) (GLenum target);
typedef void (APIENTRYP PFNGLGETQUERYIVARBPROC) (GLenum target, GLenum pname, GLint *params);
typedef void (APIENTRYP PFNGLGETQUERYOBJECTIVARBPROC) (GLuint id, GLenum pname, GLint *params);
typedef void (APIENTRYP PFNGLGETQUERYOBJECTUIVARBPROC) (GLuint id, GLenum pname, GLuint *params);
// GL_ARB_occlusion_query

// GL_ARB_occlusion_query2
AXLGLFLAPI bool GL_ARB_occlusion_query2;
// GL_ARB_occlusion_query2

// GL_ARB_parallel_shader_compile
AXLGLFLAPI bool GL_ARB_parallel_shader_compile;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_SHADER_COMPILER_THREADS_ARB = 0x91B0;
AXLGLFLCONSTMODIFIER GLconstant GL_COMPLETION_STATUS_ARB = 0x91B1;
typedef void (APIENTRYP PFNGLMAXSHADERCOMPILERTHREADSARBPROC) (GLuint count);
// GL_ARB_parallel_shader_compile

// GL_ARB_pipeline_statistics_query
AXLGLFLAPI bool GL_ARB_pipeline_statistics_query;
AXLGLFLCONSTMODIFIER GLconstant GL_VERTICES_SUBMITTED_ARB = 0x82EE;
AXLGLFLCONSTMODIFIER GLconstant GL_PRIMITIVES_SUBMITTED_ARB = 0x82EF;
AXLGLFLCONSTMODIFIER GLconstant GL_VERTEX_SHADER_INVOCATIONS_ARB = 0x82F0;
AXLGLFLCONSTMODIFIER GLconstant GL_TESS_CONTROL_SHADER_PATCHES_ARB = 0x82F1;
AXLGLFLCONSTMODIFIER GLconstant GL_TESS_EVALUATION_SHADER_INVOCATIONS_ARB = 0x82F2;
AXLGLFLCONSTMODIFIER GLconstant GL_GEOMETRY_SHADER_PRIMITIVES_EMITTED_ARB = 0x82F3;
AXLGLFLCONSTMODIFIER GLconstant GL_FRAGMENT_SHADER_INVOCATIONS_ARB = 0x82F4;
AXLGLFLCONSTMODIFIER GLconstant GL_COMPUTE_SHADER_INVOCATIONS_ARB = 0x82F5;
AXLGLFLCONSTMODIFIER GLconstant GL_CLIPPING_INPUT_PRIMITIVES_ARB = 0x82F6;
AXLGLFLCONSTMODIFIER GLconstant GL_CLIPPING_OUTPUT_PRIMITIVES_ARB = 0x82F7;
// GL_ARB_pipeline_statistics_query

// GL_ARB_pixel_buffer_object
AXLGLFLAPI bool GL_ARB_pixel_buffer_object;
AXLGLFLCONSTMODIFIER GLconstant GL_PIXEL_PACK_BUFFER_ARB = 0x88EB;
AXLGLFLCONSTMODIFIER GLconstant GL_PIXEL_UNPACK_BUFFER_ARB = 0x88EC;
AXLGLFLCONSTMODIFIER GLconstant GL_PIXEL_PACK_BUFFER_BINDING_ARB = 0x88ED;
AXLGLFLCONSTMODIFIER GLconstant GL_PIXEL_UNPACK_BUFFER_BINDING_ARB = 0x88EF;
// GL_ARB_pixel_buffer_object

// GL_ARB_point_parameters
AXLGLFLAPI bool GL_ARB_point_parameters;
AXLGLFLCONSTMODIFIER GLconstant GL_POINT_SIZE_MIN_ARB = 0x8126;
AXLGLFLCONSTMODIFIER GLconstant GL_POINT_SIZE_MAX_ARB = 0x8127;
AXLGLFLCONSTMODIFIER GLconstant GL_POINT_FADE_THRESHOLD_SIZE_ARB = 0x8128;
AXLGLFLCONSTMODIFIER GLconstant GL_POINT_DISTANCE_ATTENUATION_ARB = 0x8129;
typedef void (APIENTRYP PFNGLPOINTPARAMETERFARBPROC) (GLenum pname, GLfloat param);
typedef void (APIENTRYP PFNGLPOINTPARAMETERFVARBPROC) (GLenum pname, const GLfloat *params);
// GL_ARB_point_parameters

// GL_ARB_point_sprite
AXLGLFLAPI bool GL_ARB_point_sprite;
AXLGLFLCONSTMODIFIER GLconstant GL_POINT_SPRITE_ARB = 0x8861;
AXLGLFLCONSTMODIFIER GLconstant GL_COORD_REPLACE_ARB = 0x8862;
// GL_ARB_point_sprite

// GL_ARB_polygon_offset_clamp
AXLGLFLAPI bool GL_ARB_polygon_offset_clamp;
// GL_ARB_polygon_offset_clamp

// GL_ARB_post_depth_coverage
AXLGLFLAPI bool GL_ARB_post_depth_coverage;
// GL_ARB_post_depth_coverage

// GL_ARB_program_interface_query
AXLGLFLAPI bool GL_ARB_program_interface_query;
// GL_ARB_program_interface_query

// GL_ARB_provoking_vertex
AXLGLFLAPI bool GL_ARB_provoking_vertex;
// GL_ARB_provoking_vertex

// GL_ARB_query_buffer_object
AXLGLFLAPI bool GL_ARB_query_buffer_object;
// GL_ARB_query_buffer_object

// GL_ARB_robust_buffer_access_behavior
AXLGLFLAPI bool GL_ARB_robust_buffer_access_behavior;
// GL_ARB_robust_buffer_access_behavior

// GL_ARB_robustness
AXLGLFLAPI bool GL_ARB_robustness;
AXLGLFLCONSTMODIFIER GLconstant GL_CONTEXT_FLAG_ROBUST_ACCESS_BIT_ARB = 0x000000;04
AXLGLFLCONSTMODIFIER GLconstant GL_LOSE_CONTEXT_ON_RESET_ARB = 0x8252;
AXLGLFLCONSTMODIFIER GLconstant GL_GUILTY_CONTEXT_RESET_ARB = 0x8253;
AXLGLFLCONSTMODIFIER GLconstant GL_INNOCENT_CONTEXT_RESET_ARB = 0x8254;
AXLGLFLCONSTMODIFIER GLconstant GL_UNKNOWN_CONTEXT_RESET_ARB = 0x8255;
AXLGLFLCONSTMODIFIER GLconstant GL_RESET_NOTIFICATION_STRATEGY_ARB = 0x8256;
AXLGLFLCONSTMODIFIER GLconstant GL_NO_RESET_NOTIFICATION_ARB = 0x8261;
typedef GLenum (APIENTRYP PFNGLGETGRAPHICSRESETSTATUSARBPROC) (void);
typedef void (APIENTRYP PFNGLGETNTEXIMAGEARBPROC) (GLenum target, GLint level, GLenum format, GLenum type, GLsizei bufSize, void *img);
typedef void (APIENTRYP PFNGLREADNPIXELSARBPROC) (GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLsizei bufSize, void *data);
typedef void (APIENTRYP PFNGLGETNCOMPRESSEDTEXIMAGEARBPROC) (GLenum target, GLint lod, GLsizei bufSize, void *img);
typedef void (APIENTRYP PFNGLGETNUNIFORMFVARBPROC) (GLuint program, GLint location, GLsizei bufSize, GLfloat *params);
typedef void (APIENTRYP PFNGLGETNUNIFORMIVARBPROC) (GLuint program, GLint location, GLsizei bufSize, GLint *params);
typedef void (APIENTRYP PFNGLGETNUNIFORMUIVARBPROC) (GLuint program, GLint location, GLsizei bufSize, GLuint *params);
typedef void (APIENTRYP PFNGLGETNUNIFORMDVARBPROC) (GLuint program, GLint location, GLsizei bufSize, GLdouble *params);
typedef void (APIENTRYP PFNGLGETNMAPDVARBPROC) (GLenum target, GLenum query, GLsizei bufSize, GLdouble *v);
typedef void (APIENTRYP PFNGLGETNMAPFVARBPROC) (GLenum target, GLenum query, GLsizei bufSize, GLfloat *v);
typedef void (APIENTRYP PFNGLGETNMAPIVARBPROC) (GLenum target, GLenum query, GLsizei bufSize, GLint *v);
typedef void (APIENTRYP PFNGLGETNPIXELMAPFVARBPROC) (GLenum map, GLsizei bufSize, GLfloat *values);
typedef void (APIENTRYP PFNGLGETNPIXELMAPUIVARBPROC) (GLenum map, GLsizei bufSize, GLuint *values);
typedef void (APIENTRYP PFNGLGETNPIXELMAPUSVARBPROC) (GLenum map, GLsizei bufSize, GLushort *values);
typedef void (APIENTRYP PFNGLGETNPOLYGONSTIPPLEARBPROC) (GLsizei bufSize, GLubyte *pattern);
typedef void (APIENTRYP PFNGLGETNCOLORTABLEARBPROC) (GLenum target, GLenum format, GLenum type, GLsizei bufSize, void *table);
typedef void (APIENTRYP PFNGLGETNCONVOLUTIONFILTERARBPROC) (GLenum target, GLenum format, GLenum type, GLsizei bufSize, void *image);
typedef void (APIENTRYP PFNGLGETNSEPARABLEFILTERARBPROC) (GLenum target, GLenum format, GLenum type, GLsizei rowBufSize, void *row, GLsizei columnBufSize, void *column, void *span);
typedef void (APIENTRYP PFNGLGETNHISTOGRAMARBPROC) (GLenum target, GLboolean reset, GLenum format, GLenum type, GLsizei bufSize, void *values);
typedef void (APIENTRYP PFNGLGETNMINMAXARBPROC) (GLenum target, GLboolean reset, GLenum format, GLenum type, GLsizei bufSize, void *values);
// GL_ARB_robustness

// GL_ARB_robustness_isolation
AXLGLFLAPI bool GL_ARB_robustness_isolation;
// GL_ARB_robustness_isolation

// GL_ARB_sample_locations
AXLGLFLAPI bool GL_ARB_sample_locations;
AXLGLFLCONSTMODIFIER GLconstant GL_SAMPLE_LOCATION_SUBPIXEL_BITS_ARB = 0x933D;
AXLGLFLCONSTMODIFIER GLconstant GL_SAMPLE_LOCATION_PIXEL_GRID_WIDTH_ARB = 0x933E;
AXLGLFLCONSTMODIFIER GLconstant GL_SAMPLE_LOCATION_PIXEL_GRID_HEIGHT_ARB = 0x933F;
AXLGLFLCONSTMODIFIER GLconstant GL_PROGRAMMABLE_SAMPLE_LOCATION_TABLE_SIZE_ARB = 0x9340;
AXLGLFLCONSTMODIFIER GLconstant GL_SAMPLE_LOCATION_ARB = 0x8E50;
AXLGLFLCONSTMODIFIER GLconstant GL_PROGRAMMABLE_SAMPLE_LOCATION_ARB = 0x9341;
AXLGLFLCONSTMODIFIER GLconstant GL_FRAMEBUFFER_PROGRAMMABLE_SAMPLE_LOCATIONS_ARB = 0x9342;
AXLGLFLCONSTMODIFIER GLconstant GL_FRAMEBUFFER_SAMPLE_LOCATION_PIXEL_GRID_ARB = 0x9343;
typedef void (APIENTRYP PFNGLFRAMEBUFFERSAMPLELOCATIONSFVARBPROC) (GLenum target, GLuint start, GLsizei count, const GLfloat *v);
typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERSAMPLELOCATIONSFVARBPROC) (GLuint framebuffer, GLuint start, GLsizei count, const GLfloat *v);
typedef void (APIENTRYP PFNGLEVALUATEDEPTHVALUESARBPROC) (void);
// GL_ARB_sample_locations

// GL_ARB_sample_shading
AXLGLFLAPI bool GL_ARB_sample_shading;
AXLGLFLCONSTMODIFIER GLconstant GL_SAMPLE_SHADING_ARB = 0x8C36;
AXLGLFLCONSTMODIFIER GLconstant GL_MIN_SAMPLE_SHADING_VALUE_ARB = 0x8C37;
typedef void (APIENTRYP PFNGLMINSAMPLESHADINGARBPROC) (GLfloat value);
// GL_ARB_sample_shading

// GL_ARB_sampler_objects
AXLGLFLAPI bool GL_ARB_sampler_objects;
// GL_ARB_sampler_objects

// GL_ARB_seamless_cube_map
AXLGLFLAPI bool GL_ARB_seamless_cube_map;
// GL_ARB_seamless_cube_map

// GL_ARB_seamless_cubemap_per_texture
AXLGLFLAPI bool GL_ARB_seamless_cubemap_per_texture;
// GL_ARB_seamless_cubemap_per_texture

// GL_ARB_separate_shader_objects
AXLGLFLAPI bool GL_ARB_separate_shader_objects;
// GL_ARB_separate_shader_objects

// GL_ARB_shader_atomic_counter_ops
AXLGLFLAPI bool GL_ARB_shader_atomic_counter_ops;
// GL_ARB_shader_atomic_counter_ops

// GL_ARB_shader_atomic_counters
AXLGLFLAPI bool GL_ARB_shader_atomic_counters;
// GL_ARB_shader_atomic_counters

// GL_ARB_shader_ballot
AXLGLFLAPI bool GL_ARB_shader_ballot;
// GL_ARB_shader_ballot

// GL_ARB_shader_bit_encoding
AXLGLFLAPI bool GL_ARB_shader_bit_encoding;
// GL_ARB_shader_bit_encoding

// GL_ARB_shader_clock
AXLGLFLAPI bool GL_ARB_shader_clock;
// GL_ARB_shader_clock

// GL_ARB_shader_draw_parameters
AXLGLFLAPI bool GL_ARB_shader_draw_parameters;
// GL_ARB_shader_draw_parameters

// GL_ARB_shader_group_vote
AXLGLFLAPI bool GL_ARB_shader_group_vote;
// GL_ARB_shader_group_vote

// GL_ARB_shader_image_load_store
AXLGLFLAPI bool GL_ARB_shader_image_load_store;
// GL_ARB_shader_image_load_store

// GL_ARB_shader_image_size
AXLGLFLAPI bool GL_ARB_shader_image_size;
// GL_ARB_shader_image_size

// GL_ARB_shader_objects
AXLGLFLAPI bool GL_ARB_shader_objects;
#ifdef __APPLE__
typedef void *GLhandleARB;
#else
typedef unsigned int GLhandleARB;
#endif
typedef char GLcharARB;
AXLGLFLCONSTMODIFIER GLconstant GL_PROGRAM_OBJECT_ARB = 0x8B40;
AXLGLFLCONSTMODIFIER GLconstant GL_SHADER_OBJECT_ARB = 0x8B48;
AXLGLFLCONSTMODIFIER GLconstant GL_OBJECT_TYPE_ARB = 0x8B4E;
AXLGLFLCONSTMODIFIER GLconstant GL_OBJECT_SUBTYPE_ARB = 0x8B4F;
AXLGLFLCONSTMODIFIER GLconstant GL_FLOAT_VEC2_ARB = 0x8B50;
AXLGLFLCONSTMODIFIER GLconstant GL_FLOAT_VEC3_ARB = 0x8B51;
AXLGLFLCONSTMODIFIER GLconstant GL_FLOAT_VEC4_ARB = 0x8B52;
AXLGLFLCONSTMODIFIER GLconstant GL_INT_VEC2_ARB = 0x8B53;
AXLGLFLCONSTMODIFIER GLconstant GL_INT_VEC3_ARB = 0x8B54;
AXLGLFLCONSTMODIFIER GLconstant GL_INT_VEC4_ARB = 0x8B55;
AXLGLFLCONSTMODIFIER GLconstant GL_BOOL_ARB = 0x8B56;
AXLGLFLCONSTMODIFIER GLconstant GL_BOOL_VEC2_ARB = 0x8B57;
AXLGLFLCONSTMODIFIER GLconstant GL_BOOL_VEC3_ARB = 0x8B58;
AXLGLFLCONSTMODIFIER GLconstant GL_BOOL_VEC4_ARB = 0x8B59;
AXLGLFLCONSTMODIFIER GLconstant GL_FLOAT_MAT2_ARB = 0x8B5A;
AXLGLFLCONSTMODIFIER GLconstant GL_FLOAT_MAT3_ARB = 0x8B5B;
AXLGLFLCONSTMODIFIER GLconstant GL_FLOAT_MAT4_ARB = 0x8B5C;
AXLGLFLCONSTMODIFIER GLconstant GL_SAMPLER_1D_ARB = 0x8B5D;
AXLGLFLCONSTMODIFIER GLconstant GL_SAMPLER_2D_ARB = 0x8B5E;
AXLGLFLCONSTMODIFIER GLconstant GL_SAMPLER_3D_ARB = 0x8B5F;
AXLGLFLCONSTMODIFIER GLconstant GL_SAMPLER_CUBE_ARB = 0x8B60;
AXLGLFLCONSTMODIFIER GLconstant GL_SAMPLER_1D_SHADOW_ARB = 0x8B61;
AXLGLFLCONSTMODIFIER GLconstant GL_SAMPLER_2D_SHADOW_ARB = 0x8B62;
AXLGLFLCONSTMODIFIER GLconstant GL_SAMPLER_2D_RECT_ARB = 0x8B63;
AXLGLFLCONSTMODIFIER GLconstant GL_SAMPLER_2D_RECT_SHADOW_ARB = 0x8B64;
AXLGLFLCONSTMODIFIER GLconstant GL_OBJECT_DELETE_STATUS_ARB = 0x8B80;
AXLGLFLCONSTMODIFIER GLconstant GL_OBJECT_COMPILE_STATUS_ARB = 0x8B81;
AXLGLFLCONSTMODIFIER GLconstant GL_OBJECT_LINK_STATUS_ARB = 0x8B82;
AXLGLFLCONSTMODIFIER GLconstant GL_OBJECT_VALIDATE_STATUS_ARB = 0x8B83;
AXLGLFLCONSTMODIFIER GLconstant GL_OBJECT_INFO_LOG_LENGTH_ARB = 0x8B84;
AXLGLFLCONSTMODIFIER GLconstant GL_OBJECT_ATTACHED_OBJECTS_ARB = 0x8B85;
AXLGLFLCONSTMODIFIER GLconstant GL_OBJECT_ACTIVE_UNIFORMS_ARB = 0x8B86;
AXLGLFLCONSTMODIFIER GLconstant GL_OBJECT_ACTIVE_UNIFORM_MAX_LENGTH_ARB = 0x8B87;
AXLGLFLCONSTMODIFIER GLconstant GL_OBJECT_SHADER_SOURCE_LENGTH_ARB = 0x8B88;
typedef void (APIENTRYP PFNGLDELETEOBJECTARBPROC) (GLhandleARB obj);
typedef GLhandleARB (APIENTRYP PFNGLGETHANDLEARBPROC) (GLenum pname);
typedef void (APIENTRYP PFNGLDETACHOBJECTARBPROC) (GLhandleARB containerObj, GLhandleARB attachedObj);
typedef GLhandleARB (APIENTRYP PFNGLCREATESHADEROBJECTARBPROC) (GLenum shaderType);
typedef void (APIENTRYP PFNGLSHADERSOURCEARBPROC) (GLhandleARB shaderObj, GLsizei count, const GLcharARB **string, const GLint *length);
typedef void (APIENTRYP PFNGLCOMPILESHADERARBPROC) (GLhandleARB shaderObj);
typedef GLhandleARB (APIENTRYP PFNGLCREATEPROGRAMOBJECTARBPROC) (void);
typedef void (APIENTRYP PFNGLATTACHOBJECTARBPROC) (GLhandleARB containerObj, GLhandleARB obj);
typedef void (APIENTRYP PFNGLLINKPROGRAMARBPROC) (GLhandleARB programObj);
typedef void (APIENTRYP PFNGLUSEPROGRAMOBJECTARBPROC) (GLhandleARB programObj);
typedef void (APIENTRYP PFNGLVALIDATEPROGRAMARBPROC) (GLhandleARB programObj);
typedef void (APIENTRYP PFNGLUNIFORM1FARBPROC) (GLint location, GLfloat v0);
typedef void (APIENTRYP PFNGLUNIFORM2FARBPROC) (GLint location, GLfloat v0, GLfloat v1);
typedef void (APIENTRYP PFNGLUNIFORM3FARBPROC) (GLint location, GLfloat v0, GLfloat v1, GLfloat v2);
typedef void (APIENTRYP PFNGLUNIFORM4FARBPROC) (GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);
typedef void (APIENTRYP PFNGLUNIFORM1IARBPROC) (GLint location, GLint v0);
typedef void (APIENTRYP PFNGLUNIFORM2IARBPROC) (GLint location, GLint v0, GLint v1);
typedef void (APIENTRYP PFNGLUNIFORM3IARBPROC) (GLint location, GLint v0, GLint v1, GLint v2);
typedef void (APIENTRYP PFNGLUNIFORM4IARBPROC) (GLint location, GLint v0, GLint v1, GLint v2, GLint v3);
typedef void (APIENTRYP PFNGLUNIFORM1FVARBPROC) (GLint location, GLsizei count, const GLfloat *value);
typedef void (APIENTRYP PFNGLUNIFORM2FVARBPROC) (GLint location, GLsizei count, const GLfloat *value);
typedef void (APIENTRYP PFNGLUNIFORM3FVARBPROC) (GLint location, GLsizei count, const GLfloat *value);
typedef void (APIENTRYP PFNGLUNIFORM4FVARBPROC) (GLint location, GLsizei count, const GLfloat *value);
typedef void (APIENTRYP PFNGLUNIFORM1IVARBPROC) (GLint location, GLsizei count, const GLint *value);
typedef void (APIENTRYP PFNGLUNIFORM2IVARBPROC) (GLint location, GLsizei count, const GLint *value);
typedef void (APIENTRYP PFNGLUNIFORM3IVARBPROC) (GLint location, GLsizei count, const GLint *value);
typedef void (APIENTRYP PFNGLUNIFORM4IVARBPROC) (GLint location, GLsizei count, const GLint *value);
typedef void (APIENTRYP PFNGLUNIFORMMATRIX2FVARBPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
typedef void (APIENTRYP PFNGLUNIFORMMATRIX3FVARBPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
typedef void (APIENTRYP PFNGLUNIFORMMATRIX4FVARBPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
typedef void (APIENTRYP PFNGLGETOBJECTPARAMETERFVARBPROC) (GLhandleARB obj, GLenum pname, GLfloat *params);
typedef void (APIENTRYP PFNGLGETOBJECTPARAMETERIVARBPROC) (GLhandleARB obj, GLenum pname, GLint *params);
typedef void (APIENTRYP PFNGLGETINFOLOGARBPROC) (GLhandleARB obj, GLsizei maxLength, GLsizei *length, GLcharARB *infoLog);
typedef void (APIENTRYP PFNGLGETATTACHEDOBJECTSARBPROC) (GLhandleARB containerObj, GLsizei maxCount, GLsizei *count, GLhandleARB *obj);
typedef GLint (APIENTRYP PFNGLGETUNIFORMLOCATIONARBPROC) (GLhandleARB programObj, const GLcharARB *name);
typedef void (APIENTRYP PFNGLGETACTIVEUNIFORMARBPROC) (GLhandleARB programObj, GLuint index, GLsizei maxLength, GLsizei *length, GLint *size, GLenum *type, GLcharARB *name);
typedef void (APIENTRYP PFNGLGETUNIFORMFVARBPROC) (GLhandleARB programObj, GLint location, GLfloat *params);
typedef void (APIENTRYP PFNGLGETUNIFORMIVARBPROC) (GLhandleARB programObj, GLint location, GLint *params);
typedef void (APIENTRYP PFNGLGETSHADERSOURCEARBPROC) (GLhandleARB obj, GLsizei maxLength, GLsizei *length, GLcharARB *source);
// GL_ARB_shader_objects

// GL_ARB_shader_precision
AXLGLFLAPI bool GL_ARB_shader_precision;
// GL_ARB_shader_precision

// GL_ARB_shader_stencil_export
AXLGLFLAPI bool GL_ARB_shader_stencil_export;
// GL_ARB_shader_stencil_export

// GL_ARB_shader_storage_buffer_object
AXLGLFLAPI bool GL_ARB_shader_storage_buffer_object;
// GL_ARB_shader_storage_buffer_object

// GL_ARB_shader_subroutine
AXLGLFLAPI bool GL_ARB_shader_subroutine;
// GL_ARB_shader_subroutine

// GL_ARB_shader_texture_image_samples
AXLGLFLAPI bool GL_ARB_shader_texture_image_samples;
// GL_ARB_shader_texture_image_samples

// GL_ARB_shader_texture_lod
AXLGLFLAPI bool GL_ARB_shader_texture_lod;
// GL_ARB_shader_texture_lod

// GL_ARB_shader_viewport_layer_array
AXLGLFLAPI bool GL_ARB_shader_viewport_layer_array;
// GL_ARB_shader_viewport_layer_array

// GL_ARB_shading_language_100
AXLGLFLAPI bool GL_ARB_shading_language_100;
AXLGLFLCONSTMODIFIER GLconstant GL_SHADING_LANGUAGE_VERSION_ARB = 0x8B8C;
// GL_ARB_shading_language_100

// GL_ARB_shading_language_420pack
AXLGLFLAPI bool GL_ARB_shading_language_420pack;
// GL_ARB_shading_language_420pack

// GL_ARB_shading_language_include
AXLGLFLAPI bool GL_ARB_shading_language_include;
AXLGLFLCONSTMODIFIER GLconstant GL_SHADER_INCLUDE_ARB = 0x8DAE;
AXLGLFLCONSTMODIFIER GLconstant GL_NAMED_STRING_LENGTH_ARB = 0x8DE9;
AXLGLFLCONSTMODIFIER GLconstant GL_NAMED_STRING_TYPE_ARB = 0x8DEA;
typedef void (APIENTRYP PFNGLNAMEDSTRINGARBPROC) (GLenum type, GLint namelen, const GLchar *name, GLint stringlen, const GLchar *string);
typedef void (APIENTRYP PFNGLDELETENAMEDSTRINGARBPROC) (GLint namelen, const GLchar *name);
typedef void (APIENTRYP PFNGLCOMPILESHADERINCLUDEARBPROC) (GLuint shader, GLsizei count, const GLchar *const*path, const GLint *length);
typedef GLboolean (APIENTRYP PFNGLISNAMEDSTRINGARBPROC) (GLint namelen, const GLchar *name);
typedef void (APIENTRYP PFNGLGETNAMEDSTRINGARBPROC) (GLint namelen, const GLchar *name, GLsizei bufSize, GLint *stringlen, GLchar *string);
typedef void (APIENTRYP PFNGLGETNAMEDSTRINGIVARBPROC) (GLint namelen, const GLchar *name, GLenum pname, GLint *params);
// GL_ARB_shading_language_include

// GL_ARB_shading_language_packing
AXLGLFLAPI bool GL_ARB_shading_language_packing;
// GL_ARB_shading_language_packing

// GL_ARB_shadow
AXLGLFLAPI bool GL_ARB_shadow;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_COMPARE_MODE_ARB = 0x884C;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_COMPARE_FUNC_ARB = 0x884D;
AXLGLFLCONSTMODIFIER GLconstant GL_COMPARE_R_TO_TEXTURE_ARB = 0x884E;
// GL_ARB_shadow

// GL_ARB_shadow_ambient
AXLGLFLAPI bool GL_ARB_shadow_ambient;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_COMPARE_FAIL_VALUE_ARB = 0x80BF;
// GL_ARB_shadow_ambient

// GL_ARB_sparse_buffer
AXLGLFLAPI bool GL_ARB_sparse_buffer;
AXLGLFLCONSTMODIFIER GLconstant GL_SPARSE_STORAGE_BIT_ARB = 0x0400;
AXLGLFLCONSTMODIFIER GLconstant GL_SPARSE_BUFFER_PAGE_SIZE_ARB = 0x82F8;
typedef void (APIENTRYP PFNGLBUFFERPAGECOMMITMENTARBPROC) (GLenum target, GLintptr offset, GLsizeiptr size, GLboolean commit);
typedef void (APIENTRYP PFNGLNAMEDBUFFERPAGECOMMITMENTEXTPROC) (GLuint buffer, GLintptr offset, GLsizeiptr size, GLboolean commit);
typedef void (APIENTRYP PFNGLNAMEDBUFFERPAGECOMMITMENTARBPROC) (GLuint buffer, GLintptr offset, GLsizeiptr size, GLboolean commit);
// GL_ARB_sparse_buffer

// GL_ARB_sparse_texture
AXLGLFLAPI bool GL_ARB_sparse_texture;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_SPARSE_ARB = 0x91A6;
AXLGLFLCONSTMODIFIER GLconstant GL_VIRTUAL_PAGE_SIZE_INDEX_ARB = 0x91A7;
AXLGLFLCONSTMODIFIER GLconstant GL_NUM_SPARSE_LEVELS_ARB = 0x91AA;
AXLGLFLCONSTMODIFIER GLconstant GL_NUM_VIRTUAL_PAGE_SIZES_ARB = 0x91A8;
AXLGLFLCONSTMODIFIER GLconstant GL_VIRTUAL_PAGE_SIZE_X_ARB = 0x9195;
AXLGLFLCONSTMODIFIER GLconstant GL_VIRTUAL_PAGE_SIZE_Y_ARB = 0x9196;
AXLGLFLCONSTMODIFIER GLconstant GL_VIRTUAL_PAGE_SIZE_Z_ARB = 0x9197;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_SPARSE_TEXTURE_SIZE_ARB = 0x9198;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_SPARSE_3D_TEXTURE_SIZE_ARB = 0x9199;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_SPARSE_ARRAY_TEXTURE_LAYERS_ARB = 0x919A;
AXLGLFLCONSTMODIFIER GLconstant GL_SPARSE_TEXTURE_FULL_ARRAY_CUBE_MIPMAPS_ARB = 0x91A9;
typedef void (APIENTRYP PFNGLTEXPAGECOMMITMENTARBPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLboolean commit);
// GL_ARB_sparse_texture

// GL_ARB_sparse_texture2
AXLGLFLAPI bool GL_ARB_sparse_texture2;
// GL_ARB_sparse_texture2

// GL_ARB_sparse_texture_clamp
AXLGLFLAPI bool GL_ARB_sparse_texture_clamp;
// GL_ARB_sparse_texture_clamp

// GL_ARB_spirv_extensions
AXLGLFLAPI bool GL_ARB_spirv_extensions;
// GL_ARB_spirv_extensions

// GL_ARB_stencil_texturing
AXLGLFLAPI bool GL_ARB_stencil_texturing;
// GL_ARB_stencil_texturing

// GL_ARB_sync
AXLGLFLAPI bool GL_ARB_sync;
// GL_ARB_sync

// GL_ARB_tessellation_shader
AXLGLFLAPI bool GL_ARB_tessellation_shader;
// GL_ARB_tessellation_shader

// GL_ARB_texture_barrier
AXLGLFLAPI bool GL_ARB_texture_barrier;
// GL_ARB_texture_barrier

// GL_ARB_texture_border_clamp
AXLGLFLAPI bool GL_ARB_texture_border_clamp;
AXLGLFLCONSTMODIFIER GLconstant GL_CLAMP_TO_BORDER_ARB = 0x812D;
// GL_ARB_texture_border_clamp

// GL_ARB_texture_buffer_object
AXLGLFLAPI bool GL_ARB_texture_buffer_object;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_BUFFER_ARB = 0x8C2A;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_TEXTURE_BUFFER_SIZE_ARB = 0x8C2B;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_BINDING_BUFFER_ARB = 0x8C2C;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_BUFFER_DATA_STORE_BINDING_ARB = 0x8C2D;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_BUFFER_FORMAT_ARB = 0x8C2E;
typedef void (APIENTRYP PFNGLTEXBUFFERARBPROC) (GLenum target, GLenum internalformat, GLuint buffer);
// GL_ARB_texture_buffer_object

// GL_ARB_texture_buffer_object_rgb32
AXLGLFLAPI bool GL_ARB_texture_buffer_object_rgb32;
// GL_ARB_texture_buffer_object_rgb32

// GL_ARB_texture_buffer_range
AXLGLFLAPI bool GL_ARB_texture_buffer_range;
// GL_ARB_texture_buffer_range

// GL_ARB_texture_compression
AXLGLFLAPI bool GL_ARB_texture_compression;
AXLGLFLCONSTMODIFIER GLconstant GL_COMPRESSED_ALPHA_ARB = 0x84E9;
AXLGLFLCONSTMODIFIER GLconstant GL_COMPRESSED_LUMINANCE_ARB = 0x84EA;
AXLGLFLCONSTMODIFIER GLconstant GL_COMPRESSED_LUMINANCE_ALPHA_ARB = 0x84EB;
AXLGLFLCONSTMODIFIER GLconstant GL_COMPRESSED_INTENSITY_ARB = 0x84EC;
AXLGLFLCONSTMODIFIER GLconstant GL_COMPRESSED_RGB_ARB = 0x84ED;
AXLGLFLCONSTMODIFIER GLconstant GL_COMPRESSED_RGBA_ARB = 0x84EE;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_COMPRESSION_HINT_ARB = 0x84EF;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_COMPRESSED_IMAGE_SIZE_ARB = 0x86A0;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_COMPRESSED_ARB = 0x86A1;
AXLGLFLCONSTMODIFIER GLconstant GL_NUM_COMPRESSED_TEXTURE_FORMATS_ARB = 0x86A2;
AXLGLFLCONSTMODIFIER GLconstant GL_COMPRESSED_TEXTURE_FORMATS_ARB = 0x86A3;
typedef void (APIENTRYP PFNGLCOMPRESSEDTEXIMAGE3DARBPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const void *data);
typedef void (APIENTRYP PFNGLCOMPRESSEDTEXIMAGE2DARBPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const void *data);
typedef void (APIENTRYP PFNGLCOMPRESSEDTEXIMAGE1DARBPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const void *data);
typedef void (APIENTRYP PFNGLCOMPRESSEDTEXSUBIMAGE3DARBPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void *data);
typedef void (APIENTRYP PFNGLCOMPRESSEDTEXSUBIMAGE2DARBPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void *data);
typedef void (APIENTRYP PFNGLCOMPRESSEDTEXSUBIMAGE1DARBPROC) (GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void *data);
typedef void (APIENTRYP PFNGLGETCOMPRESSEDTEXIMAGEARBPROC) (GLenum target, GLint level, void *img);
// GL_ARB_texture_compression

// GL_ARB_texture_compression_bptc
AXLGLFLAPI bool GL_ARB_texture_compression_bptc;
AXLGLFLCONSTMODIFIER GLconstant GL_COMPRESSED_RGBA_BPTC_UNORM_ARB = 0x8E8C;
AXLGLFLCONSTMODIFIER GLconstant GL_COMPRESSED_SRGB_ALPHA_BPTC_UNORM_ARB = 0x8E8D;
AXLGLFLCONSTMODIFIER GLconstant GL_COMPRESSED_RGB_BPTC_SIGNED_FLOAT_ARB = 0x8E8E;
AXLGLFLCONSTMODIFIER GLconstant GL_COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_ARB = 0x8E8F;
// GL_ARB_texture_compression_bptc

// GL_ARB_texture_compression_rgtc
AXLGLFLAPI bool GL_ARB_texture_compression_rgtc;
// GL_ARB_texture_compression_rgtc

// GL_ARB_texture_cube_map
AXLGLFLAPI bool GL_ARB_texture_cube_map;
AXLGLFLCONSTMODIFIER GLconstant GL_NORMAL_MAP_ARB = 0x8511;
AXLGLFLCONSTMODIFIER GLconstant GL_REFLECTION_MAP_ARB = 0x8512;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_CUBE_MAP_ARB = 0x8513;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_BINDING_CUBE_MAP_ARB = 0x8514;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_CUBE_MAP_POSITIVE_X_ARB = 0x8515;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_CUBE_MAP_NEGATIVE_X_ARB = 0x8516;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_CUBE_MAP_POSITIVE_Y_ARB = 0x8517;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_CUBE_MAP_NEGATIVE_Y_ARB = 0x8518;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_CUBE_MAP_POSITIVE_Z_ARB = 0x8519;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_CUBE_MAP_NEGATIVE_Z_ARB = 0x851A;
AXLGLFLCONSTMODIFIER GLconstant GL_PROXY_TEXTURE_CUBE_MAP_ARB = 0x851B;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_CUBE_MAP_TEXTURE_SIZE_ARB = 0x851C;
// GL_ARB_texture_cube_map

// GL_ARB_texture_cube_map_array
AXLGLFLAPI bool GL_ARB_texture_cube_map_array;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_CUBE_MAP_ARRAY_ARB = 0x9009;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_BINDING_CUBE_MAP_ARRAY_ARB = 0x900A;
AXLGLFLCONSTMODIFIER GLconstant GL_PROXY_TEXTURE_CUBE_MAP_ARRAY_ARB = 0x900B;
AXLGLFLCONSTMODIFIER GLconstant GL_SAMPLER_CUBE_MAP_ARRAY_ARB = 0x900C;
AXLGLFLCONSTMODIFIER GLconstant GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW_ARB = 0x900D;
AXLGLFLCONSTMODIFIER GLconstant GL_INT_SAMPLER_CUBE_MAP_ARRAY_ARB = 0x900E;
AXLGLFLCONSTMODIFIER GLconstant GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY_ARB = 0x900F;
// GL_ARB_texture_cube_map_array

// GL_ARB_texture_env_add
AXLGLFLAPI bool GL_ARB_texture_env_add;
// GL_ARB_texture_env_add

// GL_ARB_texture_env_combine
AXLGLFLAPI bool GL_ARB_texture_env_combine;
AXLGLFLCONSTMODIFIER GLconstant GL_COMBINE_ARB = 0x8570;
AXLGLFLCONSTMODIFIER GLconstant GL_COMBINE_RGB_ARB = 0x8571;
AXLGLFLCONSTMODIFIER GLconstant GL_COMBINE_ALPHA_ARB = 0x8572;
AXLGLFLCONSTMODIFIER GLconstant GL_SOURCE0_RGB_ARB = 0x8580;
AXLGLFLCONSTMODIFIER GLconstant GL_SOURCE1_RGB_ARB = 0x8581;
AXLGLFLCONSTMODIFIER GLconstant GL_SOURCE2_RGB_ARB = 0x8582;
AXLGLFLCONSTMODIFIER GLconstant GL_SOURCE0_ALPHA_ARB = 0x8588;
AXLGLFLCONSTMODIFIER GLconstant GL_SOURCE1_ALPHA_ARB = 0x8589;
AXLGLFLCONSTMODIFIER GLconstant GL_SOURCE2_ALPHA_ARB = 0x858A;
AXLGLFLCONSTMODIFIER GLconstant GL_OPERAND0_RGB_ARB = 0x8590;
AXLGLFLCONSTMODIFIER GLconstant GL_OPERAND1_RGB_ARB = 0x8591;
AXLGLFLCONSTMODIFIER GLconstant GL_OPERAND2_RGB_ARB = 0x8592;
AXLGLFLCONSTMODIFIER GLconstant GL_OPERAND0_ALPHA_ARB = 0x8598;
AXLGLFLCONSTMODIFIER GLconstant GL_OPERAND1_ALPHA_ARB = 0x8599;
AXLGLFLCONSTMODIFIER GLconstant GL_OPERAND2_ALPHA_ARB = 0x859A;
AXLGLFLCONSTMODIFIER GLconstant GL_RGB_SCALE_ARB = 0x8573;
AXLGLFLCONSTMODIFIER GLconstant GL_ADD_SIGNED_ARB = 0x8574;
AXLGLFLCONSTMODIFIER GLconstant GL_INTERPOLATE_ARB = 0x8575;
AXLGLFLCONSTMODIFIER GLconstant GL_SUBTRACT_ARB = 0x84E7;
AXLGLFLCONSTMODIFIER GLconstant GL_CONSTANT_ARB = 0x8576;
AXLGLFLCONSTMODIFIER GLconstant GL_PRIMARY_COLOR_ARB = 0x8577;
AXLGLFLCONSTMODIFIER GLconstant GL_PREVIOUS_ARB = 0x8578;
// GL_ARB_texture_env_combine

// GL_ARB_texture_env_crossbar
AXLGLFLAPI bool GL_ARB_texture_env_crossbar;
// GL_ARB_texture_env_crossbar

// GL_ARB_texture_env_dot3
AXLGLFLAPI bool GL_ARB_texture_env_dot3;
AXLGLFLCONSTMODIFIER GLconstant GL_DOT3_RGB_ARB = 0x86AE;
AXLGLFLCONSTMODIFIER GLconstant GL_DOT3_RGBA_ARB = 0x86AF;
// GL_ARB_texture_env_dot3

// GL_ARB_texture_filter_anisotropic
AXLGLFLAPI bool GL_ARB_texture_filter_anisotropic;
// GL_ARB_texture_filter_anisotropic

// GL_ARB_texture_filter_minmax
AXLGLFLAPI bool GL_ARB_texture_filter_minmax;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_REDUCTION_MODE_ARB = 0x9366;
AXLGLFLCONSTMODIFIER GLconstant GL_WEIGHTED_AVERAGE_ARB = 0x9367;
// GL_ARB_texture_filter_minmax

// GL_ARB_texture_float
AXLGLFLAPI bool GL_ARB_texture_float;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_RED_TYPE_ARB = 0x8C10;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_GREEN_TYPE_ARB = 0x8C11;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_BLUE_TYPE_ARB = 0x8C12;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_ALPHA_TYPE_ARB = 0x8C13;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_LUMINANCE_TYPE_ARB = 0x8C14;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_INTENSITY_TYPE_ARB = 0x8C15;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_DEPTH_TYPE_ARB = 0x8C16;
AXLGLFLCONSTMODIFIER GLconstant GL_UNSIGNED_NORMALIZED_ARB = 0x8C17;
AXLGLFLCONSTMODIFIER GLconstant GL_RGBA32F_ARB = 0x8814;
AXLGLFLCONSTMODIFIER GLconstant GL_RGB32F_ARB = 0x8815;
AXLGLFLCONSTMODIFIER GLconstant GL_ALPHA32F_ARB = 0x8816;
AXLGLFLCONSTMODIFIER GLconstant GL_INTENSITY32F_ARB = 0x8817;
AXLGLFLCONSTMODIFIER GLconstant GL_LUMINANCE32F_ARB = 0x8818;
AXLGLFLCONSTMODIFIER GLconstant GL_LUMINANCE_ALPHA32F_ARB = 0x8819;
AXLGLFLCONSTMODIFIER GLconstant GL_RGBA16F_ARB = 0x881A;
AXLGLFLCONSTMODIFIER GLconstant GL_RGB16F_ARB = 0x881B;
AXLGLFLCONSTMODIFIER GLconstant GL_ALPHA16F_ARB = 0x881C;
AXLGLFLCONSTMODIFIER GLconstant GL_INTENSITY16F_ARB = 0x881D;
AXLGLFLCONSTMODIFIER GLconstant GL_LUMINANCE16F_ARB = 0x881E;
AXLGLFLCONSTMODIFIER GLconstant GL_LUMINANCE_ALPHA16F_ARB = 0x881F;
// GL_ARB_texture_float

// GL_ARB_texture_gather
AXLGLFLAPI bool GL_ARB_texture_gather;
AXLGLFLCONSTMODIFIER GLconstant GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET_ARB = 0x8E5E;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET_ARB = 0x8E5F;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_PROGRAM_TEXTURE_GATHER_COMPONENTS_ARB = 0x8F9F;
// GL_ARB_texture_gather

// GL_ARB_texture_mirror_clamp_to_edge
AXLGLFLAPI bool GL_ARB_texture_mirror_clamp_to_edge;
// GL_ARB_texture_mirror_clamp_to_edge

// GL_ARB_texture_mirrored_repeat
AXLGLFLAPI bool GL_ARB_texture_mirrored_repeat;
AXLGLFLCONSTMODIFIER GLconstant GL_MIRRORED_REPEAT_ARB = 0x8370;
// GL_ARB_texture_mirrored_repeat

// GL_ARB_texture_multisample
AXLGLFLAPI bool GL_ARB_texture_multisample;
// GL_ARB_texture_multisample

// GL_ARB_texture_non_power_of_two
AXLGLFLAPI bool GL_ARB_texture_non_power_of_two;
// GL_ARB_texture_non_power_of_two

// GL_ARB_texture_query_levels
AXLGLFLAPI bool GL_ARB_texture_query_levels;
// GL_ARB_texture_query_levels

// GL_ARB_texture_query_lod
AXLGLFLAPI bool GL_ARB_texture_query_lod;
// GL_ARB_texture_query_lod

// GL_ARB_texture_rectangle
AXLGLFLAPI bool GL_ARB_texture_rectangle;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_RECTANGLE_ARB = 0x84F5;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_BINDING_RECTANGLE_ARB = 0x84F6;
AXLGLFLCONSTMODIFIER GLconstant GL_PROXY_TEXTURE_RECTANGLE_ARB = 0x84F7;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_RECTANGLE_TEXTURE_SIZE_ARB = 0x84F8;
// GL_ARB_texture_rectangle

// GL_ARB_texture_rg
AXLGLFLAPI bool GL_ARB_texture_rg;
// GL_ARB_texture_rg

// GL_ARB_texture_rgb10_a2ui
AXLGLFLAPI bool GL_ARB_texture_rgb10_a2ui;
// GL_ARB_texture_rgb10_a2ui

// GL_ARB_texture_stencil8
AXLGLFLAPI bool GL_ARB_texture_stencil8;
// GL_ARB_texture_stencil8

// GL_ARB_texture_storage
AXLGLFLAPI bool GL_ARB_texture_storage;
// GL_ARB_texture_storage

// GL_ARB_texture_storage_multisample
AXLGLFLAPI bool GL_ARB_texture_storage_multisample;
// GL_ARB_texture_storage_multisample

// GL_ARB_texture_swizzle
AXLGLFLAPI bool GL_ARB_texture_swizzle;
// GL_ARB_texture_swizzle

// GL_ARB_texture_view
AXLGLFLAPI bool GL_ARB_texture_view;
// GL_ARB_texture_view

// GL_ARB_timer_query
AXLGLFLAPI bool GL_ARB_timer_query;
// GL_ARB_timer_query

// GL_ARB_transform_feedback2
AXLGLFLAPI bool GL_ARB_transform_feedback2;
// GL_ARB_transform_feedback2

// GL_ARB_transform_feedback3
AXLGLFLAPI bool GL_ARB_transform_feedback3;
// GL_ARB_transform_feedback3

// GL_ARB_transform_feedback_instanced
AXLGLFLAPI bool GL_ARB_transform_feedback_instanced;
// GL_ARB_transform_feedback_instanced

// GL_ARB_transform_feedback_overflow_query
AXLGLFLAPI bool GL_ARB_transform_feedback_overflow_query;
AXLGLFLCONSTMODIFIER GLconstant GL_TRANSFORM_FEEDBACK_OVERFLOW_ARB = 0x82EC;
AXLGLFLCONSTMODIFIER GLconstant GL_TRANSFORM_FEEDBACK_STREAM_OVERFLOW_ARB = 0x82ED;
// GL_ARB_transform_feedback_overflow_query

// GL_ARB_transpose_matrix
AXLGLFLAPI bool GL_ARB_transpose_matrix;
AXLGLFLCONSTMODIFIER GLconstant GL_TRANSPOSE_MODELVIEW_MATRIX_ARB = 0x84E3;
AXLGLFLCONSTMODIFIER GLconstant GL_TRANSPOSE_PROJECTION_MATRIX_ARB = 0x84E4;
AXLGLFLCONSTMODIFIER GLconstant GL_TRANSPOSE_TEXTURE_MATRIX_ARB = 0x84E5;
AXLGLFLCONSTMODIFIER GLconstant GL_TRANSPOSE_COLOR_MATRIX_ARB = 0x84E6;
typedef void (APIENTRYP PFNGLLOADTRANSPOSEMATRIXFARBPROC) (const GLfloat *m);
typedef void (APIENTRYP PFNGLLOADTRANSPOSEMATRIXDARBPROC) (const GLdouble *m);
typedef void (APIENTRYP PFNGLMULTTRANSPOSEMATRIXFARBPROC) (const GLfloat *m);
typedef void (APIENTRYP PFNGLMULTTRANSPOSEMATRIXDARBPROC) (const GLdouble *m);
// GL_ARB_transpose_matrix

// GL_ARB_uniform_buffer_object
AXLGLFLAPI bool GL_ARB_uniform_buffer_object;
// GL_ARB_uniform_buffer_object

// GL_ARB_vertex_array_bgra
AXLGLFLAPI bool GL_ARB_vertex_array_bgra;
// GL_ARB_vertex_array_bgra

// GL_ARB_vertex_array_object
AXLGLFLAPI bool GL_ARB_vertex_array_object;
// GL_ARB_vertex_array_object

// GL_ARB_vertex_attrib_64bit
AXLGLFLAPI bool GL_ARB_vertex_attrib_64bit;
// GL_ARB_vertex_attrib_64bit

// GL_ARB_vertex_attrib_binding
AXLGLFLAPI bool GL_ARB_vertex_attrib_binding;
// GL_ARB_vertex_attrib_binding

// GL_ARB_vertex_blend
AXLGLFLAPI bool GL_ARB_vertex_blend;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_VERTEX_UNITS_ARB = 0x86A4;
AXLGLFLCONSTMODIFIER GLconstant GL_ACTIVE_VERTEX_UNITS_ARB = 0x86A5;
AXLGLFLCONSTMODIFIER GLconstant GL_WEIGHT_SUM_UNITY_ARB = 0x86A6;
AXLGLFLCONSTMODIFIER GLconstant GL_VERTEX_BLEND_ARB = 0x86A7;
AXLGLFLCONSTMODIFIER GLconstant GL_CURRENT_WEIGHT_ARB = 0x86A8;
AXLGLFLCONSTMODIFIER GLconstant GL_WEIGHT_ARRAY_TYPE_ARB = 0x86A9;
AXLGLFLCONSTMODIFIER GLconstant GL_WEIGHT_ARRAY_STRIDE_ARB = 0x86AA;
AXLGLFLCONSTMODIFIER GLconstant GL_WEIGHT_ARRAY_SIZE_ARB = 0x86AB;
AXLGLFLCONSTMODIFIER GLconstant GL_WEIGHT_ARRAY_POINTER_ARB = 0x86AC;
AXLGLFLCONSTMODIFIER GLconstant GL_WEIGHT_ARRAY_ARB = 0x86AD;
AXLGLFLCONSTMODIFIER GLconstant GL_MODELVIEW0_ARB = 0x1700;
AXLGLFLCONSTMODIFIER GLconstant GL_MODELVIEW1_ARB = 0x850A;
AXLGLFLCONSTMODIFIER GLconstant GL_MODELVIEW2_ARB = 0x8722;
AXLGLFLCONSTMODIFIER GLconstant GL_MODELVIEW3_ARB = 0x8723;
AXLGLFLCONSTMODIFIER GLconstant GL_MODELVIEW4_ARB = 0x8724;
AXLGLFLCONSTMODIFIER GLconstant GL_MODELVIEW5_ARB = 0x8725;
AXLGLFLCONSTMODIFIER GLconstant GL_MODELVIEW6_ARB = 0x8726;
AXLGLFLCONSTMODIFIER GLconstant GL_MODELVIEW7_ARB = 0x8727;
AXLGLFLCONSTMODIFIER GLconstant GL_MODELVIEW8_ARB = 0x8728;
AXLGLFLCONSTMODIFIER GLconstant GL_MODELVIEW9_ARB = 0x8729;
AXLGLFLCONSTMODIFIER GLconstant GL_MODELVIEW10_ARB = 0x872A;
AXLGLFLCONSTMODIFIER GLconstant GL_MODELVIEW11_ARB = 0x872B;
AXLGLFLCONSTMODIFIER GLconstant GL_MODELVIEW12_ARB = 0x872C;
AXLGLFLCONSTMODIFIER GLconstant GL_MODELVIEW13_ARB = 0x872D;
AXLGLFLCONSTMODIFIER GLconstant GL_MODELVIEW14_ARB = 0x872E;
AXLGLFLCONSTMODIFIER GLconstant GL_MODELVIEW15_ARB = 0x872F;
AXLGLFLCONSTMODIFIER GLconstant GL_MODELVIEW16_ARB = 0x8730;
AXLGLFLCONSTMODIFIER GLconstant GL_MODELVIEW17_ARB = 0x8731;
AXLGLFLCONSTMODIFIER GLconstant GL_MODELVIEW18_ARB = 0x8732;
AXLGLFLCONSTMODIFIER GLconstant GL_MODELVIEW19_ARB = 0x8733;
AXLGLFLCONSTMODIFIER GLconstant GL_MODELVIEW20_ARB = 0x8734;
AXLGLFLCONSTMODIFIER GLconstant GL_MODELVIEW21_ARB = 0x8735;
AXLGLFLCONSTMODIFIER GLconstant GL_MODELVIEW22_ARB = 0x8736;
AXLGLFLCONSTMODIFIER GLconstant GL_MODELVIEW23_ARB = 0x8737;
AXLGLFLCONSTMODIFIER GLconstant GL_MODELVIEW24_ARB = 0x8738;
AXLGLFLCONSTMODIFIER GLconstant GL_MODELVIEW25_ARB = 0x8739;
AXLGLFLCONSTMODIFIER GLconstant GL_MODELVIEW26_ARB = 0x873A;
AXLGLFLCONSTMODIFIER GLconstant GL_MODELVIEW27_ARB = 0x873B;
AXLGLFLCONSTMODIFIER GLconstant GL_MODELVIEW28_ARB = 0x873C;
AXLGLFLCONSTMODIFIER GLconstant GL_MODELVIEW29_ARB = 0x873D;
AXLGLFLCONSTMODIFIER GLconstant GL_MODELVIEW30_ARB = 0x873E;
AXLGLFLCONSTMODIFIER GLconstant GL_MODELVIEW31_ARB = 0x873F;
typedef void (APIENTRYP PFNGLWEIGHTBVARBPROC) (GLint size, const GLbyte *weights);
typedef void (APIENTRYP PFNGLWEIGHTSVARBPROC) (GLint size, const GLshort *weights);
typedef void (APIENTRYP PFNGLWEIGHTIVARBPROC) (GLint size, const GLint *weights);
typedef void (APIENTRYP PFNGLWEIGHTFVARBPROC) (GLint size, const GLfloat *weights);
typedef void (APIENTRYP PFNGLWEIGHTDVARBPROC) (GLint size, const GLdouble *weights);
typedef void (APIENTRYP PFNGLWEIGHTUBVARBPROC) (GLint size, const GLubyte *weights);
typedef void (APIENTRYP PFNGLWEIGHTUSVARBPROC) (GLint size, const GLushort *weights);
typedef void (APIENTRYP PFNGLWEIGHTUIVARBPROC) (GLint size, const GLuint *weights);
typedef void (APIENTRYP PFNGLWEIGHTPOINTERARBPROC) (GLint size, GLenum type, GLsizei stride, const void *pointer);
typedef void (APIENTRYP PFNGLVERTEXBLENDARBPROC) (GLint count);
// GL_ARB_vertex_blend

// GL_ARB_vertex_buffer_object
AXLGLFLAPI bool GL_ARB_vertex_buffer_object;
typedef ssize_t GLsizeiptrARB;
typedef intptr_t GLintptrARB;
AXLGLFLCONSTMODIFIER GLconstant GL_BUFFER_SIZE_ARB = 0x8764;
AXLGLFLCONSTMODIFIER GLconstant GL_BUFFER_USAGE_ARB = 0x8765;
AXLGLFLCONSTMODIFIER GLconstant GL_ARRAY_BUFFER_ARB = 0x8892;
AXLGLFLCONSTMODIFIER GLconstant GL_ELEMENT_ARRAY_BUFFER_ARB = 0x8893;
AXLGLFLCONSTMODIFIER GLconstant GL_ARRAY_BUFFER_BINDING_ARB = 0x8894;
AXLGLFLCONSTMODIFIER GLconstant GL_ELEMENT_ARRAY_BUFFER_BINDING_ARB = 0x8895;
AXLGLFLCONSTMODIFIER GLconstant GL_VERTEX_ARRAY_BUFFER_BINDING_ARB = 0x8896;
AXLGLFLCONSTMODIFIER GLconstant GL_NORMAL_ARRAY_BUFFER_BINDING_ARB = 0x8897;
AXLGLFLCONSTMODIFIER GLconstant GL_COLOR_ARRAY_BUFFER_BINDING_ARB = 0x8898;
AXLGLFLCONSTMODIFIER GLconstant GL_INDEX_ARRAY_BUFFER_BINDING_ARB = 0x8899;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING_ARB = 0x889A;
AXLGLFLCONSTMODIFIER GLconstant GL_EDGE_FLAG_ARRAY_BUFFER_BINDING_ARB = 0x889B;
AXLGLFLCONSTMODIFIER GLconstant GL_SECONDARY_COLOR_ARRAY_BUFFER_BINDING_ARB = 0x889C;
AXLGLFLCONSTMODIFIER GLconstant GL_FOG_COORDINATE_ARRAY_BUFFER_BINDING_ARB = 0x889D;
AXLGLFLCONSTMODIFIER GLconstant GL_WEIGHT_ARRAY_BUFFER_BINDING_ARB = 0x889E;
AXLGLFLCONSTMODIFIER GLconstant GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING_ARB = 0x889F;
AXLGLFLCONSTMODIFIER GLconstant GL_READ_ONLY_ARB = 0x88B8;
AXLGLFLCONSTMODIFIER GLconstant GL_WRITE_ONLY_ARB = 0x88B9;
AXLGLFLCONSTMODIFIER GLconstant GL_READ_WRITE_ARB = 0x88BA;
AXLGLFLCONSTMODIFIER GLconstant GL_BUFFER_ACCESS_ARB = 0x88BB;
AXLGLFLCONSTMODIFIER GLconstant GL_BUFFER_MAPPED_ARB = 0x88BC;
AXLGLFLCONSTMODIFIER GLconstant GL_BUFFER_MAP_POINTER_ARB = 0x88BD;
AXLGLFLCONSTMODIFIER GLconstant GL_STREAM_DRAW_ARB = 0x88E0;
AXLGLFLCONSTMODIFIER GLconstant GL_STREAM_READ_ARB = 0x88E1;
AXLGLFLCONSTMODIFIER GLconstant GL_STREAM_COPY_ARB = 0x88E2;
AXLGLFLCONSTMODIFIER GLconstant GL_STATIC_DRAW_ARB = 0x88E4;
AXLGLFLCONSTMODIFIER GLconstant GL_STATIC_READ_ARB = 0x88E5;
AXLGLFLCONSTMODIFIER GLconstant GL_STATIC_COPY_ARB = 0x88E6;
AXLGLFLCONSTMODIFIER GLconstant GL_DYNAMIC_DRAW_ARB = 0x88E8;
AXLGLFLCONSTMODIFIER GLconstant GL_DYNAMIC_READ_ARB = 0x88E9;
AXLGLFLCONSTMODIFIER GLconstant GL_DYNAMIC_COPY_ARB = 0x88EA;
typedef void (APIENTRYP PFNGLBINDBUFFERARBPROC) (GLenum target, GLuint buffer);
typedef void (APIENTRYP PFNGLDELETEBUFFERSARBPROC) (GLsizei n, const GLuint *buffers);
typedef void (APIENTRYP PFNGLGENBUFFERSARBPROC) (GLsizei n, GLuint *buffers);
typedef GLboolean (APIENTRYP PFNGLISBUFFERARBPROC) (GLuint buffer);
typedef void (APIENTRYP PFNGLBUFFERDATAARBPROC) (GLenum target, GLsizeiptrARB size, const void *data, GLenum usage);
typedef void (APIENTRYP PFNGLBUFFERSUBDATAARBPROC) (GLenum target, GLintptrARB offset, GLsizeiptrARB size, const void *data);
typedef void (APIENTRYP PFNGLGETBUFFERSUBDATAARBPROC) (GLenum target, GLintptrARB offset, GLsizeiptrARB size, void *data);
typedef void *(APIENTRYP PFNGLMAPBUFFERARBPROC) (GLenum target, GLenum access);
typedef GLboolean (APIENTRYP PFNGLUNMAPBUFFERARBPROC) (GLenum target);
typedef void (APIENTRYP PFNGLGETBUFFERPARAMETERIVARBPROC) (GLenum target, GLenum pname, GLint *params);
typedef void (APIENTRYP PFNGLGETBUFFERPOINTERVARBPROC) (GLenum target, GLenum pname, void **params);
// GL_ARB_vertex_buffer_object

// GL_ARB_vertex_program
AXLGLFLAPI bool GL_ARB_vertex_program;
AXLGLFLCONSTMODIFIER GLconstant GL_COLOR_SUM_ARB = 0x8458;
AXLGLFLCONSTMODIFIER GLconstant GL_VERTEX_PROGRAM_ARB = 0x8620;
AXLGLFLCONSTMODIFIER GLconstant GL_VERTEX_ATTRIB_ARRAY_ENABLED_ARB = 0x8622;
AXLGLFLCONSTMODIFIER GLconstant GL_VERTEX_ATTRIB_ARRAY_SIZE_ARB = 0x8623;
AXLGLFLCONSTMODIFIER GLconstant GL_VERTEX_ATTRIB_ARRAY_STRIDE_ARB = 0x8624;
AXLGLFLCONSTMODIFIER GLconstant GL_VERTEX_ATTRIB_ARRAY_TYPE_ARB = 0x8625;
AXLGLFLCONSTMODIFIER GLconstant GL_CURRENT_VERTEX_ATTRIB_ARB = 0x8626;
AXLGLFLCONSTMODIFIER GLconstant GL_VERTEX_PROGRAM_POINT_SIZE_ARB = 0x8642;
AXLGLFLCONSTMODIFIER GLconstant GL_VERTEX_PROGRAM_TWO_SIDE_ARB = 0x8643;
AXLGLFLCONSTMODIFIER GLconstant GL_VERTEX_ATTRIB_ARRAY_POINTER_ARB = 0x8645;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_VERTEX_ATTRIBS_ARB = 0x8869;
AXLGLFLCONSTMODIFIER GLconstant GL_VERTEX_ATTRIB_ARRAY_NORMALIZED_ARB = 0x886A;
AXLGLFLCONSTMODIFIER GLconstant GL_PROGRAM_ADDRESS_REGISTERS_ARB = 0x88B0;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_PROGRAM_ADDRESS_REGISTERS_ARB = 0x88B1;
AXLGLFLCONSTMODIFIER GLconstant GL_PROGRAM_NATIVE_ADDRESS_REGISTERS_ARB = 0x88B2;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_PROGRAM_NATIVE_ADDRESS_REGISTERS_ARB = 0x88B3;
typedef void (APIENTRYP PFNGLVERTEXATTRIB1DARBPROC) (GLuint index, GLdouble x);
typedef void (APIENTRYP PFNGLVERTEXATTRIB1DVARBPROC) (GLuint index, const GLdouble *v);
typedef void (APIENTRYP PFNGLVERTEXATTRIB1FARBPROC) (GLuint index, GLfloat x);
typedef void (APIENTRYP PFNGLVERTEXATTRIB1FVARBPROC) (GLuint index, const GLfloat *v);
typedef void (APIENTRYP PFNGLVERTEXATTRIB1SARBPROC) (GLuint index, GLshort x);
typedef void (APIENTRYP PFNGLVERTEXATTRIB1SVARBPROC) (GLuint index, const GLshort *v);
typedef void (APIENTRYP PFNGLVERTEXATTRIB2DARBPROC) (GLuint index, GLdouble x, GLdouble y);
typedef void (APIENTRYP PFNGLVERTEXATTRIB2DVARBPROC) (GLuint index, const GLdouble *v);
typedef void (APIENTRYP PFNGLVERTEXATTRIB2FARBPROC) (GLuint index, GLfloat x, GLfloat y);
typedef void (APIENTRYP PFNGLVERTEXATTRIB2FVARBPROC) (GLuint index, const GLfloat *v);
typedef void (APIENTRYP PFNGLVERTEXATTRIB2SARBPROC) (GLuint index, GLshort x, GLshort y);
typedef void (APIENTRYP PFNGLVERTEXATTRIB2SVARBPROC) (GLuint index, const GLshort *v);
typedef void (APIENTRYP PFNGLVERTEXATTRIB3DARBPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble z);
typedef void (APIENTRYP PFNGLVERTEXATTRIB3DVARBPROC) (GLuint index, const GLdouble *v);
typedef void (APIENTRYP PFNGLVERTEXATTRIB3FARBPROC) (GLuint index, GLfloat x, GLfloat y, GLfloat z);
typedef void (APIENTRYP PFNGLVERTEXATTRIB3FVARBPROC) (GLuint index, const GLfloat *v);
typedef void (APIENTRYP PFNGLVERTEXATTRIB3SARBPROC) (GLuint index, GLshort x, GLshort y, GLshort z);
typedef void (APIENTRYP PFNGLVERTEXATTRIB3SVARBPROC) (GLuint index, const GLshort *v);
typedef void (APIENTRYP PFNGLVERTEXATTRIB4NBVARBPROC) (GLuint index, const GLbyte *v);
typedef void (APIENTRYP PFNGLVERTEXATTRIB4NIVARBPROC) (GLuint index, const GLint *v);
typedef void (APIENTRYP PFNGLVERTEXATTRIB4NSVARBPROC) (GLuint index, const GLshort *v);
typedef void (APIENTRYP PFNGLVERTEXATTRIB4NUBARBPROC) (GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w);
typedef void (APIENTRYP PFNGLVERTEXATTRIB4NUBVARBPROC) (GLuint index, const GLubyte *v);
typedef void (APIENTRYP PFNGLVERTEXATTRIB4NUIVARBPROC) (GLuint index, const GLuint *v);
typedef void (APIENTRYP PFNGLVERTEXATTRIB4NUSVARBPROC) (GLuint index, const GLushort *v);
typedef void (APIENTRYP PFNGLVERTEXATTRIB4BVARBPROC) (GLuint index, const GLbyte *v);
typedef void (APIENTRYP PFNGLVERTEXATTRIB4DARBPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
typedef void (APIENTRYP PFNGLVERTEXATTRIB4DVARBPROC) (GLuint index, const GLdouble *v);
typedef void (APIENTRYP PFNGLVERTEXATTRIB4FARBPROC) (GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
typedef void (APIENTRYP PFNGLVERTEXATTRIB4FVARBPROC) (GLuint index, const GLfloat *v);
typedef void (APIENTRYP PFNGLVERTEXATTRIB4IVARBPROC) (GLuint index, const GLint *v);
typedef void (APIENTRYP PFNGLVERTEXATTRIB4SARBPROC) (GLuint index, GLshort x, GLshort y, GLshort z, GLshort w);
typedef void (APIENTRYP PFNGLVERTEXATTRIB4SVARBPROC) (GLuint index, const GLshort *v);
typedef void (APIENTRYP PFNGLVERTEXATTRIB4UBVARBPROC) (GLuint index, const GLubyte *v);
typedef void (APIENTRYP PFNGLVERTEXATTRIB4UIVARBPROC) (GLuint index, const GLuint *v);
typedef void (APIENTRYP PFNGLVERTEXATTRIB4USVARBPROC) (GLuint index, const GLushort *v);
typedef void (APIENTRYP PFNGLVERTEXATTRIBPOINTERARBPROC) (GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, const void *pointer);
typedef void (APIENTRYP PFNGLENABLEVERTEXATTRIBARRAYARBPROC) (GLuint index);
typedef void (APIENTRYP PFNGLDISABLEVERTEXATTRIBARRAYARBPROC) (GLuint index);
typedef void (APIENTRYP PFNGLGETVERTEXATTRIBDVARBPROC) (GLuint index, GLenum pname, GLdouble *params);
typedef void (APIENTRYP PFNGLGETVERTEXATTRIBFVARBPROC) (GLuint index, GLenum pname, GLfloat *params);
typedef void (APIENTRYP PFNGLGETVERTEXATTRIBIVARBPROC) (GLuint index, GLenum pname, GLint *params);
typedef void (APIENTRYP PFNGLGETVERTEXATTRIBPOINTERVARBPROC) (GLuint index, GLenum pname, void **pointer);
// GL_ARB_vertex_program

// GL_ARB_vertex_shader
AXLGLFLAPI bool GL_ARB_vertex_shader;
AXLGLFLCONSTMODIFIER GLconstant GL_VERTEX_SHADER_ARB = 0x8B31;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_VERTEX_UNIFORM_COMPONENTS_ARB = 0x8B4A;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_VARYING_FLOATS_ARB = 0x8B4B;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS_ARB = 0x8B4C;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS_ARB = 0x8B4D;
AXLGLFLCONSTMODIFIER GLconstant GL_OBJECT_ACTIVE_ATTRIBUTES_ARB = 0x8B89;
AXLGLFLCONSTMODIFIER GLconstant GL_OBJECT_ACTIVE_ATTRIBUTE_MAX_LENGTH_ARB = 0x8B8A;
typedef void (APIENTRYP PFNGLBINDATTRIBLOCATIONARBPROC) (GLhandleARB programObj, GLuint index, const GLcharARB *name);
typedef void (APIENTRYP PFNGLGETACTIVEATTRIBARBPROC) (GLhandleARB programObj, GLuint index, GLsizei maxLength, GLsizei *length, GLint *size, GLenum *type, GLcharARB *name);
typedef GLint (APIENTRYP PFNGLGETATTRIBLOCATIONARBPROC) (GLhandleARB programObj, const GLcharARB *name);
// GL_ARB_vertex_shader

// GL_ARB_vertex_type_10f_11f_11f_rev
AXLGLFLAPI bool GL_ARB_vertex_type_10f_11f_11f_rev;
// GL_ARB_vertex_type_10f_11f_11f_rev

// GL_ARB_vertex_type_2_10_10_10_rev
AXLGLFLAPI bool GL_ARB_vertex_type_2_10_10_10_rev;
// GL_ARB_vertex_type_2_10_10_10_rev

// GL_ARB_viewport_array
AXLGLFLAPI bool GL_ARB_viewport_array;
typedef void (APIENTRYP PFNGLDEPTHRANGEARRAYDVNVPROC) (GLuint first, GLsizei count, const GLdouble *v);
typedef void (APIENTRYP PFNGLDEPTHRANGEINDEXEDDNVPROC) (GLuint index, GLdouble n, GLdouble f);
// GL_ARB_viewport_array

// GL_ARB_window_pos
AXLGLFLAPI bool GL_ARB_window_pos;
typedef void (APIENTRYP PFNGLWINDOWPOS2DARBPROC) (GLdouble x, GLdouble y);
typedef void (APIENTRYP PFNGLWINDOWPOS2DVARBPROC) (const GLdouble *v);
typedef void (APIENTRYP PFNGLWINDOWPOS2FARBPROC) (GLfloat x, GLfloat y);
typedef void (APIENTRYP PFNGLWINDOWPOS2FVARBPROC) (const GLfloat *v);
typedef void (APIENTRYP PFNGLWINDOWPOS2IARBPROC) (GLint x, GLint y);
typedef void (APIENTRYP PFNGLWINDOWPOS2IVARBPROC) (const GLint *v);
typedef void (APIENTRYP PFNGLWINDOWPOS2SARBPROC) (GLshort x, GLshort y);
typedef void (APIENTRYP PFNGLWINDOWPOS2SVARBPROC) (const GLshort *v);
typedef void (APIENTRYP PFNGLWINDOWPOS3DARBPROC) (GLdouble x, GLdouble y, GLdouble z);
typedef void (APIENTRYP PFNGLWINDOWPOS3DVARBPROC) (const GLdouble *v);
typedef void (APIENTRYP PFNGLWINDOWPOS3FARBPROC) (GLfloat x, GLfloat y, GLfloat z);
typedef void (APIENTRYP PFNGLWINDOWPOS3FVARBPROC) (const GLfloat *v);
typedef void (APIENTRYP PFNGLWINDOWPOS3IARBPROC) (GLint x, GLint y, GLint z);
typedef void (APIENTRYP PFNGLWINDOWPOS3IVARBPROC) (const GLint *v);
typedef void (APIENTRYP PFNGLWINDOWPOS3SARBPROC) (GLshort x, GLshort y, GLshort z);
typedef void (APIENTRYP PFNGLWINDOWPOS3SVARBPROC) (const GLshort *v);
// GL_ARB_window_pos

} // namespace GLARB

namespace GLKHR {

// GL_KHR_blend_equation_advanced
AXLGLFLAPI bool GL_KHR_blend_equation_advanced;
AXLGLFLCONSTMODIFIER GLconstant GL_MULTIPLY_KHR = 0x9294;
AXLGLFLCONSTMODIFIER GLconstant GL_SCREEN_KHR = 0x9295;
AXLGLFLCONSTMODIFIER GLconstant GL_OVERLAY_KHR = 0x9296;
AXLGLFLCONSTMODIFIER GLconstant GL_DARKEN_KHR = 0x9297;
AXLGLFLCONSTMODIFIER GLconstant GL_LIGHTEN_KHR = 0x9298;
AXLGLFLCONSTMODIFIER GLconstant GL_COLORDODGE_KHR = 0x9299;
AXLGLFLCONSTMODIFIER GLconstant GL_COLORBURN_KHR = 0x929A;
AXLGLFLCONSTMODIFIER GLconstant GL_HARDLIGHT_KHR = 0x929B;
AXLGLFLCONSTMODIFIER GLconstant GL_SOFTLIGHT_KHR = 0x929C;
AXLGLFLCONSTMODIFIER GLconstant GL_DIFFERENCE_KHR = 0x929E;
AXLGLFLCONSTMODIFIER GLconstant GL_EXCLUSION_KHR = 0x92A0;
AXLGLFLCONSTMODIFIER GLconstant GL_HSL_HUE_KHR = 0x92AD;
AXLGLFLCONSTMODIFIER GLconstant GL_HSL_SATURATION_KHR = 0x92AE;
AXLGLFLCONSTMODIFIER GLconstant GL_HSL_COLOR_KHR = 0x92AF;
AXLGLFLCONSTMODIFIER GLconstant GL_HSL_LUMINOSITY_KHR = 0x92B0;
typedef void (APIENTRYP PFNGLBLENDBARRIERKHRPROC) (void);
// GL_KHR_blend_equation_advanced

// GL_KHR_blend_equation_advanced_coherent
AXLGLFLAPI bool GL_KHR_blend_equation_advanced_coherent;
AXLGLFLCONSTMODIFIER GLconstant GL_BLEND_ADVANCED_COHERENT_KHR = 0x9285;
// GL_KHR_blend_equation_advanced_coherent

// GL_KHR_context_flush_control
AXLGLFLAPI bool GL_KHR_context_flush_control;
// GL_KHR_context_flush_control

// GL_KHR_debug
AXLGLFLAPI bool GL_KHR_debug;
// GL_KHR_debug

// GL_KHR_no_error
AXLGLFLAPI bool GL_KHR_no_error;
AXLGLFLCONSTMODIFIER GLconstant GL_CONTEXT_FLAG_NO_ERROR_BIT_KHR = 0x000000;08
// GL_KHR_no_error

// GL_KHR_parallel_shader_compile
AXLGLFLAPI bool GL_KHR_parallel_shader_compile;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_SHADER_COMPILER_THREADS_KHR = 0x91B0;
AXLGLFLCONSTMODIFIER GLconstant GL_COMPLETION_STATUS_KHR = 0x91B1;
typedef void (APIENTRYP PFNGLMAXSHADERCOMPILERTHREADSKHRPROC) (GLuint count);
// GL_KHR_parallel_shader_compile

// GL_KHR_robust_buffer_access_behavior
AXLGLFLAPI bool GL_KHR_robust_buffer_access_behavior;
// GL_KHR_robust_buffer_access_behavior

// GL_KHR_robustness
AXLGLFLAPI bool GL_KHR_robustness;
AXLGLFLCONSTMODIFIER GLconstant GL_CONTEXT_ROBUST_ACCESS = 0x90F3;
// GL_KHR_robustness

// GL_KHR_shader_subgroup
AXLGLFLAPI bool GL_KHR_shader_subgroup;
AXLGLFLCONSTMODIFIER GLconstant GL_SUBGROUP_SIZE_KHR = 0x9532;
AXLGLFLCONSTMODIFIER GLconstant GL_SUBGROUP_SUPPORTED_STAGES_KHR = 0x9533;
AXLGLFLCONSTMODIFIER GLconstant GL_SUBGROUP_SUPPORTED_FEATURES_KHR = 0x9534;
AXLGLFLCONSTMODIFIER GLconstant GL_SUBGROUP_QUAD_ALL_STAGES_KHR = 0x9535;
AXLGLFLCONSTMODIFIER GLconstant GL_SUBGROUP_FEATURE_BASIC_BIT_KHR = 0x000000;01
AXLGLFLCONSTMODIFIER GLconstant GL_SUBGROUP_FEATURE_VOTE_BIT_KHR = 0x000000;02
AXLGLFLCONSTMODIFIER GLconstant GL_SUBGROUP_FEATURE_ARITHMETIC_BIT_KHR = 0x000000;04
AXLGLFLCONSTMODIFIER GLconstant GL_SUBGROUP_FEATURE_BALLOT_BIT_KHR = 0x000000;08
AXLGLFLCONSTMODIFIER GLconstant GL_SUBGROUP_FEATURE_SHUFFLE_BIT_KHR = 0x000000;10
AXLGLFLCONSTMODIFIER GLconstant GL_SUBGROUP_FEATURE_SHUFFLE_RELATIVE_BIT_KHR = 0x000000;20
AXLGLFLCONSTMODIFIER GLconstant GL_SUBGROUP_FEATURE_CLUSTERED_BIT_KHR = 0x000000;40
AXLGLFLCONSTMODIFIER GLconstant GL_SUBGROUP_FEATURE_QUAD_BIT_KHR = 0x000000;80
// GL_KHR_shader_subgroup

// GL_KHR_texture_compression_astc_hdr
AXLGLFLAPI bool GL_KHR_texture_compression_astc_hdr;
AXLGLFLCONSTMODIFIER GLconstant GL_COMPRESSED_RGBA_ASTC_4x4_KHR = 0x93B0;
AXLGLFLCONSTMODIFIER GLconstant GL_COMPRESSED_RGBA_ASTC_5x4_KHR = 0x93B1;
AXLGLFLCONSTMODIFIER GLconstant GL_COMPRESSED_RGBA_ASTC_5x5_KHR = 0x93B2;
AXLGLFLCONSTMODIFIER GLconstant GL_COMPRESSED_RGBA_ASTC_6x5_KHR = 0x93B3;
AXLGLFLCONSTMODIFIER GLconstant GL_COMPRESSED_RGBA_ASTC_6x6_KHR = 0x93B4;
AXLGLFLCONSTMODIFIER GLconstant GL_COMPRESSED_RGBA_ASTC_8x5_KHR = 0x93B5;
AXLGLFLCONSTMODIFIER GLconstant GL_COMPRESSED_RGBA_ASTC_8x6_KHR = 0x93B6;
AXLGLFLCONSTMODIFIER GLconstant GL_COMPRESSED_RGBA_ASTC_8x8_KHR = 0x93B7;
AXLGLFLCONSTMODIFIER GLconstant GL_COMPRESSED_RGBA_ASTC_10x5_KHR = 0x93B8;
AXLGLFLCONSTMODIFIER GLconstant GL_COMPRESSED_RGBA_ASTC_10x6_KHR = 0x93B9;
AXLGLFLCONSTMODIFIER GLconstant GL_COMPRESSED_RGBA_ASTC_10x8_KHR = 0x93BA;
AXLGLFLCONSTMODIFIER GLconstant GL_COMPRESSED_RGBA_ASTC_10x10_KHR = 0x93BB;
AXLGLFLCONSTMODIFIER GLconstant GL_COMPRESSED_RGBA_ASTC_12x10_KHR = 0x93BC;
AXLGLFLCONSTMODIFIER GLconstant GL_COMPRESSED_RGBA_ASTC_12x12_KHR = 0x93BD;
AXLGLFLCONSTMODIFIER GLconstant GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR = 0x93D0;
AXLGLFLCONSTMODIFIER GLconstant GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR = 0x93D1;
AXLGLFLCONSTMODIFIER GLconstant GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR = 0x93D2;
AXLGLFLCONSTMODIFIER GLconstant GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR = 0x93D3;
AXLGLFLCONSTMODIFIER GLconstant GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR = 0x93D4;
AXLGLFLCONSTMODIFIER GLconstant GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR = 0x93D5;
AXLGLFLCONSTMODIFIER GLconstant GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR = 0x93D6;
AXLGLFLCONSTMODIFIER GLconstant GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR = 0x93D7;
AXLGLFLCONSTMODIFIER GLconstant GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR = 0x93D8;
AXLGLFLCONSTMODIFIER GLconstant GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR = 0x93D9;
AXLGLFLCONSTMODIFIER GLconstant GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR = 0x93DA;
AXLGLFLCONSTMODIFIER GLconstant GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR = 0x93DB;
AXLGLFLCONSTMODIFIER GLconstant GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR = 0x93DC;
AXLGLFLCONSTMODIFIER GLconstant GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR = 0x93DD;
// GL_KHR_texture_compression_astc_hdr

// GL_KHR_texture_compression_astc_ldr
AXLGLFLAPI bool GL_KHR_texture_compression_astc_ldr;
// GL_KHR_texture_compression_astc_ldr

// GL_KHR_texture_compression_astc_sliced_3d
AXLGLFLAPI bool GL_KHR_texture_compression_astc_sliced_3d;
// GL_KHR_texture_compression_astc_sliced_3d

} // namespace GLKHR

namespace GLOES {

// GL_OES_byte_coordinates
AXLGLFLAPI bool GL_OES_byte_coordinates;
typedef void (APIENTRYP PFNGLMULTITEXCOORD1BOESPROC) (GLenum texture, GLbyte s);
typedef void (APIENTRYP PFNGLMULTITEXCOORD1BVOESPROC) (GLenum texture, const GLbyte *coords);
typedef void (APIENTRYP PFNGLMULTITEXCOORD2BOESPROC) (GLenum texture, GLbyte s, GLbyte t);
typedef void (APIENTRYP PFNGLMULTITEXCOORD2BVOESPROC) (GLenum texture, const GLbyte *coords);
typedef void (APIENTRYP PFNGLMULTITEXCOORD3BOESPROC) (GLenum texture, GLbyte s, GLbyte t, GLbyte r);
typedef void (APIENTRYP PFNGLMULTITEXCOORD3BVOESPROC) (GLenum texture, const GLbyte *coords);
typedef void (APIENTRYP PFNGLMULTITEXCOORD4BOESPROC) (GLenum texture, GLbyte s, GLbyte t, GLbyte r, GLbyte q);
typedef void (APIENTRYP PFNGLMULTITEXCOORD4BVOESPROC) (GLenum texture, const GLbyte *coords);
typedef void (APIENTRYP PFNGLTEXCOORD1BOESPROC) (GLbyte s);
typedef void (APIENTRYP PFNGLTEXCOORD1BVOESPROC) (const GLbyte *coords);
typedef void (APIENTRYP PFNGLTEXCOORD2BOESPROC) (GLbyte s, GLbyte t);
typedef void (APIENTRYP PFNGLTEXCOORD2BVOESPROC) (const GLbyte *coords);
typedef void (APIENTRYP PFNGLTEXCOORD3BOESPROC) (GLbyte s, GLbyte t, GLbyte r);
typedef void (APIENTRYP PFNGLTEXCOORD3BVOESPROC) (const GLbyte *coords);
typedef void (APIENTRYP PFNGLTEXCOORD4BOESPROC) (GLbyte s, GLbyte t, GLbyte r, GLbyte q);
typedef void (APIENTRYP PFNGLTEXCOORD4BVOESPROC) (const GLbyte *coords);
typedef void (APIENTRYP PFNGLVERTEX2BOESPROC) (GLbyte x, GLbyte y);
typedef void (APIENTRYP PFNGLVERTEX2BVOESPROC) (const GLbyte *coords);
typedef void (APIENTRYP PFNGLVERTEX3BOESPROC) (GLbyte x, GLbyte y, GLbyte z);
typedef void (APIENTRYP PFNGLVERTEX3BVOESPROC) (const GLbyte *coords);
typedef void (APIENTRYP PFNGLVERTEX4BOESPROC) (GLbyte x, GLbyte y, GLbyte z, GLbyte w);
typedef void (APIENTRYP PFNGLVERTEX4BVOESPROC) (const GLbyte *coords);
// GL_OES_byte_coordinates

// GL_OES_compressed_paletted_texture
AXLGLFLAPI bool GL_OES_compressed_paletted_texture;
AXLGLFLCONSTMODIFIER GLconstant GL_PALETTE4_RGB8_OES = 0x8B90;
AXLGLFLCONSTMODIFIER GLconstant GL_PALETTE4_RGBA8_OES = 0x8B91;
AXLGLFLCONSTMODIFIER GLconstant GL_PALETTE4_R5_G6_B5_OES = 0x8B92;
AXLGLFLCONSTMODIFIER GLconstant GL_PALETTE4_RGBA4_OES = 0x8B93;
AXLGLFLCONSTMODIFIER GLconstant GL_PALETTE4_RGB5_A1_OES = 0x8B94;
AXLGLFLCONSTMODIFIER GLconstant GL_PALETTE8_RGB8_OES = 0x8B95;
AXLGLFLCONSTMODIFIER GLconstant GL_PALETTE8_RGBA8_OES = 0x8B96;
AXLGLFLCONSTMODIFIER GLconstant GL_PALETTE8_R5_G6_B5_OES = 0x8B97;
AXLGLFLCONSTMODIFIER GLconstant GL_PALETTE8_RGBA4_OES = 0x8B98;
AXLGLFLCONSTMODIFIER GLconstant GL_PALETTE8_RGB5_A1_OES = 0x8B99;
// GL_OES_compressed_paletted_texture

// GL_OES_fixed_point
AXLGLFLAPI bool GL_OES_fixed_point;
typedef int32_t GLfixed;
AXLGLFLCONSTMODIFIER GLconstant GL_FIXED_OES = 0x140C;
typedef void (APIENTRYP PFNGLALPHAFUNCXOESPROC) (GLenum func, GLfixed ref);
typedef void (APIENTRYP PFNGLCLEARCOLORXOESPROC) (GLfixed red, GLfixed green, GLfixed blue, GLfixed alpha);
typedef void (APIENTRYP PFNGLCLEARDEPTHXOESPROC) (GLfixed depth);
typedef void (APIENTRYP PFNGLCLIPPLANEXOESPROC) (GLenum plane, const GLfixed *equation);
typedef void (APIENTRYP PFNGLCOLOR4XOESPROC) (GLfixed red, GLfixed green, GLfixed blue, GLfixed alpha);
typedef void (APIENTRYP PFNGLDEPTHRANGEXOESPROC) (GLfixed n, GLfixed f);
typedef void (APIENTRYP PFNGLFOGXOESPROC) (GLenum pname, GLfixed param);
typedef void (APIENTRYP PFNGLFOGXVOESPROC) (GLenum pname, const GLfixed *param);
typedef void (APIENTRYP PFNGLFRUSTUMXOESPROC) (GLfixed l, GLfixed r, GLfixed b, GLfixed t, GLfixed n, GLfixed f);
typedef void (APIENTRYP PFNGLGETCLIPPLANEXOESPROC) (GLenum plane, GLfixed *equation);
typedef void (APIENTRYP PFNGLGETFIXEDVOESPROC) (GLenum pname, GLfixed *params);
typedef void (APIENTRYP PFNGLGETTEXENVXVOESPROC) (GLenum target, GLenum pname, GLfixed *params);
typedef void (APIENTRYP PFNGLGETTEXPARAMETERXVOESPROC) (GLenum target, GLenum pname, GLfixed *params);
typedef void (APIENTRYP PFNGLLIGHTMODELXOESPROC) (GLenum pname, GLfixed param);
typedef void (APIENTRYP PFNGLLIGHTMODELXVOESPROC) (GLenum pname, const GLfixed *param);
typedef void (APIENTRYP PFNGLLIGHTXOESPROC) (GLenum light, GLenum pname, GLfixed param);
typedef void (APIENTRYP PFNGLLIGHTXVOESPROC) (GLenum light, GLenum pname, const GLfixed *params);
typedef void (APIENTRYP PFNGLLINEWIDTHXOESPROC) (GLfixed width);
typedef void (APIENTRYP PFNGLLOADMATRIXXOESPROC) (const GLfixed *m);
typedef void (APIENTRYP PFNGLMATERIALXOESPROC) (GLenum face, GLenum pname, GLfixed param);
typedef void (APIENTRYP PFNGLMATERIALXVOESPROC) (GLenum face, GLenum pname, const GLfixed *param);
typedef void (APIENTRYP PFNGLMULTMATRIXXOESPROC) (const GLfixed *m);
typedef void (APIENTRYP PFNGLMULTITEXCOORD4XOESPROC) (GLenum texture, GLfixed s, GLfixed t, GLfixed r, GLfixed q);
typedef void (APIENTRYP PFNGLNORMAL3XOESPROC) (GLfixed nx, GLfixed ny, GLfixed nz);
typedef void (APIENTRYP PFNGLORTHOXOESPROC) (GLfixed l, GLfixed r, GLfixed b, GLfixed t, GLfixed n, GLfixed f);
typedef void (APIENTRYP PFNGLPOINTPARAMETERXVOESPROC) (GLenum pname, const GLfixed *params);
typedef void (APIENTRYP PFNGLPOINTSIZEXOESPROC) (GLfixed size);
typedef void (APIENTRYP PFNGLPOLYGONOFFSETXOESPROC) (GLfixed factor, GLfixed units);
typedef void (APIENTRYP PFNGLROTATEXOESPROC) (GLfixed angle, GLfixed x, GLfixed y, GLfixed z);
typedef void (APIENTRYP PFNGLSCALEXOESPROC) (GLfixed x, GLfixed y, GLfixed z);
typedef void (APIENTRYP PFNGLTEXENVXOESPROC) (GLenum target, GLenum pname, GLfixed param);
typedef void (APIENTRYP PFNGLTEXENVXVOESPROC) (GLenum target, GLenum pname, const GLfixed *params);
typedef void (APIENTRYP PFNGLTEXPARAMETERXOESPROC) (GLenum target, GLenum pname, GLfixed param);
typedef void (APIENTRYP PFNGLTEXPARAMETERXVOESPROC) (GLenum target, GLenum pname, const GLfixed *params);
typedef void (APIENTRYP PFNGLTRANSLATEXOESPROC) (GLfixed x, GLfixed y, GLfixed z);
typedef void (APIENTRYP PFNGLACCUMXOESPROC) (GLenum op, GLfixed value);
typedef void (APIENTRYP PFNGLBITMAPXOESPROC) (GLsizei width, GLsizei height, GLfixed xorig, GLfixed yorig, GLfixed xmove, GLfixed ymove, const GLubyte *bitmap);
typedef void (APIENTRYP PFNGLBLENDCOLORXOESPROC) (GLfixed red, GLfixed green, GLfixed blue, GLfixed alpha);
typedef void (APIENTRYP PFNGLCLEARACCUMXOESPROC) (GLfixed red, GLfixed green, GLfixed blue, GLfixed alpha);
typedef void (APIENTRYP PFNGLCOLOR3XOESPROC) (GLfixed red, GLfixed green, GLfixed blue);
typedef void (APIENTRYP PFNGLCOLOR3XVOESPROC) (const GLfixed *components);
typedef void (APIENTRYP PFNGLCOLOR4XVOESPROC) (const GLfixed *components);
typedef void (APIENTRYP PFNGLCONVOLUTIONPARAMETERXOESPROC) (GLenum target, GLenum pname, GLfixed param);
typedef void (APIENTRYP PFNGLCONVOLUTIONPARAMETERXVOESPROC) (GLenum target, GLenum pname, const GLfixed *params);
typedef void (APIENTRYP PFNGLEVALCOORD1XOESPROC) (GLfixed u);
typedef void (APIENTRYP PFNGLEVALCOORD1XVOESPROC) (const GLfixed *coords);
typedef void (APIENTRYP PFNGLEVALCOORD2XOESPROC) (GLfixed u, GLfixed v);
typedef void (APIENTRYP PFNGLEVALCOORD2XVOESPROC) (const GLfixed *coords);
typedef void (APIENTRYP PFNGLFEEDBACKBUFFERXOESPROC) (GLsizei n, GLenum type, const GLfixed *buffer);
typedef void (APIENTRYP PFNGLGETCONVOLUTIONPARAMETERXVOESPROC) (GLenum target, GLenum pname, GLfixed *params);
typedef void (APIENTRYP PFNGLGETHISTOGRAMPARAMETERXVOESPROC) (GLenum target, GLenum pname, GLfixed *params);
typedef void (APIENTRYP PFNGLGETLIGHTXOESPROC) (GLenum light, GLenum pname, GLfixed *params);
typedef void (APIENTRYP PFNGLGETMAPXVOESPROC) (GLenum target, GLenum query, GLfixed *v);
typedef void (APIENTRYP PFNGLGETMATERIALXOESPROC) (GLenum face, GLenum pname, GLfixed param);
typedef void (APIENTRYP PFNGLGETPIXELMAPXVPROC) (GLenum map, GLint size, GLfixed *values);
typedef void (APIENTRYP PFNGLGETTEXGENXVOESPROC) (GLenum coord, GLenum pname, GLfixed *params);
typedef void (APIENTRYP PFNGLGETTEXLEVELPARAMETERXVOESPROC) (GLenum target, GLint level, GLenum pname, GLfixed *params);
typedef void (APIENTRYP PFNGLINDEXXOESPROC) (GLfixed component);
typedef void (APIENTRYP PFNGLINDEXXVOESPROC) (const GLfixed *component);
typedef void (APIENTRYP PFNGLLOADTRANSPOSEMATRIXXOESPROC) (const GLfixed *m);
typedef void (APIENTRYP PFNGLMAP1XOESPROC) (GLenum target, GLfixed u1, GLfixed u2, GLint stride, GLint order, GLfixed points);
typedef void (APIENTRYP PFNGLMAP2XOESPROC) (GLenum target, GLfixed u1, GLfixed u2, GLint ustride, GLint uorder, GLfixed v1, GLfixed v2, GLint vstride, GLint vorder, GLfixed points);
typedef void (APIENTRYP PFNGLMAPGRID1XOESPROC) (GLint n, GLfixed u1, GLfixed u2);
typedef void (APIENTRYP PFNGLMAPGRID2XOESPROC) (GLint n, GLfixed u1, GLfixed u2, GLfixed v1, GLfixed v2);
typedef void (APIENTRYP PFNGLMULTTRANSPOSEMATRIXXOESPROC) (const GLfixed *m);
typedef void (APIENTRYP PFNGLMULTITEXCOORD1XOESPROC) (GLenum texture, GLfixed s);
typedef void (APIENTRYP PFNGLMULTITEXCOORD1XVOESPROC) (GLenum texture, const GLfixed *coords);
typedef void (APIENTRYP PFNGLMULTITEXCOORD2XOESPROC) (GLenum texture, GLfixed s, GLfixed t);
typedef void (APIENTRYP PFNGLMULTITEXCOORD2XVOESPROC) (GLenum texture, const GLfixed *coords);
typedef void (APIENTRYP PFNGLMULTITEXCOORD3XOESPROC) (GLenum texture, GLfixed s, GLfixed t, GLfixed r);
typedef void (APIENTRYP PFNGLMULTITEXCOORD3XVOESPROC) (GLenum texture, const GLfixed *coords);
typedef void (APIENTRYP PFNGLMULTITEXCOORD4XVOESPROC) (GLenum texture, const GLfixed *coords);
typedef void (APIENTRYP PFNGLNORMAL3XVOESPROC) (const GLfixed *coords);
typedef void (APIENTRYP PFNGLPASSTHROUGHXOESPROC) (GLfixed token);
typedef void (APIENTRYP PFNGLPIXELMAPXPROC) (GLenum map, GLint size, const GLfixed *values);
typedef void (APIENTRYP PFNGLPIXELSTOREXPROC) (GLenum pname, GLfixed param);
typedef void (APIENTRYP PFNGLPIXELTRANSFERXOESPROC) (GLenum pname, GLfixed param);
typedef void (APIENTRYP PFNGLPIXELZOOMXOESPROC) (GLfixed xfactor, GLfixed yfactor);
typedef void (APIENTRYP PFNGLPRIORITIZETEXTURESXOESPROC) (GLsizei n, const GLuint *textures, const GLfixed *priorities);
typedef void (APIENTRYP PFNGLRASTERPOS2XOESPROC) (GLfixed x, GLfixed y);
typedef void (APIENTRYP PFNGLRASTERPOS2XVOESPROC) (const GLfixed *coords);
typedef void (APIENTRYP PFNGLRASTERPOS3XOESPROC) (GLfixed x, GLfixed y, GLfixed z);
typedef void (APIENTRYP PFNGLRASTERPOS3XVOESPROC) (const GLfixed *coords);
typedef void (APIENTRYP PFNGLRASTERPOS4XOESPROC) (GLfixed x, GLfixed y, GLfixed z, GLfixed w);
typedef void (APIENTRYP PFNGLRASTERPOS4XVOESPROC) (const GLfixed *coords);
typedef void (APIENTRYP PFNGLRECTXOESPROC) (GLfixed x1, GLfixed y1, GLfixed x2, GLfixed y2);
typedef void (APIENTRYP PFNGLRECTXVOESPROC) (const GLfixed *v1, const GLfixed *v2);
typedef void (APIENTRYP PFNGLTEXCOORD1XOESPROC) (GLfixed s);
typedef void (APIENTRYP PFNGLTEXCOORD1XVOESPROC) (const GLfixed *coords);
typedef void (APIENTRYP PFNGLTEXCOORD2XOESPROC) (GLfixed s, GLfixed t);
typedef void (APIENTRYP PFNGLTEXCOORD2XVOESPROC) (const GLfixed *coords);
typedef void (APIENTRYP PFNGLTEXCOORD3XOESPROC) (GLfixed s, GLfixed t, GLfixed r);
typedef void (APIENTRYP PFNGLTEXCOORD3XVOESPROC) (const GLfixed *coords);
typedef void (APIENTRYP PFNGLTEXCOORD4XOESPROC) (GLfixed s, GLfixed t, GLfixed r, GLfixed q);
typedef void (APIENTRYP PFNGLTEXCOORD4XVOESPROC) (const GLfixed *coords);
typedef void (APIENTRYP PFNGLTEXGENXOESPROC) (GLenum coord, GLenum pname, GLfixed param);
typedef void (APIENTRYP PFNGLTEXGENXVOESPROC) (GLenum coord, GLenum pname, const GLfixed *params);
typedef void (APIENTRYP PFNGLVERTEX2XOESPROC) (GLfixed x);
typedef void (APIENTRYP PFNGLVERTEX2XVOESPROC) (const GLfixed *coords);
typedef void (APIENTRYP PFNGLVERTEX3XOESPROC) (GLfixed x, GLfixed y);
typedef void (APIENTRYP PFNGLVERTEX3XVOESPROC) (const GLfixed *coords);
typedef void (APIENTRYP PFNGLVERTEX4XOESPROC) (GLfixed x, GLfixed y, GLfixed z);
typedef void (APIENTRYP PFNGLVERTEX4XVOESPROC) (const GLfixed *coords);
// GL_OES_fixed_point

// GL_OES_query_matrix
AXLGLFLAPI bool GL_OES_query_matrix;
typedef GLbitfield (APIENTRYP PFNGLQUERYMATRIXXOESPROC) (GLfixed *mantissa, GLint *exponent);
// GL_OES_query_matrix

// GL_OES_read_format
AXLGLFLAPI bool GL_OES_read_format;
AXLGLFLCONSTMODIFIER GLconstant GL_IMPLEMENTATION_COLOR_READ_TYPE_OES = 0x8B9A;
AXLGLFLCONSTMODIFIER GLconstant GL_IMPLEMENTATION_COLOR_READ_FORMAT_OES = 0x8B9B;
// GL_OES_read_format

// GL_OES_single_precision
AXLGLFLAPI bool GL_OES_single_precision;
typedef void (APIENTRYP PFNGLCLEARDEPTHFOESPROC) (GLclampf depth);
typedef void (APIENTRYP PFNGLCLIPPLANEFOESPROC) (GLenum plane, const GLfloat *equation);
typedef void (APIENTRYP PFNGLDEPTHRANGEFOESPROC) (GLclampf n, GLclampf f);
typedef void (APIENTRYP PFNGLFRUSTUMFOESPROC) (GLfloat l, GLfloat r, GLfloat b, GLfloat t, GLfloat n, GLfloat f);
typedef void (APIENTRYP PFNGLGETCLIPPLANEFOESPROC) (GLenum plane, GLfloat *equation);
typedef void (APIENTRYP PFNGLORTHOFOESPROC) (GLfloat l, GLfloat r, GLfloat b, GLfloat t, GLfloat n, GLfloat f);
// GL_OES_single_precision

} // namespace GLOES

namespace GL3DFX {

// GL_3DFX_multisample
AXLGLFLAPI bool GL_3DFX_multisample;
AXLGLFLCONSTMODIFIER GLconstant GL_MULTISAMPLE_3DFX = 0x86B2;
AXLGLFLCONSTMODIFIER GLconstant GL_SAMPLE_BUFFERS_3DFX = 0x86B3;
AXLGLFLCONSTMODIFIER GLconstant GL_SAMPLES_3DFX = 0x86B4;
AXLGLFLCONSTMODIFIER GLconstant GL_MULTISAMPLE_BIT_3DFX = 0x200000;00
// GL_3DFX_multisample

// GL_3DFX_tbuffer
AXLGLFLAPI bool GL_3DFX_tbuffer;
typedef void (APIENTRYP PFNGLTBUFFERMASK3DFXPROC) (GLuint mask);
// GL_3DFX_tbuffer

// GL_3DFX_texture_compression_FXT1
AXLGLFLAPI bool GL_3DFX_texture_compression_FXT1;
AXLGLFLCONSTMODIFIER GLconstant GL_COMPRESSED_RGB_FXT1_3DFX = 0x86B0;
AXLGLFLCONSTMODIFIER GLconstant GL_COMPRESSED_RGBA_FXT1_3DFX = 0x86B1;
// GL_3DFX_texture_compression_FXT1

} // namespace GL3DFX

namespace GLAMD {

// GL_AMD_blend_minmax_factor
AXLGLFLAPI bool GL_AMD_blend_minmax_factor;
AXLGLFLCONSTMODIFIER GLconstant GL_FACTOR_MIN_AMD = 0x901C;
AXLGLFLCONSTMODIFIER GLconstant GL_FACTOR_MAX_AMD = 0x901D;
// GL_AMD_blend_minmax_factor

// GL_AMD_conservative_depth
AXLGLFLAPI bool GL_AMD_conservative_depth;
// GL_AMD_conservative_depth

// GL_AMD_debug_output
AXLGLFLAPI bool GL_AMD_debug_output;
typedef void (APIENTRY  *GLDEBUGPROCAMD)(GLuint id,GLenum category,GLenum severity,GLsizei length,const GLchar *message,void *userParam);
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_DEBUG_MESSAGE_LENGTH_AMD = 0x9143;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_DEBUG_LOGGED_MESSAGES_AMD = 0x9144;
AXLGLFLCONSTMODIFIER GLconstant GL_DEBUG_LOGGED_MESSAGES_AMD = 0x9145;
AXLGLFLCONSTMODIFIER GLconstant GL_DEBUG_SEVERITY_HIGH_AMD = 0x9146;
AXLGLFLCONSTMODIFIER GLconstant GL_DEBUG_SEVERITY_MEDIUM_AMD = 0x9147;
AXLGLFLCONSTMODIFIER GLconstant GL_DEBUG_SEVERITY_LOW_AMD = 0x9148;
AXLGLFLCONSTMODIFIER GLconstant GL_DEBUG_CATEGORY_API_ERROR_AMD = 0x9149;
AXLGLFLCONSTMODIFIER GLconstant GL_DEBUG_CATEGORY_WINDOW_SYSTEM_AMD = 0x914A;
AXLGLFLCONSTMODIFIER GLconstant GL_DEBUG_CATEGORY_DEPRECATION_AMD = 0x914B;
AXLGLFLCONSTMODIFIER GLconstant GL_DEBUG_CATEGORY_UNDEFINED_BEHAVIOR_AMD = 0x914C;
AXLGLFLCONSTMODIFIER GLconstant GL_DEBUG_CATEGORY_PERFORMANCE_AMD = 0x914D;
AXLGLFLCONSTMODIFIER GLconstant GL_DEBUG_CATEGORY_SHADER_COMPILER_AMD = 0x914E;
AXLGLFLCONSTMODIFIER GLconstant GL_DEBUG_CATEGORY_APPLICATION_AMD = 0x914F;
AXLGLFLCONSTMODIFIER GLconstant GL_DEBUG_CATEGORY_OTHER_AMD = 0x9150;
typedef void (APIENTRYP PFNGLDEBUGMESSAGEENABLEAMDPROC) (GLenum category, GLenum severity, GLsizei count, const GLuint *ids, GLboolean enabled);
typedef void (APIENTRYP PFNGLDEBUGMESSAGEINSERTAMDPROC) (GLenum category, GLenum severity, GLuint id, GLsizei length, const GLchar *buf);
typedef void (APIENTRYP PFNGLDEBUGMESSAGECALLBACKAMDPROC) (GLDEBUGPROCAMD callback, void *userParam);
typedef GLuint (APIENTRYP PFNGLGETDEBUGMESSAGELOGAMDPROC) (GLuint count, GLsizei bufSize, GLenum *categories, GLuint *severities, GLuint *ids, GLsizei *lengths, GLchar *message);
// GL_AMD_debug_output

// GL_AMD_depth_clamp_separate
AXLGLFLAPI bool GL_AMD_depth_clamp_separate;
AXLGLFLCONSTMODIFIER GLconstant GL_DEPTH_CLAMP_NEAR_AMD = 0x901E;
AXLGLFLCONSTMODIFIER GLconstant GL_DEPTH_CLAMP_FAR_AMD = 0x901F;
// GL_AMD_depth_clamp_separate

// GL_AMD_draw_buffers_blend
AXLGLFLAPI bool GL_AMD_draw_buffers_blend;
typedef void (APIENTRYP PFNGLBLENDFUNCINDEXEDAMDPROC) (GLuint buf, GLenum src, GLenum dst);
typedef void (APIENTRYP PFNGLBLENDFUNCSEPARATEINDEXEDAMDPROC) (GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha);
typedef void (APIENTRYP PFNGLBLENDEQUATIONINDEXEDAMDPROC) (GLuint buf, GLenum mode);
typedef void (APIENTRYP PFNGLBLENDEQUATIONSEPARATEINDEXEDAMDPROC) (GLuint buf, GLenum modeRGB, GLenum modeAlpha);
// GL_AMD_draw_buffers_blend

// GL_AMD_framebuffer_multisample_advanced
AXLGLFLAPI bool GL_AMD_framebuffer_multisample_advanced;
AXLGLFLCONSTMODIFIER GLconstant GL_RENDERBUFFER_STORAGE_SAMPLES_AMD = 0x91B2;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_COLOR_FRAMEBUFFER_SAMPLES_AMD = 0x91B3;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_COLOR_FRAMEBUFFER_STORAGE_SAMPLES_AMD = 0x91B4;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_DEPTH_STENCIL_FRAMEBUFFER_SAMPLES_AMD = 0x91B5;
AXLGLFLCONSTMODIFIER GLconstant GL_NUM_SUPPORTED_MULTISAMPLE_MODES_AMD = 0x91B6;
AXLGLFLCONSTMODIFIER GLconstant GL_SUPPORTED_MULTISAMPLE_MODES_AMD = 0x91B7;
typedef void (APIENTRYP PFNGLRENDERBUFFERSTORAGEMULTISAMPLEADVANCEDAMDPROC) (GLenum target, GLsizei samples, GLsizei storageSamples, GLenum internalformat, GLsizei width, GLsizei height);
typedef void (APIENTRYP PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEADVANCEDAMDPROC) (GLuint renderbuffer, GLsizei samples, GLsizei storageSamples, GLenum internalformat, GLsizei width, GLsizei height);
// GL_AMD_framebuffer_multisample_advanced

// GL_AMD_framebuffer_sample_positions
AXLGLFLAPI bool GL_AMD_framebuffer_sample_positions;
AXLGLFLCONSTMODIFIER GLconstant GL_SUBSAMPLE_DISTANCE_AMD = 0x883F;
AXLGLFLCONSTMODIFIER GLconstant GL_PIXELS_PER_SAMPLE_PATTERN_X_AMD = 0x91AE;
AXLGLFLCONSTMODIFIER GLconstant GL_PIXELS_PER_SAMPLE_PATTERN_Y_AMD = 0x91AF;
AXLGLFLCONSTMODIFIER GLconstant GL_ALL_PIXELS_AMD = 0xFFFFFF;FF
typedef void (APIENTRYP PFNGLFRAMEBUFFERSAMPLEPOSITIONSFVAMDPROC) (GLenum target, GLuint numsamples, GLuint pixelindex, const GLfloat *values);
typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERSAMPLEPOSITIONSFVAMDPROC) (GLuint framebuffer, GLuint numsamples, GLuint pixelindex, const GLfloat *values);
typedef void (APIENTRYP PFNGLGETFRAMEBUFFERPARAMETERFVAMDPROC) (GLenum target, GLenum pname, GLuint numsamples, GLuint pixelindex, GLsizei size, GLfloat *values);
typedef void (APIENTRYP PFNGLGETNAMEDFRAMEBUFFERPARAMETERFVAMDPROC) (GLuint framebuffer, GLenum pname, GLuint numsamples, GLuint pixelindex, GLsizei size, GLfloat *values);
// GL_AMD_framebuffer_sample_positions

// GL_AMD_gcn_shader
AXLGLFLAPI bool GL_AMD_gcn_shader;
// GL_AMD_gcn_shader

// GL_AMD_gpu_shader_half_float
AXLGLFLAPI bool GL_AMD_gpu_shader_half_float;
AXLGLFLCONSTMODIFIER GLconstant GL_FLOAT16_NV = 0x8FF8;
AXLGLFLCONSTMODIFIER GLconstant GL_FLOAT16_VEC2_NV = 0x8FF9;
AXLGLFLCONSTMODIFIER GLconstant GL_FLOAT16_VEC3_NV = 0x8FFA;
AXLGLFLCONSTMODIFIER GLconstant GL_FLOAT16_VEC4_NV = 0x8FFB;
AXLGLFLCONSTMODIFIER GLconstant GL_FLOAT16_MAT2_AMD = 0x91C5;
AXLGLFLCONSTMODIFIER GLconstant GL_FLOAT16_MAT3_AMD = 0x91C6;
AXLGLFLCONSTMODIFIER GLconstant GL_FLOAT16_MAT4_AMD = 0x91C7;
AXLGLFLCONSTMODIFIER GLconstant GL_FLOAT16_MAT2x3_AMD = 0x91C8;
AXLGLFLCONSTMODIFIER GLconstant GL_FLOAT16_MAT2x4_AMD = 0x91C9;
AXLGLFLCONSTMODIFIER GLconstant GL_FLOAT16_MAT3x2_AMD = 0x91CA;
AXLGLFLCONSTMODIFIER GLconstant GL_FLOAT16_MAT3x4_AMD = 0x91CB;
AXLGLFLCONSTMODIFIER GLconstant GL_FLOAT16_MAT4x2_AMD = 0x91CC;
AXLGLFLCONSTMODIFIER GLconstant GL_FLOAT16_MAT4x3_AMD = 0x91CD;
// GL_AMD_gpu_shader_half_float

// GL_AMD_gpu_shader_int16
AXLGLFLAPI bool GL_AMD_gpu_shader_int16;
// GL_AMD_gpu_shader_int16

// GL_AMD_gpu_shader_int64
AXLGLFLAPI bool GL_AMD_gpu_shader_int64;
typedef int64_t GLint64EXT;
AXLGLFLCONSTMODIFIER GLconstant GL_INT64_NV = 0x140E;
AXLGLFLCONSTMODIFIER GLconstant GL_UNSIGNED_INT64_NV = 0x140F;
AXLGLFLCONSTMODIFIER GLconstant GL_INT8_NV = 0x8FE0;
AXLGLFLCONSTMODIFIER GLconstant GL_INT8_VEC2_NV = 0x8FE1;
AXLGLFLCONSTMODIFIER GLconstant GL_INT8_VEC3_NV = 0x8FE2;
AXLGLFLCONSTMODIFIER GLconstant GL_INT8_VEC4_NV = 0x8FE3;
AXLGLFLCONSTMODIFIER GLconstant GL_INT16_NV = 0x8FE4;
AXLGLFLCONSTMODIFIER GLconstant GL_INT16_VEC2_NV = 0x8FE5;
AXLGLFLCONSTMODIFIER GLconstant GL_INT16_VEC3_NV = 0x8FE6;
AXLGLFLCONSTMODIFIER GLconstant GL_INT16_VEC4_NV = 0x8FE7;
AXLGLFLCONSTMODIFIER GLconstant GL_INT64_VEC2_NV = 0x8FE9;
AXLGLFLCONSTMODIFIER GLconstant GL_INT64_VEC3_NV = 0x8FEA;
AXLGLFLCONSTMODIFIER GLconstant GL_INT64_VEC4_NV = 0x8FEB;
AXLGLFLCONSTMODIFIER GLconstant GL_UNSIGNED_INT8_NV = 0x8FEC;
AXLGLFLCONSTMODIFIER GLconstant GL_UNSIGNED_INT8_VEC2_NV = 0x8FED;
AXLGLFLCONSTMODIFIER GLconstant GL_UNSIGNED_INT8_VEC3_NV = 0x8FEE;
AXLGLFLCONSTMODIFIER GLconstant GL_UNSIGNED_INT8_VEC4_NV = 0x8FEF;
AXLGLFLCONSTMODIFIER GLconstant GL_UNSIGNED_INT16_NV = 0x8FF0;
AXLGLFLCONSTMODIFIER GLconstant GL_UNSIGNED_INT16_VEC2_NV = 0x8FF1;
AXLGLFLCONSTMODIFIER GLconstant GL_UNSIGNED_INT16_VEC3_NV = 0x8FF2;
AXLGLFLCONSTMODIFIER GLconstant GL_UNSIGNED_INT16_VEC4_NV = 0x8FF3;
AXLGLFLCONSTMODIFIER GLconstant GL_UNSIGNED_INT64_VEC2_NV = 0x8FF5;
AXLGLFLCONSTMODIFIER GLconstant GL_UNSIGNED_INT64_VEC3_NV = 0x8FF6;
AXLGLFLCONSTMODIFIER GLconstant GL_UNSIGNED_INT64_VEC4_NV = 0x8FF7;
typedef void (APIENTRYP PFNGLUNIFORM1I64NVPROC) (GLint location, GLint64EXT x);
typedef void (APIENTRYP PFNGLUNIFORM2I64NVPROC) (GLint location, GLint64EXT x, GLint64EXT y);
typedef void (APIENTRYP PFNGLUNIFORM3I64NVPROC) (GLint location, GLint64EXT x, GLint64EXT y, GLint64EXT z);
typedef void (APIENTRYP PFNGLUNIFORM4I64NVPROC) (GLint location, GLint64EXT x, GLint64EXT y, GLint64EXT z, GLint64EXT w);
typedef void (APIENTRYP PFNGLUNIFORM1I64VNVPROC) (GLint location, GLsizei count, const GLint64EXT *value);
typedef void (APIENTRYP PFNGLUNIFORM2I64VNVPROC) (GLint location, GLsizei count, const GLint64EXT *value);
typedef void (APIENTRYP PFNGLUNIFORM3I64VNVPROC) (GLint location, GLsizei count, const GLint64EXT *value);
typedef void (APIENTRYP PFNGLUNIFORM4I64VNVPROC) (GLint location, GLsizei count, const GLint64EXT *value);
typedef void (APIENTRYP PFNGLUNIFORM1UI64NVPROC) (GLint location, GLuint64EXT x);
typedef void (APIENTRYP PFNGLUNIFORM2UI64NVPROC) (GLint location, GLuint64EXT x, GLuint64EXT y);
typedef void (APIENTRYP PFNGLUNIFORM3UI64NVPROC) (GLint location, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z);
typedef void (APIENTRYP PFNGLUNIFORM4UI64NVPROC) (GLint location, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z, GLuint64EXT w);
typedef void (APIENTRYP PFNGLUNIFORM1UI64VNVPROC) (GLint location, GLsizei count, const GLuint64EXT *value);
typedef void (APIENTRYP PFNGLUNIFORM2UI64VNVPROC) (GLint location, GLsizei count, const GLuint64EXT *value);
typedef void (APIENTRYP PFNGLUNIFORM3UI64VNVPROC) (GLint location, GLsizei count, const GLuint64EXT *value);
typedef void (APIENTRYP PFNGLUNIFORM4UI64VNVPROC) (GLint location, GLsizei count, const GLuint64EXT *value);
typedef void (APIENTRYP PFNGLGETUNIFORMI64VNVPROC) (GLuint program, GLint location, GLint64EXT *params);
typedef void (APIENTRYP PFNGLGETUNIFORMUI64VNVPROC) (GLuint program, GLint location, GLuint64EXT *params);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1I64NVPROC) (GLuint program, GLint location, GLint64EXT x);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2I64NVPROC) (GLuint program, GLint location, GLint64EXT x, GLint64EXT y);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3I64NVPROC) (GLuint program, GLint location, GLint64EXT x, GLint64EXT y, GLint64EXT z);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4I64NVPROC) (GLuint program, GLint location, GLint64EXT x, GLint64EXT y, GLint64EXT z, GLint64EXT w);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1I64VNVPROC) (GLuint program, GLint location, GLsizei count, const GLint64EXT *value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2I64VNVPROC) (GLuint program, GLint location, GLsizei count, const GLint64EXT *value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3I64VNVPROC) (GLuint program, GLint location, GLsizei count, const GLint64EXT *value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4I64VNVPROC) (GLuint program, GLint location, GLsizei count, const GLint64EXT *value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1UI64NVPROC) (GLuint program, GLint location, GLuint64EXT x);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2UI64NVPROC) (GLuint program, GLint location, GLuint64EXT x, GLuint64EXT y);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3UI64NVPROC) (GLuint program, GLint location, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4UI64NVPROC) (GLuint program, GLint location, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z, GLuint64EXT w);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1UI64VNVPROC) (GLuint program, GLint location, GLsizei count, const GLuint64EXT *value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2UI64VNVPROC) (GLuint program, GLint location, GLsizei count, const GLuint64EXT *value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3UI64VNVPROC) (GLuint program, GLint location, GLsizei count, const GLuint64EXT *value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4UI64VNVPROC) (GLuint program, GLint location, GLsizei count, const GLuint64EXT *value);
// GL_AMD_gpu_shader_int64

// GL_AMD_interleaved_elements
AXLGLFLAPI bool GL_AMD_interleaved_elements;
AXLGLFLCONSTMODIFIER GLconstant GL_VERTEX_ELEMENT_SWIZZLE_AMD = 0x91A4;
AXLGLFLCONSTMODIFIER GLconstant GL_VERTEX_ID_SWIZZLE_AMD = 0x91A5;
typedef void (APIENTRYP PFNGLVERTEXATTRIBPARAMETERIAMDPROC) (GLuint index, GLenum pname, GLint param);
// GL_AMD_interleaved_elements

// GL_AMD_multi_draw_indirect
AXLGLFLAPI bool GL_AMD_multi_draw_indirect;
typedef void (APIENTRYP PFNGLMULTIDRAWARRAYSINDIRECTAMDPROC) (GLenum mode, const void *indirect, GLsizei primcount, GLsizei stride);
typedef void (APIENTRYP PFNGLMULTIDRAWELEMENTSINDIRECTAMDPROC) (GLenum mode, GLenum type, const void *indirect, GLsizei primcount, GLsizei stride);
// GL_AMD_multi_draw_indirect

// GL_AMD_name_gen_delete
AXLGLFLAPI bool GL_AMD_name_gen_delete;
AXLGLFLCONSTMODIFIER GLconstant GL_DATA_BUFFER_AMD = 0x9151;
AXLGLFLCONSTMODIFIER GLconstant GL_PERFORMANCE_MONITOR_AMD = 0x9152;
AXLGLFLCONSTMODIFIER GLconstant GL_QUERY_OBJECT_AMD = 0x9153;
AXLGLFLCONSTMODIFIER GLconstant GL_VERTEX_ARRAY_OBJECT_AMD = 0x9154;
AXLGLFLCONSTMODIFIER GLconstant GL_SAMPLER_OBJECT_AMD = 0x9155;
typedef void (APIENTRYP PFNGLGENNAMESAMDPROC) (GLenum identifier, GLuint num, GLuint *names);
typedef void (APIENTRYP PFNGLDELETENAMESAMDPROC) (GLenum identifier, GLuint num, const GLuint *names);
typedef GLboolean (APIENTRYP PFNGLISNAMEAMDPROC) (GLenum identifier, GLuint name);
// GL_AMD_name_gen_delete

// GL_AMD_occlusion_query_event
AXLGLFLAPI bool GL_AMD_occlusion_query_event;
AXLGLFLCONSTMODIFIER GLconstant GL_OCCLUSION_QUERY_EVENT_MASK_AMD = 0x874F;
AXLGLFLCONSTMODIFIER GLconstant GL_QUERY_DEPTH_PASS_EVENT_BIT_AMD = 0x000000;01
AXLGLFLCONSTMODIFIER GLconstant GL_QUERY_DEPTH_FAIL_EVENT_BIT_AMD = 0x000000;02
AXLGLFLCONSTMODIFIER GLconstant GL_QUERY_STENCIL_FAIL_EVENT_BIT_AMD = 0x000000;04
AXLGLFLCONSTMODIFIER GLconstant GL_QUERY_DEPTH_BOUNDS_FAIL_EVENT_BIT_AMD = 0x000000;08
AXLGLFLCONSTMODIFIER GLconstant GL_QUERY_ALL_EVENT_BITS_AMD = 0xFFFFFF;FF
typedef void (APIENTRYP PFNGLQUERYOBJECTPARAMETERUIAMDPROC) (GLenum target, GLuint id, GLenum pname, GLuint param);
// GL_AMD_occlusion_query_event

// GL_AMD_performance_monitor
AXLGLFLAPI bool GL_AMD_performance_monitor;
AXLGLFLCONSTMODIFIER GLconstant GL_COUNTER_TYPE_AMD = 0x8BC0;
AXLGLFLCONSTMODIFIER GLconstant GL_COUNTER_RANGE_AMD = 0x8BC1;
AXLGLFLCONSTMODIFIER GLconstant GL_UNSIGNED_INT64_AMD = 0x8BC2;
AXLGLFLCONSTMODIFIER GLconstant GL_PERCENTAGE_AMD = 0x8BC3;
AXLGLFLCONSTMODIFIER GLconstant GL_PERFMON_RESULT_AVAILABLE_AMD = 0x8BC4;
AXLGLFLCONSTMODIFIER GLconstant GL_PERFMON_RESULT_SIZE_AMD = 0x8BC5;
AXLGLFLCONSTMODIFIER GLconstant GL_PERFMON_RESULT_AMD = 0x8BC6;
typedef void (APIENTRYP PFNGLGETPERFMONITORGROUPSAMDPROC) (GLint *numGroups, GLsizei groupsSize, GLuint *groups);
typedef void (APIENTRYP PFNGLGETPERFMONITORCOUNTERSAMDPROC) (GLuint group, GLint *numCounters, GLint *maxActiveCounters, GLsizei counterSize, GLuint *counters);
typedef void (APIENTRYP PFNGLGETPERFMONITORGROUPSTRINGAMDPROC) (GLuint group, GLsizei bufSize, GLsizei *length, GLchar *groupString);
typedef void (APIENTRYP PFNGLGETPERFMONITORCOUNTERSTRINGAMDPROC) (GLuint group, GLuint counter, GLsizei bufSize, GLsizei *length, GLchar *counterString);
typedef void (APIENTRYP PFNGLGETPERFMONITORCOUNTERINFOAMDPROC) (GLuint group, GLuint counter, GLenum pname, void *data);
typedef void (APIENTRYP PFNGLGENPERFMONITORSAMDPROC) (GLsizei n, GLuint *monitors);
typedef void (APIENTRYP PFNGLDELETEPERFMONITORSAMDPROC) (GLsizei n, GLuint *monitors);
typedef void (APIENTRYP PFNGLSELECTPERFMONITORCOUNTERSAMDPROC) (GLuint monitor, GLboolean enable, GLuint group, GLint numCounters, GLuint *counterList);
typedef void (APIENTRYP PFNGLBEGINPERFMONITORAMDPROC) (GLuint monitor);
typedef void (APIENTRYP PFNGLENDPERFMONITORAMDPROC) (GLuint monitor);
typedef void (APIENTRYP PFNGLGETPERFMONITORCOUNTERDATAAMDPROC) (GLuint monitor, GLenum pname, GLsizei dataSize, GLuint *data, GLint *bytesWritten);
// GL_AMD_performance_monitor

// GL_AMD_pinned_memory
AXLGLFLAPI bool GL_AMD_pinned_memory;
AXLGLFLCONSTMODIFIER GLconstant GL_EXTERNAL_VIRTUAL_MEMORY_BUFFER_AMD = 0x9160;
// GL_AMD_pinned_memory

// GL_AMD_query_buffer_object
AXLGLFLAPI bool GL_AMD_query_buffer_object;
AXLGLFLCONSTMODIFIER GLconstant GL_QUERY_BUFFER_AMD = 0x9192;
AXLGLFLCONSTMODIFIER GLconstant GL_QUERY_BUFFER_BINDING_AMD = 0x9193;
AXLGLFLCONSTMODIFIER GLconstant GL_QUERY_RESULT_NO_WAIT_AMD = 0x9194;
// GL_AMD_query_buffer_object

// GL_AMD_sample_positions
AXLGLFLAPI bool GL_AMD_sample_positions;
typedef void (APIENTRYP PFNGLSETMULTISAMPLEFVAMDPROC) (GLenum pname, GLuint index, const GLfloat *val);
// GL_AMD_sample_positions

// GL_AMD_seamless_cubemap_per_texture
AXLGLFLAPI bool GL_AMD_seamless_cubemap_per_texture;
// GL_AMD_seamless_cubemap_per_texture

// GL_AMD_shader_atomic_counter_ops
AXLGLFLAPI bool GL_AMD_shader_atomic_counter_ops;
// GL_AMD_shader_atomic_counter_ops

// GL_AMD_shader_ballot
AXLGLFLAPI bool GL_AMD_shader_ballot;
// GL_AMD_shader_ballot

// GL_AMD_shader_explicit_vertex_parameter
AXLGLFLAPI bool GL_AMD_shader_explicit_vertex_parameter;
// GL_AMD_shader_explicit_vertex_parameter

// GL_AMD_shader_gpu_shader_half_float_fetch
AXLGLFLAPI bool GL_AMD_shader_gpu_shader_half_float_fetch;
// GL_AMD_shader_gpu_shader_half_float_fetch

// GL_AMD_shader_image_load_store_lod
AXLGLFLAPI bool GL_AMD_shader_image_load_store_lod;
// GL_AMD_shader_image_load_store_lod

// GL_AMD_shader_stencil_export
AXLGLFLAPI bool GL_AMD_shader_stencil_export;
// GL_AMD_shader_stencil_export

// GL_AMD_shader_trinary_minmax
AXLGLFLAPI bool GL_AMD_shader_trinary_minmax;
// GL_AMD_shader_trinary_minmax

// GL_AMD_sparse_texture
AXLGLFLAPI bool GL_AMD_sparse_texture;
AXLGLFLCONSTMODIFIER GLconstant GL_VIRTUAL_PAGE_SIZE_X_AMD = 0x9195;
AXLGLFLCONSTMODIFIER GLconstant GL_VIRTUAL_PAGE_SIZE_Y_AMD = 0x9196;
AXLGLFLCONSTMODIFIER GLconstant GL_VIRTUAL_PAGE_SIZE_Z_AMD = 0x9197;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_SPARSE_TEXTURE_SIZE_AMD = 0x9198;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_SPARSE_3D_TEXTURE_SIZE_AMD = 0x9199;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_SPARSE_ARRAY_TEXTURE_LAYERS = 0x919A;
AXLGLFLCONSTMODIFIER GLconstant GL_MIN_SPARSE_LEVEL_AMD = 0x919B;
AXLGLFLCONSTMODIFIER GLconstant GL_MIN_LOD_WARNING_AMD = 0x919C;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_STORAGE_SPARSE_BIT_AMD = 0x000000;01
typedef void (APIENTRYP PFNGLTEXSTORAGESPARSEAMDPROC) (GLenum target, GLenum internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLsizei layers, GLbitfield flags);
typedef void (APIENTRYP PFNGLTEXTURESTORAGESPARSEAMDPROC) (GLuint texture, GLenum target, GLenum internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLsizei layers, GLbitfield flags);
// GL_AMD_sparse_texture

// GL_AMD_stencil_operation_extended
AXLGLFLAPI bool GL_AMD_stencil_operation_extended;
AXLGLFLCONSTMODIFIER GLconstant GL_SET_AMD = 0x874A;
AXLGLFLCONSTMODIFIER GLconstant GL_REPLACE_VALUE_AMD = 0x874B;
AXLGLFLCONSTMODIFIER GLconstant GL_STENCIL_OP_VALUE_AMD = 0x874C;
AXLGLFLCONSTMODIFIER GLconstant GL_STENCIL_BACK_OP_VALUE_AMD = 0x874D;
typedef void (APIENTRYP PFNGLSTENCILOPVALUEAMDPROC) (GLenum face, GLuint value);
// GL_AMD_stencil_operation_extended

// GL_AMD_texture_gather_bias_lod
AXLGLFLAPI bool GL_AMD_texture_gather_bias_lod;
// GL_AMD_texture_gather_bias_lod

// GL_AMD_texture_texture4
AXLGLFLAPI bool GL_AMD_texture_texture4;
// GL_AMD_texture_texture4

// GL_AMD_transform_feedback3_lines_triangles
AXLGLFLAPI bool GL_AMD_transform_feedback3_lines_triangles;
// GL_AMD_transform_feedback3_lines_triangles

// GL_AMD_transform_feedback4
AXLGLFLAPI bool GL_AMD_transform_feedback4;
AXLGLFLCONSTMODIFIER GLconstant GL_STREAM_RASTERIZATION_AMD = 0x91A0;
// GL_AMD_transform_feedback4

// GL_AMD_vertex_shader_layer
AXLGLFLAPI bool GL_AMD_vertex_shader_layer;
// GL_AMD_vertex_shader_layer

// GL_AMD_vertex_shader_tessellator
AXLGLFLAPI bool GL_AMD_vertex_shader_tessellator;
AXLGLFLCONSTMODIFIER GLconstant GL_SAMPLER_BUFFER_AMD = 0x9001;
AXLGLFLCONSTMODIFIER GLconstant GL_INT_SAMPLER_BUFFER_AMD = 0x9002;
AXLGLFLCONSTMODIFIER GLconstant GL_UNSIGNED_INT_SAMPLER_BUFFER_AMD = 0x9003;
AXLGLFLCONSTMODIFIER GLconstant GL_TESSELLATION_MODE_AMD = 0x9004;
AXLGLFLCONSTMODIFIER GLconstant GL_TESSELLATION_FACTOR_AMD = 0x9005;
AXLGLFLCONSTMODIFIER GLconstant GL_DISCRETE_AMD = 0x9006;
AXLGLFLCONSTMODIFIER GLconstant GL_CONTINUOUS_AMD = 0x9007;
typedef void (APIENTRYP PFNGLTESSELLATIONFACTORAMDPROC) (GLfloat factor);
typedef void (APIENTRYP PFNGLTESSELLATIONMODEAMDPROC) (GLenum mode);
// GL_AMD_vertex_shader_tessellator

// GL_AMD_vertex_shader_viewport_index
AXLGLFLAPI bool GL_AMD_vertex_shader_viewport_index;
// GL_AMD_vertex_shader_viewport_index

} // namespace GLAMD

namespace GLAPPLE {

// GL_APPLE_aux_depth_stencil
AXLGLFLAPI bool GL_APPLE_aux_depth_stencil;
AXLGLFLCONSTMODIFIER GLconstant GL_AUX_DEPTH_STENCIL_APPLE = 0x8A14;
// GL_APPLE_aux_depth_stencil

// GL_APPLE_client_storage
AXLGLFLAPI bool GL_APPLE_client_storage;
AXLGLFLCONSTMODIFIER GLconstant GL_UNPACK_CLIENT_STORAGE_APPLE = 0x85B2;
// GL_APPLE_client_storage

// GL_APPLE_element_array
AXLGLFLAPI bool GL_APPLE_element_array;
AXLGLFLCONSTMODIFIER GLconstant GL_ELEMENT_ARRAY_APPLE = 0x8A0C;
AXLGLFLCONSTMODIFIER GLconstant GL_ELEMENT_ARRAY_TYPE_APPLE = 0x8A0D;
AXLGLFLCONSTMODIFIER GLconstant GL_ELEMENT_ARRAY_POINTER_APPLE = 0x8A0E;
typedef void (APIENTRYP PFNGLELEMENTPOINTERAPPLEPROC) (GLenum type, const void *pointer);
typedef void (APIENTRYP PFNGLDRAWELEMENTARRAYAPPLEPROC) (GLenum mode, GLint first, GLsizei count);
typedef void (APIENTRYP PFNGLDRAWRANGEELEMENTARRAYAPPLEPROC) (GLenum mode, GLuint start, GLuint end, GLint first, GLsizei count);
typedef void (APIENTRYP PFNGLMULTIDRAWELEMENTARRAYAPPLEPROC) (GLenum mode, const GLint *first, const GLsizei *count, GLsizei primcount);
typedef void (APIENTRYP PFNGLMULTIDRAWRANGEELEMENTARRAYAPPLEPROC) (GLenum mode, GLuint start, GLuint end, const GLint *first, const GLsizei *count, GLsizei primcount);
// GL_APPLE_element_array

// GL_APPLE_fence
AXLGLFLAPI bool GL_APPLE_fence;
AXLGLFLCONSTMODIFIER GLconstant GL_DRAW_PIXELS_APPLE = 0x8A0A;
AXLGLFLCONSTMODIFIER GLconstant GL_FENCE_APPLE = 0x8A0B;
typedef void (APIENTRYP PFNGLGENFENCESAPPLEPROC) (GLsizei n, GLuint *fences);
typedef void (APIENTRYP PFNGLDELETEFENCESAPPLEPROC) (GLsizei n, const GLuint *fences);
typedef void (APIENTRYP PFNGLSETFENCEAPPLEPROC) (GLuint fence);
typedef GLboolean (APIENTRYP PFNGLISFENCEAPPLEPROC) (GLuint fence);
typedef GLboolean (APIENTRYP PFNGLTESTFENCEAPPLEPROC) (GLuint fence);
typedef void (APIENTRYP PFNGLFINISHFENCEAPPLEPROC) (GLuint fence);
typedef GLboolean (APIENTRYP PFNGLTESTOBJECTAPPLEPROC) (GLenum object, GLuint name);
typedef void (APIENTRYP PFNGLFINISHOBJECTAPPLEPROC) (GLenum object, GLint name);
// GL_APPLE_fence

// GL_APPLE_float_pixels
AXLGLFLAPI bool GL_APPLE_float_pixels;
AXLGLFLCONSTMODIFIER GLconstant GL_HALF_APPLE = 0x140B;
AXLGLFLCONSTMODIFIER GLconstant GL_RGBA_FLOAT32_APPLE = 0x8814;
AXLGLFLCONSTMODIFIER GLconstant GL_RGB_FLOAT32_APPLE = 0x8815;
AXLGLFLCONSTMODIFIER GLconstant GL_ALPHA_FLOAT32_APPLE = 0x8816;
AXLGLFLCONSTMODIFIER GLconstant GL_INTENSITY_FLOAT32_APPLE = 0x8817;
AXLGLFLCONSTMODIFIER GLconstant GL_LUMINANCE_FLOAT32_APPLE = 0x8818;
AXLGLFLCONSTMODIFIER GLconstant GL_LUMINANCE_ALPHA_FLOAT32_APPLE = 0x8819;
AXLGLFLCONSTMODIFIER GLconstant GL_RGBA_FLOAT16_APPLE = 0x881A;
AXLGLFLCONSTMODIFIER GLconstant GL_RGB_FLOAT16_APPLE = 0x881B;
AXLGLFLCONSTMODIFIER GLconstant GL_ALPHA_FLOAT16_APPLE = 0x881C;
AXLGLFLCONSTMODIFIER GLconstant GL_INTENSITY_FLOAT16_APPLE = 0x881D;
AXLGLFLCONSTMODIFIER GLconstant GL_LUMINANCE_FLOAT16_APPLE = 0x881E;
AXLGLFLCONSTMODIFIER GLconstant GL_LUMINANCE_ALPHA_FLOAT16_APPLE = 0x881F;
AXLGLFLCONSTMODIFIER GLconstant GL_COLOR_FLOAT_APPLE = 0x8A0F;
// GL_APPLE_float_pixels

// GL_APPLE_flush_buffer_range
AXLGLFLAPI bool GL_APPLE_flush_buffer_range;
AXLGLFLCONSTMODIFIER GLconstant GL_BUFFER_SERIALIZED_MODIFY_APPLE = 0x8A12;
AXLGLFLCONSTMODIFIER GLconstant GL_BUFFER_FLUSHING_UNMAP_APPLE = 0x8A13;
typedef void (APIENTRYP PFNGLBUFFERPARAMETERIAPPLEPROC) (GLenum target, GLenum pname, GLint param);
typedef void (APIENTRYP PFNGLFLUSHMAPPEDBUFFERRANGEAPPLEPROC) (GLenum target, GLintptr offset, GLsizeiptr size);
// GL_APPLE_flush_buffer_range

// GL_APPLE_object_purgeable
AXLGLFLAPI bool GL_APPLE_object_purgeable;
AXLGLFLCONSTMODIFIER GLconstant GL_BUFFER_OBJECT_APPLE = 0x85B3;
AXLGLFLCONSTMODIFIER GLconstant GL_RELEASED_APPLE = 0x8A19;
AXLGLFLCONSTMODIFIER GLconstant GL_VOLATILE_APPLE = 0x8A1A;
AXLGLFLCONSTMODIFIER GLconstant GL_RETAINED_APPLE = 0x8A1B;
AXLGLFLCONSTMODIFIER GLconstant GL_UNDEFINED_APPLE = 0x8A1C;
AXLGLFLCONSTMODIFIER GLconstant GL_PURGEABLE_APPLE = 0x8A1D;
typedef GLenum (APIENTRYP PFNGLOBJECTPURGEABLEAPPLEPROC) (GLenum objectType, GLuint name, GLenum option);
typedef GLenum (APIENTRYP PFNGLOBJECTUNPURGEABLEAPPLEPROC) (GLenum objectType, GLuint name, GLenum option);
typedef void (APIENTRYP PFNGLGETOBJECTPARAMETERIVAPPLEPROC) (GLenum objectType, GLuint name, GLenum pname, GLint *params);
// GL_APPLE_object_purgeable

// GL_APPLE_rgb_422
AXLGLFLAPI bool GL_APPLE_rgb_422;
AXLGLFLCONSTMODIFIER GLconstant GL_RGB_422_APPLE = 0x8A1F;
AXLGLFLCONSTMODIFIER GLconstant GL_UNSIGNED_SHORT_8_8_APPLE = 0x85BA;
AXLGLFLCONSTMODIFIER GLconstant GL_UNSIGNED_SHORT_8_8_REV_APPLE = 0x85BB;
AXLGLFLCONSTMODIFIER GLconstant GL_RGB_RAW_422_APPLE = 0x8A51;
// GL_APPLE_rgb_422

// GL_APPLE_row_bytes
AXLGLFLAPI bool GL_APPLE_row_bytes;
AXLGLFLCONSTMODIFIER GLconstant GL_PACK_ROW_BYTES_APPLE = 0x8A15;
AXLGLFLCONSTMODIFIER GLconstant GL_UNPACK_ROW_BYTES_APPLE = 0x8A16;
// GL_APPLE_row_bytes

// GL_APPLE_specular_vector
AXLGLFLAPI bool GL_APPLE_specular_vector;
AXLGLFLCONSTMODIFIER GLconstant GL_LIGHT_MODEL_SPECULAR_VECTOR_APPLE = 0x85B0;
// GL_APPLE_specular_vector

// GL_APPLE_texture_range
AXLGLFLAPI bool GL_APPLE_texture_range;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_RANGE_LENGTH_APPLE = 0x85B7;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_RANGE_POINTER_APPLE = 0x85B8;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_STORAGE_HINT_APPLE = 0x85BC;
AXLGLFLCONSTMODIFIER GLconstant GL_STORAGE_PRIVATE_APPLE = 0x85BD;
AXLGLFLCONSTMODIFIER GLconstant GL_STORAGE_CACHED_APPLE = 0x85BE;
AXLGLFLCONSTMODIFIER GLconstant GL_STORAGE_SHARED_APPLE = 0x85BF;
typedef void (APIENTRYP PFNGLTEXTURERANGEAPPLEPROC) (GLenum target, GLsizei length, const void *pointer);
typedef void (APIENTRYP PFNGLGETTEXPARAMETERPOINTERVAPPLEPROC) (GLenum target, GLenum pname, void **params);
// GL_APPLE_texture_range

// GL_APPLE_transform_hint
AXLGLFLAPI bool GL_APPLE_transform_hint;
AXLGLFLCONSTMODIFIER GLconstant GL_TRANSFORM_HINT_APPLE = 0x85B1;
// GL_APPLE_transform_hint

// GL_APPLE_vertex_array_object
AXLGLFLAPI bool GL_APPLE_vertex_array_object;
AXLGLFLCONSTMODIFIER GLconstant GL_VERTEX_ARRAY_BINDING_APPLE = 0x85B5;
typedef void (APIENTRYP PFNGLBINDVERTEXARRAYAPPLEPROC) (GLuint array);
typedef void (APIENTRYP PFNGLDELETEVERTEXARRAYSAPPLEPROC) (GLsizei n, const GLuint *arrays);
typedef void (APIENTRYP PFNGLGENVERTEXARRAYSAPPLEPROC) (GLsizei n, GLuint *arrays);
typedef GLboolean (APIENTRYP PFNGLISVERTEXARRAYAPPLEPROC) (GLuint array);
// GL_APPLE_vertex_array_object

// GL_APPLE_vertex_array_range
AXLGLFLAPI bool GL_APPLE_vertex_array_range;
AXLGLFLCONSTMODIFIER GLconstant GL_VERTEX_ARRAY_RANGE_APPLE = 0x851D;
AXLGLFLCONSTMODIFIER GLconstant GL_VERTEX_ARRAY_RANGE_LENGTH_APPLE = 0x851E;
AXLGLFLCONSTMODIFIER GLconstant GL_VERTEX_ARRAY_STORAGE_HINT_APPLE = 0x851F;
AXLGLFLCONSTMODIFIER GLconstant GL_VERTEX_ARRAY_RANGE_POINTER_APPLE = 0x8521;
AXLGLFLCONSTMODIFIER GLconstant GL_STORAGE_CLIENT_APPLE = 0x85B4;
typedef void (APIENTRYP PFNGLVERTEXARRAYRANGEAPPLEPROC) (GLsizei length, void *pointer);
typedef void (APIENTRYP PFNGLFLUSHVERTEXARRAYRANGEAPPLEPROC) (GLsizei length, void *pointer);
typedef void (APIENTRYP PFNGLVERTEXARRAYPARAMETERIAPPLEPROC) (GLenum pname, GLint param);
// GL_APPLE_vertex_array_range

// GL_APPLE_vertex_program_evaluators
AXLGLFLAPI bool GL_APPLE_vertex_program_evaluators;
AXLGLFLCONSTMODIFIER GLconstant GL_VERTEX_ATTRIB_MAP1_APPLE = 0x8A00;
AXLGLFLCONSTMODIFIER GLconstant GL_VERTEX_ATTRIB_MAP2_APPLE = 0x8A01;
AXLGLFLCONSTMODIFIER GLconstant GL_VERTEX_ATTRIB_MAP1_SIZE_APPLE = 0x8A02;
AXLGLFLCONSTMODIFIER GLconstant GL_VERTEX_ATTRIB_MAP1_COEFF_APPLE = 0x8A03;
AXLGLFLCONSTMODIFIER GLconstant GL_VERTEX_ATTRIB_MAP1_ORDER_APPLE = 0x8A04;
AXLGLFLCONSTMODIFIER GLconstant GL_VERTEX_ATTRIB_MAP1_DOMAIN_APPLE = 0x8A05;
AXLGLFLCONSTMODIFIER GLconstant GL_VERTEX_ATTRIB_MAP2_SIZE_APPLE = 0x8A06;
AXLGLFLCONSTMODIFIER GLconstant GL_VERTEX_ATTRIB_MAP2_COEFF_APPLE = 0x8A07;
AXLGLFLCONSTMODIFIER GLconstant GL_VERTEX_ATTRIB_MAP2_ORDER_APPLE = 0x8A08;
AXLGLFLCONSTMODIFIER GLconstant GL_VERTEX_ATTRIB_MAP2_DOMAIN_APPLE = 0x8A09;
typedef void (APIENTRYP PFNGLENABLEVERTEXATTRIBAPPLEPROC) (GLuint index, GLenum pname);
typedef void (APIENTRYP PFNGLDISABLEVERTEXATTRIBAPPLEPROC) (GLuint index, GLenum pname);
typedef GLboolean (APIENTRYP PFNGLISVERTEXATTRIBENABLEDAPPLEPROC) (GLuint index, GLenum pname);
typedef void (APIENTRYP PFNGLMAPVERTEXATTRIB1DAPPLEPROC) (GLuint index, GLuint size, GLdouble u1, GLdouble u2, GLint stride, GLint order, const GLdouble *points);
typedef void (APIENTRYP PFNGLMAPVERTEXATTRIB1FAPPLEPROC) (GLuint index, GLuint size, GLfloat u1, GLfloat u2, GLint stride, GLint order, const GLfloat *points);
typedef void (APIENTRYP PFNGLMAPVERTEXATTRIB2DAPPLEPROC) (GLuint index, GLuint size, GLdouble u1, GLdouble u2, GLint ustride, GLint uorder, GLdouble v1, GLdouble v2, GLint vstride, GLint vorder, const GLdouble *points);
typedef void (APIENTRYP PFNGLMAPVERTEXATTRIB2FAPPLEPROC) (GLuint index, GLuint size, GLfloat u1, GLfloat u2, GLint ustride, GLint uorder, GLfloat v1, GLfloat v2, GLint vstride, GLint vorder, const GLfloat *points);
// GL_APPLE_vertex_program_evaluators

// GL_APPLE_ycbcr_422
AXLGLFLAPI bool GL_APPLE_ycbcr_422;
AXLGLFLCONSTMODIFIER GLconstant GL_YCBCR_422_APPLE = 0x85B9;
// GL_APPLE_ycbcr_422

} // namespace GLAPPLE

namespace GLATI {

// GL_ATI_draw_buffers
AXLGLFLAPI bool GL_ATI_draw_buffers;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_DRAW_BUFFERS_ATI = 0x8824;
AXLGLFLCONSTMODIFIER GLconstant GL_DRAW_BUFFER0_ATI = 0x8825;
AXLGLFLCONSTMODIFIER GLconstant GL_DRAW_BUFFER1_ATI = 0x8826;
AXLGLFLCONSTMODIFIER GLconstant GL_DRAW_BUFFER2_ATI = 0x8827;
AXLGLFLCONSTMODIFIER GLconstant GL_DRAW_BUFFER3_ATI = 0x8828;
AXLGLFLCONSTMODIFIER GLconstant GL_DRAW_BUFFER4_ATI = 0x8829;
AXLGLFLCONSTMODIFIER GLconstant GL_DRAW_BUFFER5_ATI = 0x882A;
AXLGLFLCONSTMODIFIER GLconstant GL_DRAW_BUFFER6_ATI = 0x882B;
AXLGLFLCONSTMODIFIER GLconstant GL_DRAW_BUFFER7_ATI = 0x882C;
AXLGLFLCONSTMODIFIER GLconstant GL_DRAW_BUFFER8_ATI = 0x882D;
AXLGLFLCONSTMODIFIER GLconstant GL_DRAW_BUFFER9_ATI = 0x882E;
AXLGLFLCONSTMODIFIER GLconstant GL_DRAW_BUFFER10_ATI = 0x882F;
AXLGLFLCONSTMODIFIER GLconstant GL_DRAW_BUFFER11_ATI = 0x8830;
AXLGLFLCONSTMODIFIER GLconstant GL_DRAW_BUFFER12_ATI = 0x8831;
AXLGLFLCONSTMODIFIER GLconstant GL_DRAW_BUFFER13_ATI = 0x8832;
AXLGLFLCONSTMODIFIER GLconstant GL_DRAW_BUFFER14_ATI = 0x8833;
AXLGLFLCONSTMODIFIER GLconstant GL_DRAW_BUFFER15_ATI = 0x8834;
typedef void (APIENTRYP PFNGLDRAWBUFFERSATIPROC) (GLsizei n, const GLenum *bufs);
// GL_ATI_draw_buffers

// GL_ATI_element_array
AXLGLFLAPI bool GL_ATI_element_array;
AXLGLFLCONSTMODIFIER GLconstant GL_ELEMENT_ARRAY_ATI = 0x8768;
AXLGLFLCONSTMODIFIER GLconstant GL_ELEMENT_ARRAY_TYPE_ATI = 0x8769;
AXLGLFLCONSTMODIFIER GLconstant GL_ELEMENT_ARRAY_POINTER_ATI = 0x876A;
typedef void (APIENTRYP PFNGLELEMENTPOINTERATIPROC) (GLenum type, const void *pointer);
typedef void (APIENTRYP PFNGLDRAWELEMENTARRAYATIPROC) (GLenum mode, GLsizei count);
typedef void (APIENTRYP PFNGLDRAWRANGEELEMENTARRAYATIPROC) (GLenum mode, GLuint start, GLuint end, GLsizei count);
// GL_ATI_element_array

// GL_ATI_envmap_bumpmap
AXLGLFLAPI bool GL_ATI_envmap_bumpmap;
AXLGLFLCONSTMODIFIER GLconstant GL_BUMP_ROT_MATRIX_ATI = 0x8775;
AXLGLFLCONSTMODIFIER GLconstant GL_BUMP_ROT_MATRIX_SIZE_ATI = 0x8776;
AXLGLFLCONSTMODIFIER GLconstant GL_BUMP_NUM_TEX_UNITS_ATI = 0x8777;
AXLGLFLCONSTMODIFIER GLconstant GL_BUMP_TEX_UNITS_ATI = 0x8778;
AXLGLFLCONSTMODIFIER GLconstant GL_DUDV_ATI = 0x8779;
AXLGLFLCONSTMODIFIER GLconstant GL_DU8DV8_ATI = 0x877A;
AXLGLFLCONSTMODIFIER GLconstant GL_BUMP_ENVMAP_ATI = 0x877B;
AXLGLFLCONSTMODIFIER GLconstant GL_BUMP_TARGET_ATI = 0x877C;
typedef void (APIENTRYP PFNGLTEXBUMPPARAMETERIVATIPROC) (GLenum pname, const GLint *param);
typedef void (APIENTRYP PFNGLTEXBUMPPARAMETERFVATIPROC) (GLenum pname, const GLfloat *param);
typedef void (APIENTRYP PFNGLGETTEXBUMPPARAMETERIVATIPROC) (GLenum pname, GLint *param);
typedef void (APIENTRYP PFNGLGETTEXBUMPPARAMETERFVATIPROC) (GLenum pname, GLfloat *param);
// GL_ATI_envmap_bumpmap

// GL_ATI_fragment_shader
AXLGLFLAPI bool GL_ATI_fragment_shader;
AXLGLFLCONSTMODIFIER GLconstant GL_FRAGMENT_SHADER_ATI = 0x8920;
AXLGLFLCONSTMODIFIER GLconstant GL_REG_0_ATI = 0x8921;
AXLGLFLCONSTMODIFIER GLconstant GL_REG_1_ATI = 0x8922;
AXLGLFLCONSTMODIFIER GLconstant GL_REG_2_ATI = 0x8923;
AXLGLFLCONSTMODIFIER GLconstant GL_REG_3_ATI = 0x8924;
AXLGLFLCONSTMODIFIER GLconstant GL_REG_4_ATI = 0x8925;
AXLGLFLCONSTMODIFIER GLconstant GL_REG_5_ATI = 0x8926;
AXLGLFLCONSTMODIFIER GLconstant GL_REG_6_ATI = 0x8927;
AXLGLFLCONSTMODIFIER GLconstant GL_REG_7_ATI = 0x8928;
AXLGLFLCONSTMODIFIER GLconstant GL_REG_8_ATI = 0x8929;
AXLGLFLCONSTMODIFIER GLconstant GL_REG_9_ATI = 0x892A;
AXLGLFLCONSTMODIFIER GLconstant GL_REG_10_ATI = 0x892B;
AXLGLFLCONSTMODIFIER GLconstant GL_REG_11_ATI = 0x892C;
AXLGLFLCONSTMODIFIER GLconstant GL_REG_12_ATI = 0x892D;
AXLGLFLCONSTMODIFIER GLconstant GL_REG_13_ATI = 0x892E;
AXLGLFLCONSTMODIFIER GLconstant GL_REG_14_ATI = 0x892F;
AXLGLFLCONSTMODIFIER GLconstant GL_REG_15_ATI = 0x8930;
AXLGLFLCONSTMODIFIER GLconstant GL_REG_16_ATI = 0x8931;
AXLGLFLCONSTMODIFIER GLconstant GL_REG_17_ATI = 0x8932;
AXLGLFLCONSTMODIFIER GLconstant GL_REG_18_ATI = 0x8933;
AXLGLFLCONSTMODIFIER GLconstant GL_REG_19_ATI = 0x8934;
AXLGLFLCONSTMODIFIER GLconstant GL_REG_20_ATI = 0x8935;
AXLGLFLCONSTMODIFIER GLconstant GL_REG_21_ATI = 0x8936;
AXLGLFLCONSTMODIFIER GLconstant GL_REG_22_ATI = 0x8937;
AXLGLFLCONSTMODIFIER GLconstant GL_REG_23_ATI = 0x8938;
AXLGLFLCONSTMODIFIER GLconstant GL_REG_24_ATI = 0x8939;
AXLGLFLCONSTMODIFIER GLconstant GL_REG_25_ATI = 0x893A;
AXLGLFLCONSTMODIFIER GLconstant GL_REG_26_ATI = 0x893B;
AXLGLFLCONSTMODIFIER GLconstant GL_REG_27_ATI = 0x893C;
AXLGLFLCONSTMODIFIER GLconstant GL_REG_28_ATI = 0x893D;
AXLGLFLCONSTMODIFIER GLconstant GL_REG_29_ATI = 0x893E;
AXLGLFLCONSTMODIFIER GLconstant GL_REG_30_ATI = 0x893F;
AXLGLFLCONSTMODIFIER GLconstant GL_REG_31_ATI = 0x8940;
AXLGLFLCONSTMODIFIER GLconstant GL_CON_0_ATI = 0x8941;
AXLGLFLCONSTMODIFIER GLconstant GL_CON_1_ATI = 0x8942;
AXLGLFLCONSTMODIFIER GLconstant GL_CON_2_ATI = 0x8943;
AXLGLFLCONSTMODIFIER GLconstant GL_CON_3_ATI = 0x8944;
AXLGLFLCONSTMODIFIER GLconstant GL_CON_4_ATI = 0x8945;
AXLGLFLCONSTMODIFIER GLconstant GL_CON_5_ATI = 0x8946;
AXLGLFLCONSTMODIFIER GLconstant GL_CON_6_ATI = 0x8947;
AXLGLFLCONSTMODIFIER GLconstant GL_CON_7_ATI = 0x8948;
AXLGLFLCONSTMODIFIER GLconstant GL_CON_8_ATI = 0x8949;
AXLGLFLCONSTMODIFIER GLconstant GL_CON_9_ATI = 0x894A;
AXLGLFLCONSTMODIFIER GLconstant GL_CON_10_ATI = 0x894B;
AXLGLFLCONSTMODIFIER GLconstant GL_CON_11_ATI = 0x894C;
AXLGLFLCONSTMODIFIER GLconstant GL_CON_12_ATI = 0x894D;
AXLGLFLCONSTMODIFIER GLconstant GL_CON_13_ATI = 0x894E;
AXLGLFLCONSTMODIFIER GLconstant GL_CON_14_ATI = 0x894F;
AXLGLFLCONSTMODIFIER GLconstant GL_CON_15_ATI = 0x8950;
AXLGLFLCONSTMODIFIER GLconstant GL_CON_16_ATI = 0x8951;
AXLGLFLCONSTMODIFIER GLconstant GL_CON_17_ATI = 0x8952;
AXLGLFLCONSTMODIFIER GLconstant GL_CON_18_ATI = 0x8953;
AXLGLFLCONSTMODIFIER GLconstant GL_CON_19_ATI = 0x8954;
AXLGLFLCONSTMODIFIER GLconstant GL_CON_20_ATI = 0x8955;
AXLGLFLCONSTMODIFIER GLconstant GL_CON_21_ATI = 0x8956;
AXLGLFLCONSTMODIFIER GLconstant GL_CON_22_ATI = 0x8957;
AXLGLFLCONSTMODIFIER GLconstant GL_CON_23_ATI = 0x8958;
AXLGLFLCONSTMODIFIER GLconstant GL_CON_24_ATI = 0x8959;
AXLGLFLCONSTMODIFIER GLconstant GL_CON_25_ATI = 0x895A;
AXLGLFLCONSTMODIFIER GLconstant GL_CON_26_ATI = 0x895B;
AXLGLFLCONSTMODIFIER GLconstant GL_CON_27_ATI = 0x895C;
AXLGLFLCONSTMODIFIER GLconstant GL_CON_28_ATI = 0x895D;
AXLGLFLCONSTMODIFIER GLconstant GL_CON_29_ATI = 0x895E;
AXLGLFLCONSTMODIFIER GLconstant GL_CON_30_ATI = 0x895F;
AXLGLFLCONSTMODIFIER GLconstant GL_CON_31_ATI = 0x8960;
AXLGLFLCONSTMODIFIER GLconstant GL_MOV_ATI = 0x8961;
AXLGLFLCONSTMODIFIER GLconstant GL_ADD_ATI = 0x8963;
AXLGLFLCONSTMODIFIER GLconstant GL_MUL_ATI = 0x8964;
AXLGLFLCONSTMODIFIER GLconstant GL_SUB_ATI = 0x8965;
AXLGLFLCONSTMODIFIER GLconstant GL_DOT3_ATI = 0x8966;
AXLGLFLCONSTMODIFIER GLconstant GL_DOT4_ATI = 0x8967;
AXLGLFLCONSTMODIFIER GLconstant GL_MAD_ATI = 0x8968;
AXLGLFLCONSTMODIFIER GLconstant GL_LERP_ATI = 0x8969;
AXLGLFLCONSTMODIFIER GLconstant GL_CND_ATI = 0x896A;
AXLGLFLCONSTMODIFIER GLconstant GL_CND0_ATI = 0x896B;
AXLGLFLCONSTMODIFIER GLconstant GL_DOT2_ADD_ATI = 0x896C;
AXLGLFLCONSTMODIFIER GLconstant GL_SECONDARY_INTERPOLATOR_ATI = 0x896D;
AXLGLFLCONSTMODIFIER GLconstant GL_NUM_FRAGMENT_REGISTERS_ATI = 0x896E;
AXLGLFLCONSTMODIFIER GLconstant GL_NUM_FRAGMENT_CONSTANTS_ATI = 0x896F;
AXLGLFLCONSTMODIFIER GLconstant GL_NUM_PASSES_ATI = 0x8970;
AXLGLFLCONSTMODIFIER GLconstant GL_NUM_INSTRUCTIONS_PER_PASS_ATI = 0x8971;
AXLGLFLCONSTMODIFIER GLconstant GL_NUM_INSTRUCTIONS_TOTAL_ATI = 0x8972;
AXLGLFLCONSTMODIFIER GLconstant GL_NUM_INPUT_INTERPOLATOR_COMPONENTS_ATI = 0x8973;
AXLGLFLCONSTMODIFIER GLconstant GL_NUM_LOOPBACK_COMPONENTS_ATI = 0x8974;
AXLGLFLCONSTMODIFIER GLconstant GL_COLOR_ALPHA_PAIRING_ATI = 0x8975;
AXLGLFLCONSTMODIFIER GLconstant GL_SWIZZLE_STR_ATI = 0x8976;
AXLGLFLCONSTMODIFIER GLconstant GL_SWIZZLE_STQ_ATI = 0x8977;
AXLGLFLCONSTMODIFIER GLconstant GL_SWIZZLE_STR_DR_ATI = 0x8978;
AXLGLFLCONSTMODIFIER GLconstant GL_SWIZZLE_STQ_DQ_ATI = 0x8979;
AXLGLFLCONSTMODIFIER GLconstant GL_SWIZZLE_STRQ_ATI = 0x897A;
AXLGLFLCONSTMODIFIER GLconstant GL_SWIZZLE_STRQ_DQ_ATI = 0x897B;
AXLGLFLCONSTMODIFIER GLconstant GL_RED_BIT_ATI = 0x000000;01
AXLGLFLCONSTMODIFIER GLconstant GL_GREEN_BIT_ATI = 0x000000;02
AXLGLFLCONSTMODIFIER GLconstant GL_BLUE_BIT_ATI = 0x000000;04
AXLGLFLCONSTMODIFIER GLconstant GL_2X_BIT_ATI = 0x000000;01
AXLGLFLCONSTMODIFIER GLconstant GL_4X_BIT_ATI = 0x000000;02
AXLGLFLCONSTMODIFIER GLconstant GL_8X_BIT_ATI = 0x000000;04
AXLGLFLCONSTMODIFIER GLconstant GL_HALF_BIT_ATI = 0x000000;08
AXLGLFLCONSTMODIFIER GLconstant GL_QUARTER_BIT_ATI = 0x000000;10
AXLGLFLCONSTMODIFIER GLconstant GL_EIGHTH_BIT_ATI = 0x000000;20
AXLGLFLCONSTMODIFIER GLconstant GL_SATURATE_BIT_ATI = 0x000000;40
AXLGLFLCONSTMODIFIER GLconstant GL_COMP_BIT_ATI = 0x000000;02
AXLGLFLCONSTMODIFIER GLconstant GL_NEGATE_BIT_ATI = 0x000000;04
AXLGLFLCONSTMODIFIER GLconstant GL_BIAS_BIT_ATI = 0x000000;08
typedef GLuint (APIENTRYP PFNGLGENFRAGMENTSHADERSATIPROC) (GLuint range);
typedef void (APIENTRYP PFNGLBINDFRAGMENTSHADERATIPROC) (GLuint id);
typedef void (APIENTRYP PFNGLDELETEFRAGMENTSHADERATIPROC) (GLuint id);
typedef void (APIENTRYP PFNGLBEGINFRAGMENTSHADERATIPROC) (void);
typedef void (APIENTRYP PFNGLENDFRAGMENTSHADERATIPROC) (void);
typedef void (APIENTRYP PFNGLPASSTEXCOORDATIPROC) (GLuint dst, GLuint coord, GLenum swizzle);
typedef void (APIENTRYP PFNGLSAMPLEMAPATIPROC) (GLuint dst, GLuint interp, GLenum swizzle);
typedef void (APIENTRYP PFNGLCOLORFRAGMENTOP1ATIPROC) (GLenum op, GLuint dst, GLuint dstMask, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod);
typedef void (APIENTRYP PFNGLCOLORFRAGMENTOP2ATIPROC) (GLenum op, GLuint dst, GLuint dstMask, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod);
typedef void (APIENTRYP PFNGLCOLORFRAGMENTOP3ATIPROC) (GLenum op, GLuint dst, GLuint dstMask, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod, GLuint arg3, GLuint arg3Rep, GLuint arg3Mod);
typedef void (APIENTRYP PFNGLALPHAFRAGMENTOP1ATIPROC) (GLenum op, GLuint dst, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod);
typedef void (APIENTRYP PFNGLALPHAFRAGMENTOP2ATIPROC) (GLenum op, GLuint dst, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod);
typedef void (APIENTRYP PFNGLALPHAFRAGMENTOP3ATIPROC) (GLenum op, GLuint dst, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod, GLuint arg3, GLuint arg3Rep, GLuint arg3Mod);
typedef void (APIENTRYP PFNGLSETFRAGMENTSHADERCONSTANTATIPROC) (GLuint dst, const GLfloat *value);
// GL_ATI_fragment_shader

// GL_ATI_map_object_buffer
AXLGLFLAPI bool GL_ATI_map_object_buffer;
typedef void *(APIENTRYP PFNGLMAPOBJECTBUFFERATIPROC) (GLuint buffer);
typedef void (APIENTRYP PFNGLUNMAPOBJECTBUFFERATIPROC) (GLuint buffer);
// GL_ATI_map_object_buffer

// GL_ATI_meminfo
AXLGLFLAPI bool GL_ATI_meminfo;
AXLGLFLCONSTMODIFIER GLconstant GL_VBO_FREE_MEMORY_ATI = 0x87FB;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_FREE_MEMORY_ATI = 0x87FC;
AXLGLFLCONSTMODIFIER GLconstant GL_RENDERBUFFER_FREE_MEMORY_ATI = 0x87FD;
// GL_ATI_meminfo

// GL_ATI_pixel_format_float
AXLGLFLAPI bool GL_ATI_pixel_format_float;
AXLGLFLCONSTMODIFIER GLconstant GL_RGBA_FLOAT_MODE_ATI = 0x8820;
AXLGLFLCONSTMODIFIER GLconstant GL_COLOR_CLEAR_UNCLAMPED_VALUE_ATI = 0x8835;
// GL_ATI_pixel_format_float

// GL_ATI_pn_triangles
AXLGLFLAPI bool GL_ATI_pn_triangles;
AXLGLFLCONSTMODIFIER GLconstant GL_PN_TRIANGLES_ATI = 0x87F0;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_PN_TRIANGLES_TESSELATION_LEVEL_ATI = 0x87F1;
AXLGLFLCONSTMODIFIER GLconstant GL_PN_TRIANGLES_POINT_MODE_ATI = 0x87F2;
AXLGLFLCONSTMODIFIER GLconstant GL_PN_TRIANGLES_NORMAL_MODE_ATI = 0x87F3;
AXLGLFLCONSTMODIFIER GLconstant GL_PN_TRIANGLES_TESSELATION_LEVEL_ATI = 0x87F4;
AXLGLFLCONSTMODIFIER GLconstant GL_PN_TRIANGLES_POINT_MODE_LINEAR_ATI = 0x87F5;
AXLGLFLCONSTMODIFIER GLconstant GL_PN_TRIANGLES_POINT_MODE_CUBIC_ATI = 0x87F6;
AXLGLFLCONSTMODIFIER GLconstant GL_PN_TRIANGLES_NORMAL_MODE_LINEAR_ATI = 0x87F7;
AXLGLFLCONSTMODIFIER GLconstant GL_PN_TRIANGLES_NORMAL_MODE_QUADRATIC_ATI = 0x87F8;
typedef void (APIENTRYP PFNGLPNTRIANGLESIATIPROC) (GLenum pname, GLint param);
typedef void (APIENTRYP PFNGLPNTRIANGLESFATIPROC) (GLenum pname, GLfloat param);
// GL_ATI_pn_triangles

// GL_ATI_separate_stencil
AXLGLFLAPI bool GL_ATI_separate_stencil;
AXLGLFLCONSTMODIFIER GLconstant GL_STENCIL_BACK_FUNC_ATI = 0x8800;
AXLGLFLCONSTMODIFIER GLconstant GL_STENCIL_BACK_FAIL_ATI = 0x8801;
AXLGLFLCONSTMODIFIER GLconstant GL_STENCIL_BACK_PASS_DEPTH_FAIL_ATI = 0x8802;
AXLGLFLCONSTMODIFIER GLconstant GL_STENCIL_BACK_PASS_DEPTH_PASS_ATI = 0x8803;
typedef void (APIENTRYP PFNGLSTENCILOPSEPARATEATIPROC) (GLenum face, GLenum sfail, GLenum dpfail, GLenum dppass);
typedef void (APIENTRYP PFNGLSTENCILFUNCSEPARATEATIPROC) (GLenum frontfunc, GLenum backfunc, GLint ref, GLuint mask);
// GL_ATI_separate_stencil

// GL_ATI_text_fragment_shader
AXLGLFLAPI bool GL_ATI_text_fragment_shader;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXT_FRAGMENT_SHADER_ATI = 0x8200;
// GL_ATI_text_fragment_shader

// GL_ATI_texture_env_combine3
AXLGLFLAPI bool GL_ATI_texture_env_combine3;
AXLGLFLCONSTMODIFIER GLconstant GL_MODULATE_ADD_ATI = 0x8744;
AXLGLFLCONSTMODIFIER GLconstant GL_MODULATE_SIGNED_ADD_ATI = 0x8745;
AXLGLFLCONSTMODIFIER GLconstant GL_MODULATE_SUBTRACT_ATI = 0x8746;
// GL_ATI_texture_env_combine3

// GL_ATI_texture_float
AXLGLFLAPI bool GL_ATI_texture_float;
AXLGLFLCONSTMODIFIER GLconstant GL_RGBA_FLOAT32_ATI = 0x8814;
AXLGLFLCONSTMODIFIER GLconstant GL_RGB_FLOAT32_ATI = 0x8815;
AXLGLFLCONSTMODIFIER GLconstant GL_ALPHA_FLOAT32_ATI = 0x8816;
AXLGLFLCONSTMODIFIER GLconstant GL_INTENSITY_FLOAT32_ATI = 0x8817;
AXLGLFLCONSTMODIFIER GLconstant GL_LUMINANCE_FLOAT32_ATI = 0x8818;
AXLGLFLCONSTMODIFIER GLconstant GL_LUMINANCE_ALPHA_FLOAT32_ATI = 0x8819;
AXLGLFLCONSTMODIFIER GLconstant GL_RGBA_FLOAT16_ATI = 0x881A;
AXLGLFLCONSTMODIFIER GLconstant GL_RGB_FLOAT16_ATI = 0x881B;
AXLGLFLCONSTMODIFIER GLconstant GL_ALPHA_FLOAT16_ATI = 0x881C;
AXLGLFLCONSTMODIFIER GLconstant GL_INTENSITY_FLOAT16_ATI = 0x881D;
AXLGLFLCONSTMODIFIER GLconstant GL_LUMINANCE_FLOAT16_ATI = 0x881E;
AXLGLFLCONSTMODIFIER GLconstant GL_LUMINANCE_ALPHA_FLOAT16_ATI = 0x881F;
// GL_ATI_texture_float

// GL_ATI_texture_mirror_once
AXLGLFLAPI bool GL_ATI_texture_mirror_once;
AXLGLFLCONSTMODIFIER GLconstant GL_MIRROR_CLAMP_ATI = 0x8742;
AXLGLFLCONSTMODIFIER GLconstant GL_MIRROR_CLAMP_TO_EDGE_ATI = 0x8743;
// GL_ATI_texture_mirror_once

// GL_ATI_vertex_array_object
AXLGLFLAPI bool GL_ATI_vertex_array_object;
AXLGLFLCONSTMODIFIER GLconstant GL_STATIC_ATI = 0x8760;
AXLGLFLCONSTMODIFIER GLconstant GL_DYNAMIC_ATI = 0x8761;
AXLGLFLCONSTMODIFIER GLconstant GL_PRESERVE_ATI = 0x8762;
AXLGLFLCONSTMODIFIER GLconstant GL_DISCARD_ATI = 0x8763;
AXLGLFLCONSTMODIFIER GLconstant GL_OBJECT_BUFFER_SIZE_ATI = 0x8764;
AXLGLFLCONSTMODIFIER GLconstant GL_OBJECT_BUFFER_USAGE_ATI = 0x8765;
AXLGLFLCONSTMODIFIER GLconstant GL_ARRAY_OBJECT_BUFFER_ATI = 0x8766;
AXLGLFLCONSTMODIFIER GLconstant GL_ARRAY_OBJECT_OFFSET_ATI = 0x8767;
typedef GLuint (APIENTRYP PFNGLNEWOBJECTBUFFERATIPROC) (GLsizei size, const void *pointer, GLenum usage);
typedef GLboolean (APIENTRYP PFNGLISOBJECTBUFFERATIPROC) (GLuint buffer);
typedef void (APIENTRYP PFNGLUPDATEOBJECTBUFFERATIPROC) (GLuint buffer, GLuint offset, GLsizei size, const void *pointer, GLenum preserve);
typedef void (APIENTRYP PFNGLGETOBJECTBUFFERFVATIPROC) (GLuint buffer, GLenum pname, GLfloat *params);
typedef void (APIENTRYP PFNGLGETOBJECTBUFFERIVATIPROC) (GLuint buffer, GLenum pname, GLint *params);
typedef void (APIENTRYP PFNGLFREEOBJECTBUFFERATIPROC) (GLuint buffer);
typedef void (APIENTRYP PFNGLARRAYOBJECTATIPROC) (GLenum array, GLint size, GLenum type, GLsizei stride, GLuint buffer, GLuint offset);
typedef void (APIENTRYP PFNGLGETARRAYOBJECTFVATIPROC) (GLenum array, GLenum pname, GLfloat *params);
typedef void (APIENTRYP PFNGLGETARRAYOBJECTIVATIPROC) (GLenum array, GLenum pname, GLint *params);
typedef void (APIENTRYP PFNGLVARIANTARRAYOBJECTATIPROC) (GLuint id, GLenum type, GLsizei stride, GLuint buffer, GLuint offset);
typedef void (APIENTRYP PFNGLGETVARIANTARRAYOBJECTFVATIPROC) (GLuint id, GLenum pname, GLfloat *params);
typedef void (APIENTRYP PFNGLGETVARIANTARRAYOBJECTIVATIPROC) (GLuint id, GLenum pname, GLint *params);
// GL_ATI_vertex_array_object

// GL_ATI_vertex_attrib_array_object
AXLGLFLAPI bool GL_ATI_vertex_attrib_array_object;
typedef void (APIENTRYP PFNGLVERTEXATTRIBARRAYOBJECTATIPROC) (GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, GLuint buffer, GLuint offset);
typedef void (APIENTRYP PFNGLGETVERTEXATTRIBARRAYOBJECTFVATIPROC) (GLuint index, GLenum pname, GLfloat *params);
typedef void (APIENTRYP PFNGLGETVERTEXATTRIBARRAYOBJECTIVATIPROC) (GLuint index, GLenum pname, GLint *params);
// GL_ATI_vertex_attrib_array_object

// GL_ATI_vertex_streams
AXLGLFLAPI bool GL_ATI_vertex_streams;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_VERTEX_STREAMS_ATI = 0x876B;
AXLGLFLCONSTMODIFIER GLconstant GL_VERTEX_STREAM0_ATI = 0x876C;
AXLGLFLCONSTMODIFIER GLconstant GL_VERTEX_STREAM1_ATI = 0x876D;
AXLGLFLCONSTMODIFIER GLconstant GL_VERTEX_STREAM2_ATI = 0x876E;
AXLGLFLCONSTMODIFIER GLconstant GL_VERTEX_STREAM3_ATI = 0x876F;
AXLGLFLCONSTMODIFIER GLconstant GL_VERTEX_STREAM4_ATI = 0x8770;
AXLGLFLCONSTMODIFIER GLconstant GL_VERTEX_STREAM5_ATI = 0x8771;
AXLGLFLCONSTMODIFIER GLconstant GL_VERTEX_STREAM6_ATI = 0x8772;
AXLGLFLCONSTMODIFIER GLconstant GL_VERTEX_STREAM7_ATI = 0x8773;
AXLGLFLCONSTMODIFIER GLconstant GL_VERTEX_SOURCE_ATI = 0x8774;
typedef void (APIENTRYP PFNGLVERTEXSTREAM1SATIPROC) (GLenum stream, GLshort x);
typedef void (APIENTRYP PFNGLVERTEXSTREAM1SVATIPROC) (GLenum stream, const GLshort *coords);
typedef void (APIENTRYP PFNGLVERTEXSTREAM1IATIPROC) (GLenum stream, GLint x);
typedef void (APIENTRYP PFNGLVERTEXSTREAM1IVATIPROC) (GLenum stream, const GLint *coords);
typedef void (APIENTRYP PFNGLVERTEXSTREAM1FATIPROC) (GLenum stream, GLfloat x);
typedef void (APIENTRYP PFNGLVERTEXSTREAM1FVATIPROC) (GLenum stream, const GLfloat *coords);
typedef void (APIENTRYP PFNGLVERTEXSTREAM1DATIPROC) (GLenum stream, GLdouble x);
typedef void (APIENTRYP PFNGLVERTEXSTREAM1DVATIPROC) (GLenum stream, const GLdouble *coords);
typedef void (APIENTRYP PFNGLVERTEXSTREAM2SATIPROC) (GLenum stream, GLshort x, GLshort y);
typedef void (APIENTRYP PFNGLVERTEXSTREAM2SVATIPROC) (GLenum stream, const GLshort *coords);
typedef void (APIENTRYP PFNGLVERTEXSTREAM2IATIPROC) (GLenum stream, GLint x, GLint y);
typedef void (APIENTRYP PFNGLVERTEXSTREAM2IVATIPROC) (GLenum stream, const GLint *coords);
typedef void (APIENTRYP PFNGLVERTEXSTREAM2FATIPROC) (GLenum stream, GLfloat x, GLfloat y);
typedef void (APIENTRYP PFNGLVERTEXSTREAM2FVATIPROC) (GLenum stream, const GLfloat *coords);
typedef void (APIENTRYP PFNGLVERTEXSTREAM2DATIPROC) (GLenum stream, GLdouble x, GLdouble y);
typedef void (APIENTRYP PFNGLVERTEXSTREAM2DVATIPROC) (GLenum stream, const GLdouble *coords);
typedef void (APIENTRYP PFNGLVERTEXSTREAM3SATIPROC) (GLenum stream, GLshort x, GLshort y, GLshort z);
typedef void (APIENTRYP PFNGLVERTEXSTREAM3SVATIPROC) (GLenum stream, const GLshort *coords);
typedef void (APIENTRYP PFNGLVERTEXSTREAM3IATIPROC) (GLenum stream, GLint x, GLint y, GLint z);
typedef void (APIENTRYP PFNGLVERTEXSTREAM3IVATIPROC) (GLenum stream, const GLint *coords);
typedef void (APIENTRYP PFNGLVERTEXSTREAM3FATIPROC) (GLenum stream, GLfloat x, GLfloat y, GLfloat z);
typedef void (APIENTRYP PFNGLVERTEXSTREAM3FVATIPROC) (GLenum stream, const GLfloat *coords);
typedef void (APIENTRYP PFNGLVERTEXSTREAM3DATIPROC) (GLenum stream, GLdouble x, GLdouble y, GLdouble z);
typedef void (APIENTRYP PFNGLVERTEXSTREAM3DVATIPROC) (GLenum stream, const GLdouble *coords);
typedef void (APIENTRYP PFNGLVERTEXSTREAM4SATIPROC) (GLenum stream, GLshort x, GLshort y, GLshort z, GLshort w);
typedef void (APIENTRYP PFNGLVERTEXSTREAM4SVATIPROC) (GLenum stream, const GLshort *coords);
typedef void (APIENTRYP PFNGLVERTEXSTREAM4IATIPROC) (GLenum stream, GLint x, GLint y, GLint z, GLint w);
typedef void (APIENTRYP PFNGLVERTEXSTREAM4IVATIPROC) (GLenum stream, const GLint *coords);
typedef void (APIENTRYP PFNGLVERTEXSTREAM4FATIPROC) (GLenum stream, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
typedef void (APIENTRYP PFNGLVERTEXSTREAM4FVATIPROC) (GLenum stream, const GLfloat *coords);
typedef void (APIENTRYP PFNGLVERTEXSTREAM4DATIPROC) (GLenum stream, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
typedef void (APIENTRYP PFNGLVERTEXSTREAM4DVATIPROC) (GLenum stream, const GLdouble *coords);
typedef void (APIENTRYP PFNGLNORMALSTREAM3BATIPROC) (GLenum stream, GLbyte nx, GLbyte ny, GLbyte nz);
typedef void (APIENTRYP PFNGLNORMALSTREAM3BVATIPROC) (GLenum stream, const GLbyte *coords);
typedef void (APIENTRYP PFNGLNORMALSTREAM3SATIPROC) (GLenum stream, GLshort nx, GLshort ny, GLshort nz);
typedef void (APIENTRYP PFNGLNORMALSTREAM3SVATIPROC) (GLenum stream, const GLshort *coords);
typedef void (APIENTRYP PFNGLNORMALSTREAM3IATIPROC) (GLenum stream, GLint nx, GLint ny, GLint nz);
typedef void (APIENTRYP PFNGLNORMALSTREAM3IVATIPROC) (GLenum stream, const GLint *coords);
typedef void (APIENTRYP PFNGLNORMALSTREAM3FATIPROC) (GLenum stream, GLfloat nx, GLfloat ny, GLfloat nz);
typedef void (APIENTRYP PFNGLNORMALSTREAM3FVATIPROC) (GLenum stream, const GLfloat *coords);
typedef void (APIENTRYP PFNGLNORMALSTREAM3DATIPROC) (GLenum stream, GLdouble nx, GLdouble ny, GLdouble nz);
typedef void (APIENTRYP PFNGLNORMALSTREAM3DVATIPROC) (GLenum stream, const GLdouble *coords);
typedef void (APIENTRYP PFNGLCLIENTACTIVEVERTEXSTREAMATIPROC) (GLenum stream);
typedef void (APIENTRYP PFNGLVERTEXBLENDENVIATIPROC) (GLenum pname, GLint param);
typedef void (APIENTRYP PFNGLVERTEXBLENDENVFATIPROC) (GLenum pname, GLfloat param);
// GL_ATI_vertex_streams

} // namespace GLATI

namespace GLEXT {

// GL_EXT_422_pixels
AXLGLFLAPI bool GL_EXT_422_pixels;
AXLGLFLCONSTMODIFIER GLconstant GL_422_EXT = 0x80CC;
AXLGLFLCONSTMODIFIER GLconstant GL_422_REV_EXT = 0x80CD;
AXLGLFLCONSTMODIFIER GLconstant GL_422_AVERAGE_EXT = 0x80CE;
AXLGLFLCONSTMODIFIER GLconstant GL_422_REV_AVERAGE_EXT = 0x80CF;
// GL_EXT_422_pixels

// GL_EXT_EGL_image_storage
AXLGLFLAPI bool GL_EXT_EGL_image_storage;
typedef void *GLeglImageOES;
typedef void (APIENTRYP PFNGLEGLIMAGETARGETTEXSTORAGEEXTPROC) (GLenum target, GLeglImageOES image, const GLint* attrib_list);
typedef void (APIENTRYP PFNGLEGLIMAGETARGETTEXTURESTORAGEEXTPROC) (GLuint texture, GLeglImageOES image, const GLint* attrib_list);
// GL_EXT_EGL_image_storage

// GL_EXT_EGL_sync
AXLGLFLAPI bool GL_EXT_EGL_sync;
// GL_EXT_EGL_sync

// GL_EXT_abgr
AXLGLFLAPI bool GL_EXT_abgr;
AXLGLFLCONSTMODIFIER GLconstant GL_ABGR_EXT = 0x8000;
// GL_EXT_abgr

// GL_EXT_bgra
AXLGLFLAPI bool GL_EXT_bgra;
AXLGLFLCONSTMODIFIER GLconstant GL_BGR_EXT = 0x80E0;
AXLGLFLCONSTMODIFIER GLconstant GL_BGRA_EXT = 0x80E1;
// GL_EXT_bgra

// GL_EXT_bindable_uniform
AXLGLFLAPI bool GL_EXT_bindable_uniform;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_VERTEX_BINDABLE_UNIFORMS_EXT = 0x8DE2;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_FRAGMENT_BINDABLE_UNIFORMS_EXT = 0x8DE3;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_GEOMETRY_BINDABLE_UNIFORMS_EXT = 0x8DE4;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_BINDABLE_UNIFORM_SIZE_EXT = 0x8DED;
AXLGLFLCONSTMODIFIER GLconstant GL_UNIFORM_BUFFER_EXT = 0x8DEE;
AXLGLFLCONSTMODIFIER GLconstant GL_UNIFORM_BUFFER_BINDING_EXT = 0x8DEF;
typedef void (APIENTRYP PFNGLUNIFORMBUFFEREXTPROC) (GLuint program, GLint location, GLuint buffer);
typedef GLint (APIENTRYP PFNGLGETUNIFORMBUFFERSIZEEXTPROC) (GLuint program, GLint location);
typedef GLintptr (APIENTRYP PFNGLGETUNIFORMOFFSETEXTPROC) (GLuint program, GLint location);
// GL_EXT_bindable_uniform

// GL_EXT_blend_color
AXLGLFLAPI bool GL_EXT_blend_color;
AXLGLFLCONSTMODIFIER GLconstant GL_CONSTANT_COLOR_EXT = 0x8001;
AXLGLFLCONSTMODIFIER GLconstant GL_ONE_MINUS_CONSTANT_COLOR_EXT = 0x8002;
AXLGLFLCONSTMODIFIER GLconstant GL_CONSTANT_ALPHA_EXT = 0x8003;
AXLGLFLCONSTMODIFIER GLconstant GL_ONE_MINUS_CONSTANT_ALPHA_EXT = 0x8004;
AXLGLFLCONSTMODIFIER GLconstant GL_BLEND_COLOR_EXT = 0x8005;
typedef void (APIENTRYP PFNGLBLENDCOLOREXTPROC) (GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
// GL_EXT_blend_color

// GL_EXT_blend_equation_separate
AXLGLFLAPI bool GL_EXT_blend_equation_separate;
AXLGLFLCONSTMODIFIER GLconstant GL_BLEND_EQUATION_RGB_EXT = 0x8009;
AXLGLFLCONSTMODIFIER GLconstant GL_BLEND_EQUATION_ALPHA_EXT = 0x883D;
typedef void (APIENTRYP PFNGLBLENDEQUATIONSEPARATEEXTPROC) (GLenum modeRGB, GLenum modeAlpha);
// GL_EXT_blend_equation_separate

// GL_EXT_blend_func_separate
AXLGLFLAPI bool GL_EXT_blend_func_separate;
AXLGLFLCONSTMODIFIER GLconstant GL_BLEND_DST_RGB_EXT = 0x80C8;
AXLGLFLCONSTMODIFIER GLconstant GL_BLEND_SRC_RGB_EXT = 0x80C9;
AXLGLFLCONSTMODIFIER GLconstant GL_BLEND_DST_ALPHA_EXT = 0x80CA;
AXLGLFLCONSTMODIFIER GLconstant GL_BLEND_SRC_ALPHA_EXT = 0x80CB;
typedef void (APIENTRYP PFNGLBLENDFUNCSEPARATEEXTPROC) (GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha);
// GL_EXT_blend_func_separate

// GL_EXT_blend_logic_op
AXLGLFLAPI bool GL_EXT_blend_logic_op;
// GL_EXT_blend_logic_op

// GL_EXT_blend_minmax
AXLGLFLAPI bool GL_EXT_blend_minmax;
AXLGLFLCONSTMODIFIER GLconstant GL_MIN_EXT = 0x8007;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_EXT = 0x8008;
AXLGLFLCONSTMODIFIER GLconstant GL_FUNC_ADD_EXT = 0x8006;
AXLGLFLCONSTMODIFIER GLconstant GL_BLEND_EQUATION_EXT = 0x8009;
typedef void (APIENTRYP PFNGLBLENDEQUATIONEXTPROC) (GLenum mode);
// GL_EXT_blend_minmax

// GL_EXT_blend_subtract
AXLGLFLAPI bool GL_EXT_blend_subtract;
AXLGLFLCONSTMODIFIER GLconstant GL_FUNC_SUBTRACT_EXT = 0x800A;
AXLGLFLCONSTMODIFIER GLconstant GL_FUNC_REVERSE_SUBTRACT_EXT = 0x800B;
// GL_EXT_blend_subtract

// GL_EXT_clip_volume_hint
AXLGLFLAPI bool GL_EXT_clip_volume_hint;
AXLGLFLCONSTMODIFIER GLconstant GL_CLIP_VOLUME_CLIPPING_HINT_EXT = 0x80F0;
// GL_EXT_clip_volume_hint

// GL_EXT_cmyka
AXLGLFLAPI bool GL_EXT_cmyka;
AXLGLFLCONSTMODIFIER GLconstant GL_CMYK_EXT = 0x800C;
AXLGLFLCONSTMODIFIER GLconstant GL_CMYKA_EXT = 0x800D;
AXLGLFLCONSTMODIFIER GLconstant GL_PACK_CMYK_HINT_EXT = 0x800E;
AXLGLFLCONSTMODIFIER GLconstant GL_UNPACK_CMYK_HINT_EXT = 0x800F;
// GL_EXT_cmyka

// GL_EXT_color_subtable
AXLGLFLAPI bool GL_EXT_color_subtable;
typedef void (APIENTRYP PFNGLCOLORSUBTABLEEXTPROC) (GLenum target, GLsizei start, GLsizei count, GLenum format, GLenum type, const void *data);
typedef void (APIENTRYP PFNGLCOPYCOLORSUBTABLEEXTPROC) (GLenum target, GLsizei start, GLint x, GLint y, GLsizei width);
// GL_EXT_color_subtable

// GL_EXT_compiled_vertex_array
AXLGLFLAPI bool GL_EXT_compiled_vertex_array;
AXLGLFLCONSTMODIFIER GLconstant GL_ARRAY_ELEMENT_LOCK_FIRST_EXT = 0x81A8;
AXLGLFLCONSTMODIFIER GLconstant GL_ARRAY_ELEMENT_LOCK_COUNT_EXT = 0x81A9;
typedef void (APIENTRYP PFNGLLOCKARRAYSEXTPROC) (GLint first, GLsizei count);
typedef void (APIENTRYP PFNGLUNLOCKARRAYSEXTPROC) (void);
// GL_EXT_compiled_vertex_array

// GL_EXT_convolution
AXLGLFLAPI bool GL_EXT_convolution;
AXLGLFLCONSTMODIFIER GLconstant GL_CONVOLUTION_1D_EXT = 0x8010;
AXLGLFLCONSTMODIFIER GLconstant GL_CONVOLUTION_2D_EXT = 0x8011;
AXLGLFLCONSTMODIFIER GLconstant GL_SEPARABLE_2D_EXT = 0x8012;
AXLGLFLCONSTMODIFIER GLconstant GL_CONVOLUTION_BORDER_MODE_EXT = 0x8013;
AXLGLFLCONSTMODIFIER GLconstant GL_CONVOLUTION_FILTER_SCALE_EXT = 0x8014;
AXLGLFLCONSTMODIFIER GLconstant GL_CONVOLUTION_FILTER_BIAS_EXT = 0x8015;
AXLGLFLCONSTMODIFIER GLconstant GL_REDUCE_EXT = 0x8016;
AXLGLFLCONSTMODIFIER GLconstant GL_CONVOLUTION_FORMAT_EXT = 0x8017;
AXLGLFLCONSTMODIFIER GLconstant GL_CONVOLUTION_WIDTH_EXT = 0x8018;
AXLGLFLCONSTMODIFIER GLconstant GL_CONVOLUTION_HEIGHT_EXT = 0x8019;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_CONVOLUTION_WIDTH_EXT = 0x801A;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_CONVOLUTION_HEIGHT_EXT = 0x801B;
AXLGLFLCONSTMODIFIER GLconstant GL_POST_CONVOLUTION_RED_SCALE_EXT = 0x801C;
AXLGLFLCONSTMODIFIER GLconstant GL_POST_CONVOLUTION_GREEN_SCALE_EXT = 0x801D;
AXLGLFLCONSTMODIFIER GLconstant GL_POST_CONVOLUTION_BLUE_SCALE_EXT = 0x801E;
AXLGLFLCONSTMODIFIER GLconstant GL_POST_CONVOLUTION_ALPHA_SCALE_EXT = 0x801F;
AXLGLFLCONSTMODIFIER GLconstant GL_POST_CONVOLUTION_RED_BIAS_EXT = 0x8020;
AXLGLFLCONSTMODIFIER GLconstant GL_POST_CONVOLUTION_GREEN_BIAS_EXT = 0x8021;
AXLGLFLCONSTMODIFIER GLconstant GL_POST_CONVOLUTION_BLUE_BIAS_EXT = 0x8022;
AXLGLFLCONSTMODIFIER GLconstant GL_POST_CONVOLUTION_ALPHA_BIAS_EXT = 0x8023;
typedef void (APIENTRYP PFNGLCONVOLUTIONFILTER1DEXTPROC) (GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const void *image);
typedef void (APIENTRYP PFNGLCONVOLUTIONFILTER2DEXTPROC) (GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *image);
typedef void (APIENTRYP PFNGLCONVOLUTIONPARAMETERFEXTPROC) (GLenum target, GLenum pname, GLfloat params);
typedef void (APIENTRYP PFNGLCONVOLUTIONPARAMETERFVEXTPROC) (GLenum target, GLenum pname, const GLfloat *params);
typedef void (APIENTRYP PFNGLCONVOLUTIONPARAMETERIEXTPROC) (GLenum target, GLenum pname, GLint params);
typedef void (APIENTRYP PFNGLCONVOLUTIONPARAMETERIVEXTPROC) (GLenum target, GLenum pname, const GLint *params);
typedef void (APIENTRYP PFNGLCOPYCONVOLUTIONFILTER1DEXTPROC) (GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width);
typedef void (APIENTRYP PFNGLCOPYCONVOLUTIONFILTER2DEXTPROC) (GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height);
typedef void (APIENTRYP PFNGLGETCONVOLUTIONFILTEREXTPROC) (GLenum target, GLenum format, GLenum type, void *image);
typedef void (APIENTRYP PFNGLGETCONVOLUTIONPARAMETERFVEXTPROC) (GLenum target, GLenum pname, GLfloat *params);
typedef void (APIENTRYP PFNGLGETCONVOLUTIONPARAMETERIVEXTPROC) (GLenum target, GLenum pname, GLint *params);
typedef void (APIENTRYP PFNGLGETSEPARABLEFILTEREXTPROC) (GLenum target, GLenum format, GLenum type, void *row, void *column, void *span);
typedef void (APIENTRYP PFNGLSEPARABLEFILTER2DEXTPROC) (GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *row, const void *column);
// GL_EXT_convolution

// GL_EXT_coordinate_frame
AXLGLFLAPI bool GL_EXT_coordinate_frame;
AXLGLFLCONSTMODIFIER GLconstant GL_TANGENT_ARRAY_EXT = 0x8439;
AXLGLFLCONSTMODIFIER GLconstant GL_BINORMAL_ARRAY_EXT = 0x843A;
AXLGLFLCONSTMODIFIER GLconstant GL_CURRENT_TANGENT_EXT = 0x843B;
AXLGLFLCONSTMODIFIER GLconstant GL_CURRENT_BINORMAL_EXT = 0x843C;
AXLGLFLCONSTMODIFIER GLconstant GL_TANGENT_ARRAY_TYPE_EXT = 0x843E;
AXLGLFLCONSTMODIFIER GLconstant GL_TANGENT_ARRAY_STRIDE_EXT = 0x843F;
AXLGLFLCONSTMODIFIER GLconstant GL_BINORMAL_ARRAY_TYPE_EXT = 0x8440;
AXLGLFLCONSTMODIFIER GLconstant GL_BINORMAL_ARRAY_STRIDE_EXT = 0x8441;
AXLGLFLCONSTMODIFIER GLconstant GL_TANGENT_ARRAY_POINTER_EXT = 0x8442;
AXLGLFLCONSTMODIFIER GLconstant GL_BINORMAL_ARRAY_POINTER_EXT = 0x8443;
AXLGLFLCONSTMODIFIER GLconstant GL_MAP1_TANGENT_EXT = 0x8444;
AXLGLFLCONSTMODIFIER GLconstant GL_MAP2_TANGENT_EXT = 0x8445;
AXLGLFLCONSTMODIFIER GLconstant GL_MAP1_BINORMAL_EXT = 0x8446;
AXLGLFLCONSTMODIFIER GLconstant GL_MAP2_BINORMAL_EXT = 0x8447;
typedef void (APIENTRYP PFNGLTANGENT3BEXTPROC) (GLbyte tx, GLbyte ty, GLbyte tz);
typedef void (APIENTRYP PFNGLTANGENT3BVEXTPROC) (const GLbyte *v);
typedef void (APIENTRYP PFNGLTANGENT3DEXTPROC) (GLdouble tx, GLdouble ty, GLdouble tz);
typedef void (APIENTRYP PFNGLTANGENT3DVEXTPROC) (const GLdouble *v);
typedef void (APIENTRYP PFNGLTANGENT3FEXTPROC) (GLfloat tx, GLfloat ty, GLfloat tz);
typedef void (APIENTRYP PFNGLTANGENT3FVEXTPROC) (const GLfloat *v);
typedef void (APIENTRYP PFNGLTANGENT3IEXTPROC) (GLint tx, GLint ty, GLint tz);
typedef void (APIENTRYP PFNGLTANGENT3IVEXTPROC) (const GLint *v);
typedef void (APIENTRYP PFNGLTANGENT3SEXTPROC) (GLshort tx, GLshort ty, GLshort tz);
typedef void (APIENTRYP PFNGLTANGENT3SVEXTPROC) (const GLshort *v);
typedef void (APIENTRYP PFNGLBINORMAL3BEXTPROC) (GLbyte bx, GLbyte by, GLbyte bz);
typedef void (APIENTRYP PFNGLBINORMAL3BVEXTPROC) (const GLbyte *v);
typedef void (APIENTRYP PFNGLBINORMAL3DEXTPROC) (GLdouble bx, GLdouble by, GLdouble bz);
typedef void (APIENTRYP PFNGLBINORMAL3DVEXTPROC) (const GLdouble *v);
typedef void (APIENTRYP PFNGLBINORMAL3FEXTPROC) (GLfloat bx, GLfloat by, GLfloat bz);
typedef void (APIENTRYP PFNGLBINORMAL3FVEXTPROC) (const GLfloat *v);
typedef void (APIENTRYP PFNGLBINORMAL3IEXTPROC) (GLint bx, GLint by, GLint bz);
typedef void (APIENTRYP PFNGLBINORMAL3IVEXTPROC) (const GLint *v);
typedef void (APIENTRYP PFNGLBINORMAL3SEXTPROC) (GLshort bx, GLshort by, GLshort bz);
typedef void (APIENTRYP PFNGLBINORMAL3SVEXTPROC) (const GLshort *v);
typedef void (APIENTRYP PFNGLTANGENTPOINTEREXTPROC) (GLenum type, GLsizei stride, const void *pointer);
typedef void (APIENTRYP PFNGLBINORMALPOINTEREXTPROC) (GLenum type, GLsizei stride, const void *pointer);
// GL_EXT_coordinate_frame

// GL_EXT_copy_texture
AXLGLFLAPI bool GL_EXT_copy_texture;
typedef void (APIENTRYP PFNGLCOPYTEXIMAGE1DEXTPROC) (GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border);
typedef void (APIENTRYP PFNGLCOPYTEXIMAGE2DEXTPROC) (GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border);
typedef void (APIENTRYP PFNGLCOPYTEXSUBIMAGE1DEXTPROC) (GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);
typedef void (APIENTRYP PFNGLCOPYTEXSUBIMAGE2DEXTPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);
typedef void (APIENTRYP PFNGLCOPYTEXSUBIMAGE3DEXTPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);
// GL_EXT_copy_texture

// GL_EXT_cull_vertex
AXLGLFLAPI bool GL_EXT_cull_vertex;
AXLGLFLCONSTMODIFIER GLconstant GL_CULL_VERTEX_EXT = 0x81AA;
AXLGLFLCONSTMODIFIER GLconstant GL_CULL_VERTEX_EYE_POSITION_EXT = 0x81AB;
AXLGLFLCONSTMODIFIER GLconstant GL_CULL_VERTEX_OBJECT_POSITION_EXT = 0x81AC;
typedef void (APIENTRYP PFNGLCULLPARAMETERDVEXTPROC) (GLenum pname, GLdouble *params);
typedef void (APIENTRYP PFNGLCULLPARAMETERFVEXTPROC) (GLenum pname, GLfloat *params);
// GL_EXT_cull_vertex

// GL_EXT_debug_label
AXLGLFLAPI bool GL_EXT_debug_label;
AXLGLFLCONSTMODIFIER GLconstant GL_PROGRAM_PIPELINE_OBJECT_EXT = 0x8A4F;
AXLGLFLCONSTMODIFIER GLconstant GL_PROGRAM_OBJECT_EXT = 0x8B40;
AXLGLFLCONSTMODIFIER GLconstant GL_SHADER_OBJECT_EXT = 0x8B48;
AXLGLFLCONSTMODIFIER GLconstant GL_BUFFER_OBJECT_EXT = 0x9151;
AXLGLFLCONSTMODIFIER GLconstant GL_QUERY_OBJECT_EXT = 0x9153;
AXLGLFLCONSTMODIFIER GLconstant GL_VERTEX_ARRAY_OBJECT_EXT = 0x9154;
typedef void (APIENTRYP PFNGLLABELOBJECTEXTPROC) (GLenum type, GLuint object, GLsizei length, const GLchar *label);
typedef void (APIENTRYP PFNGLGETOBJECTLABELEXTPROC) (GLenum type, GLuint object, GLsizei bufSize, GLsizei *length, GLchar *label);
// GL_EXT_debug_label

// GL_EXT_debug_marker
AXLGLFLAPI bool GL_EXT_debug_marker;
typedef void (APIENTRYP PFNGLINSERTEVENTMARKEREXTPROC) (GLsizei length, const GLchar *marker);
typedef void (APIENTRYP PFNGLPUSHGROUPMARKEREXTPROC) (GLsizei length, const GLchar *marker);
typedef void (APIENTRYP PFNGLPOPGROUPMARKEREXTPROC) (void);
// GL_EXT_debug_marker

// GL_EXT_depth_bounds_test
AXLGLFLAPI bool GL_EXT_depth_bounds_test;
AXLGLFLCONSTMODIFIER GLconstant GL_DEPTH_BOUNDS_TEST_EXT = 0x8890;
AXLGLFLCONSTMODIFIER GLconstant GL_DEPTH_BOUNDS_EXT = 0x8891;
typedef void (APIENTRYP PFNGLDEPTHBOUNDSEXTPROC) (GLclampd zmin, GLclampd zmax);
// GL_EXT_depth_bounds_test

// GL_EXT_direct_state_access
AXLGLFLAPI bool GL_EXT_direct_state_access;
AXLGLFLCONSTMODIFIER GLconstant GL_PROGRAM_MATRIX_EXT = 0x8E2D;
AXLGLFLCONSTMODIFIER GLconstant GL_TRANSPOSE_PROGRAM_MATRIX_EXT = 0x8E2E;
AXLGLFLCONSTMODIFIER GLconstant GL_PROGRAM_MATRIX_STACK_DEPTH_EXT = 0x8E2F;
typedef void (APIENTRYP PFNGLMATRIXLOADFEXTPROC) (GLenum mode, const GLfloat *m);
typedef void (APIENTRYP PFNGLMATRIXLOADDEXTPROC) (GLenum mode, const GLdouble *m);
typedef void (APIENTRYP PFNGLMATRIXMULTFEXTPROC) (GLenum mode, const GLfloat *m);
typedef void (APIENTRYP PFNGLMATRIXMULTDEXTPROC) (GLenum mode, const GLdouble *m);
typedef void (APIENTRYP PFNGLMATRIXLOADIDENTITYEXTPROC) (GLenum mode);
typedef void (APIENTRYP PFNGLMATRIXROTATEFEXTPROC) (GLenum mode, GLfloat angle, GLfloat x, GLfloat y, GLfloat z);
typedef void (APIENTRYP PFNGLMATRIXROTATEDEXTPROC) (GLenum mode, GLdouble angle, GLdouble x, GLdouble y, GLdouble z);
typedef void (APIENTRYP PFNGLMATRIXSCALEFEXTPROC) (GLenum mode, GLfloat x, GLfloat y, GLfloat z);
typedef void (APIENTRYP PFNGLMATRIXSCALEDEXTPROC) (GLenum mode, GLdouble x, GLdouble y, GLdouble z);
typedef void (APIENTRYP PFNGLMATRIXTRANSLATEFEXTPROC) (GLenum mode, GLfloat x, GLfloat y, GLfloat z);
typedef void (APIENTRYP PFNGLMATRIXTRANSLATEDEXTPROC) (GLenum mode, GLdouble x, GLdouble y, GLdouble z);
typedef void (APIENTRYP PFNGLMATRIXFRUSTUMEXTPROC) (GLenum mode, GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar);
typedef void (APIENTRYP PFNGLMATRIXORTHOEXTPROC) (GLenum mode, GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar);
typedef void (APIENTRYP PFNGLMATRIXPOPEXTPROC) (GLenum mode);
typedef void (APIENTRYP PFNGLMATRIXPUSHEXTPROC) (GLenum mode);
typedef void (APIENTRYP PFNGLCLIENTATTRIBDEFAULTEXTPROC) (GLbitfield mask);
typedef void (APIENTRYP PFNGLPUSHCLIENTATTRIBDEFAULTEXTPROC) (GLbitfield mask);
typedef void (APIENTRYP PFNGLTEXTUREPARAMETERFEXTPROC) (GLuint texture, GLenum target, GLenum pname, GLfloat param);
typedef void (APIENTRYP PFNGLTEXTUREPARAMETERFVEXTPROC) (GLuint texture, GLenum target, GLenum pname, const GLfloat *params);
typedef void (APIENTRYP PFNGLTEXTUREPARAMETERIEXTPROC) (GLuint texture, GLenum target, GLenum pname, GLint param);
typedef void (APIENTRYP PFNGLTEXTUREPARAMETERIVEXTPROC) (GLuint texture, GLenum target, GLenum pname, const GLint *params);
typedef void (APIENTRYP PFNGLTEXTUREIMAGE1DEXTPROC) (GLuint texture, GLenum target, GLint level, GLint internalformat, GLsizei width, GLint border, GLenum format, GLenum type, const void *pixels);
typedef void (APIENTRYP PFNGLTEXTUREIMAGE2DEXTPROC) (GLuint texture, GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const void *pixels);
typedef void (APIENTRYP PFNGLTEXTURESUBIMAGE1DEXTPROC) (GLuint texture, GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const void *pixels);
typedef void (APIENTRYP PFNGLTEXTURESUBIMAGE2DEXTPROC) (GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *pixels);
typedef void (APIENTRYP PFNGLCOPYTEXTUREIMAGE1DEXTPROC) (GLuint texture, GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border);
typedef void (APIENTRYP PFNGLCOPYTEXTUREIMAGE2DEXTPROC) (GLuint texture, GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border);
typedef void (APIENTRYP PFNGLCOPYTEXTURESUBIMAGE1DEXTPROC) (GLuint texture, GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);
typedef void (APIENTRYP PFNGLCOPYTEXTURESUBIMAGE2DEXTPROC) (GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);
typedef void (APIENTRYP PFNGLGETTEXTUREIMAGEEXTPROC) (GLuint texture, GLenum target, GLint level, GLenum format, GLenum type, void *pixels);
typedef void (APIENTRYP PFNGLGETTEXTUREPARAMETERFVEXTPROC) (GLuint texture, GLenum target, GLenum pname, GLfloat *params);
typedef void (APIENTRYP PFNGLGETTEXTUREPARAMETERIVEXTPROC) (GLuint texture, GLenum target, GLenum pname, GLint *params);
typedef void (APIENTRYP PFNGLGETTEXTURELEVELPARAMETERFVEXTPROC) (GLuint texture, GLenum target, GLint level, GLenum pname, GLfloat *params);
typedef void (APIENTRYP PFNGLGETTEXTURELEVELPARAMETERIVEXTPROC) (GLuint texture, GLenum target, GLint level, GLenum pname, GLint *params);
typedef void (APIENTRYP PFNGLTEXTUREIMAGE3DEXTPROC) (GLuint texture, GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const void *pixels);
typedef void (APIENTRYP PFNGLTEXTURESUBIMAGE3DEXTPROC) (GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void *pixels);
typedef void (APIENTRYP PFNGLCOPYTEXTURESUBIMAGE3DEXTPROC) (GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);
typedef void (APIENTRYP PFNGLBINDMULTITEXTUREEXTPROC) (GLenum texunit, GLenum target, GLuint texture);
typedef void (APIENTRYP PFNGLMULTITEXCOORDPOINTEREXTPROC) (GLenum texunit, GLint size, GLenum type, GLsizei stride, const void *pointer);
typedef void (APIENTRYP PFNGLMULTITEXENVFEXTPROC) (GLenum texunit, GLenum target, GLenum pname, GLfloat param);
typedef void (APIENTRYP PFNGLMULTITEXENVFVEXTPROC) (GLenum texunit, GLenum target, GLenum pname, const GLfloat *params);
typedef void (APIENTRYP PFNGLMULTITEXENVIEXTPROC) (GLenum texunit, GLenum target, GLenum pname, GLint param);
typedef void (APIENTRYP PFNGLMULTITEXENVIVEXTPROC) (GLenum texunit, GLenum target, GLenum pname, const GLint *params);
typedef void (APIENTRYP PFNGLMULTITEXGENDEXTPROC) (GLenum texunit, GLenum coord, GLenum pname, GLdouble param);
typedef void (APIENTRYP PFNGLMULTITEXGENDVEXTPROC) (GLenum texunit, GLenum coord, GLenum pname, const GLdouble *params);
typedef void (APIENTRYP PFNGLMULTITEXGENFEXTPROC) (GLenum texunit, GLenum coord, GLenum pname, GLfloat param);
typedef void (APIENTRYP PFNGLMULTITEXGENFVEXTPROC) (GLenum texunit, GLenum coord, GLenum pname, const GLfloat *params);
typedef void (APIENTRYP PFNGLMULTITEXGENIEXTPROC) (GLenum texunit, GLenum coord, GLenum pname, GLint param);
typedef void (APIENTRYP PFNGLMULTITEXGENIVEXTPROC) (GLenum texunit, GLenum coord, GLenum pname, const GLint *params);
typedef void (APIENTRYP PFNGLGETMULTITEXENVFVEXTPROC) (GLenum texunit, GLenum target, GLenum pname, GLfloat *params);
typedef void (APIENTRYP PFNGLGETMULTITEXENVIVEXTPROC) (GLenum texunit, GLenum target, GLenum pname, GLint *params);
typedef void (APIENTRYP PFNGLGETMULTITEXGENDVEXTPROC) (GLenum texunit, GLenum coord, GLenum pname, GLdouble *params);
typedef void (APIENTRYP PFNGLGETMULTITEXGENFVEXTPROC) (GLenum texunit, GLenum coord, GLenum pname, GLfloat *params);
typedef void (APIENTRYP PFNGLGETMULTITEXGENIVEXTPROC) (GLenum texunit, GLenum coord, GLenum pname, GLint *params);
typedef void (APIENTRYP PFNGLMULTITEXPARAMETERIEXTPROC) (GLenum texunit, GLenum target, GLenum pname, GLint param);
typedef void (APIENTRYP PFNGLMULTITEXPARAMETERIVEXTPROC) (GLenum texunit, GLenum target, GLenum pname, const GLint *params);
typedef void (APIENTRYP PFNGLMULTITEXPARAMETERFEXTPROC) (GLenum texunit, GLenum target, GLenum pname, GLfloat param);
typedef void (APIENTRYP PFNGLMULTITEXPARAMETERFVEXTPROC) (GLenum texunit, GLenum target, GLenum pname, const GLfloat *params);
typedef void (APIENTRYP PFNGLMULTITEXIMAGE1DEXTPROC) (GLenum texunit, GLenum target, GLint level, GLint internalformat, GLsizei width, GLint border, GLenum format, GLenum type, const void *pixels);
typedef void (APIENTRYP PFNGLMULTITEXIMAGE2DEXTPROC) (GLenum texunit, GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const void *pixels);
typedef void (APIENTRYP PFNGLMULTITEXSUBIMAGE1DEXTPROC) (GLenum texunit, GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const void *pixels);
typedef void (APIENTRYP PFNGLMULTITEXSUBIMAGE2DEXTPROC) (GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *pixels);
typedef void (APIENTRYP PFNGLCOPYMULTITEXIMAGE1DEXTPROC) (GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border);
typedef void (APIENTRYP PFNGLCOPYMULTITEXIMAGE2DEXTPROC) (GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border);
typedef void (APIENTRYP PFNGLCOPYMULTITEXSUBIMAGE1DEXTPROC) (GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);
typedef void (APIENTRYP PFNGLCOPYMULTITEXSUBIMAGE2DEXTPROC) (GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);
typedef void (APIENTRYP PFNGLGETMULTITEXIMAGEEXTPROC) (GLenum texunit, GLenum target, GLint level, GLenum format, GLenum type, void *pixels);
typedef void (APIENTRYP PFNGLGETMULTITEXPARAMETERFVEXTPROC) (GLenum texunit, GLenum target, GLenum pname, GLfloat *params);
typedef void (APIENTRYP PFNGLGETMULTITEXPARAMETERIVEXTPROC) (GLenum texunit, GLenum target, GLenum pname, GLint *params);
typedef void (APIENTRYP PFNGLGETMULTITEXLEVELPARAMETERFVEXTPROC) (GLenum texunit, GLenum target, GLint level, GLenum pname, GLfloat *params);
typedef void (APIENTRYP PFNGLGETMULTITEXLEVELPARAMETERIVEXTPROC) (GLenum texunit, GLenum target, GLint level, GLenum pname, GLint *params);
typedef void (APIENTRYP PFNGLMULTITEXIMAGE3DEXTPROC) (GLenum texunit, GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const void *pixels);
typedef void (APIENTRYP PFNGLMULTITEXSUBIMAGE3DEXTPROC) (GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void *pixels);
typedef void (APIENTRYP PFNGLCOPYMULTITEXSUBIMAGE3DEXTPROC) (GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);
typedef void (APIENTRYP PFNGLENABLECLIENTSTATEINDEXEDEXTPROC) (GLenum array, GLuint index);
typedef void (APIENTRYP PFNGLDISABLECLIENTSTATEINDEXEDEXTPROC) (GLenum array, GLuint index);
typedef void (APIENTRYP PFNGLGETFLOATINDEXEDVEXTPROC) (GLenum target, GLuint index, GLfloat *data);
typedef void (APIENTRYP PFNGLGETDOUBLEINDEXEDVEXTPROC) (GLenum target, GLuint index, GLdouble *data);
typedef void (APIENTRYP PFNGLGETPOINTERINDEXEDVEXTPROC) (GLenum target, GLuint index, void **data);
typedef void (APIENTRYP PFNGLENABLEINDEXEDEXTPROC) (GLenum target, GLuint index);
typedef void (APIENTRYP PFNGLDISABLEINDEXEDEXTPROC) (GLenum target, GLuint index);
typedef GLboolean (APIENTRYP PFNGLISENABLEDINDEXEDEXTPROC) (GLenum target, GLuint index);
typedef void (APIENTRYP PFNGLGETINTEGERINDEXEDVEXTPROC) (GLenum target, GLuint index, GLint *data);
typedef void (APIENTRYP PFNGLGETBOOLEANINDEXEDVEXTPROC) (GLenum target, GLuint index, GLboolean *data);
typedef void (APIENTRYP PFNGLCOMPRESSEDTEXTUREIMAGE3DEXTPROC) (GLuint texture, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const void *bits);
typedef void (APIENTRYP PFNGLCOMPRESSEDTEXTUREIMAGE2DEXTPROC) (GLuint texture, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const void *bits);
typedef void (APIENTRYP PFNGLCOMPRESSEDTEXTUREIMAGE1DEXTPROC) (GLuint texture, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const void *bits);
typedef void (APIENTRYP PFNGLCOMPRESSEDTEXTURESUBIMAGE3DEXTPROC) (GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void *bits);
typedef void (APIENTRYP PFNGLCOMPRESSEDTEXTURESUBIMAGE2DEXTPROC) (GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void *bits);
typedef void (APIENTRYP PFNGLCOMPRESSEDTEXTURESUBIMAGE1DEXTPROC) (GLuint texture, GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void *bits);
typedef void (APIENTRYP PFNGLGETCOMPRESSEDTEXTUREIMAGEEXTPROC) (GLuint texture, GLenum target, GLint lod, void *img);
typedef void (APIENTRYP PFNGLCOMPRESSEDMULTITEXIMAGE3DEXTPROC) (GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const void *bits);
typedef void (APIENTRYP PFNGLCOMPRESSEDMULTITEXIMAGE2DEXTPROC) (GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const void *bits);
typedef void (APIENTRYP PFNGLCOMPRESSEDMULTITEXIMAGE1DEXTPROC) (GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const void *bits);
typedef void (APIENTRYP PFNGLCOMPRESSEDMULTITEXSUBIMAGE3DEXTPROC) (GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void *bits);
typedef void (APIENTRYP PFNGLCOMPRESSEDMULTITEXSUBIMAGE2DEXTPROC) (GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void *bits);
typedef void (APIENTRYP PFNGLCOMPRESSEDMULTITEXSUBIMAGE1DEXTPROC) (GLenum texunit, GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void *bits);
typedef void (APIENTRYP PFNGLGETCOMPRESSEDMULTITEXIMAGEEXTPROC) (GLenum texunit, GLenum target, GLint lod, void *img);
typedef void (APIENTRYP PFNGLMATRIXLOADTRANSPOSEFEXTPROC) (GLenum mode, const GLfloat *m);
typedef void (APIENTRYP PFNGLMATRIXLOADTRANSPOSEDEXTPROC) (GLenum mode, const GLdouble *m);
typedef void (APIENTRYP PFNGLMATRIXMULTTRANSPOSEFEXTPROC) (GLenum mode, const GLfloat *m);
typedef void (APIENTRYP PFNGLMATRIXMULTTRANSPOSEDEXTPROC) (GLenum mode, const GLdouble *m);
typedef void (APIENTRYP PFNGLNAMEDBUFFERDATAEXTPROC) (GLuint buffer, GLsizeiptr size, const void *data, GLenum usage);
typedef void (APIENTRYP PFNGLNAMEDBUFFERSUBDATAEXTPROC) (GLuint buffer, GLintptr offset, GLsizeiptr size, const void *data);
typedef void *(APIENTRYP PFNGLMAPNAMEDBUFFEREXTPROC) (GLuint buffer, GLenum access);
typedef GLboolean (APIENTRYP PFNGLUNMAPNAMEDBUFFEREXTPROC) (GLuint buffer);
typedef void (APIENTRYP PFNGLGETNAMEDBUFFERPARAMETERIVEXTPROC) (GLuint buffer, GLenum pname, GLint *params);
typedef void (APIENTRYP PFNGLGETNAMEDBUFFERPOINTERVEXTPROC) (GLuint buffer, GLenum pname, void **params);
typedef void (APIENTRYP PFNGLGETNAMEDBUFFERSUBDATAEXTPROC) (GLuint buffer, GLintptr offset, GLsizeiptr size, void *data);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1FEXTPROC) (GLuint program, GLint location, GLfloat v0);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2FEXTPROC) (GLuint program, GLint location, GLfloat v0, GLfloat v1);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3FEXTPROC) (GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4FEXTPROC) (GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1IEXTPROC) (GLuint program, GLint location, GLint v0);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2IEXTPROC) (GLuint program, GLint location, GLint v0, GLint v1);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3IEXTPROC) (GLuint program, GLint location, GLint v0, GLint v1, GLint v2);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4IEXTPROC) (GLuint program, GLint location, GLint v0, GLint v1, GLint v2, GLint v3);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1FVEXTPROC) (GLuint program, GLint location, GLsizei count, const GLfloat *value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2FVEXTPROC) (GLuint program, GLint location, GLsizei count, const GLfloat *value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3FVEXTPROC) (GLuint program, GLint location, GLsizei count, const GLfloat *value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4FVEXTPROC) (GLuint program, GLint location, GLsizei count, const GLfloat *value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1IVEXTPROC) (GLuint program, GLint location, GLsizei count, const GLint *value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2IVEXTPROC) (GLuint program, GLint location, GLsizei count, const GLint *value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3IVEXTPROC) (GLuint program, GLint location, GLsizei count, const GLint *value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4IVEXTPROC) (GLuint program, GLint location, GLsizei count, const GLint *value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2FVEXTPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3FVEXTPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4FVEXTPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2X3FVEXTPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3X2FVEXTPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2X4FVEXTPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4X2FVEXTPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3X4FVEXTPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4X3FVEXTPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
typedef void (APIENTRYP PFNGLTEXTUREBUFFEREXTPROC) (GLuint texture, GLenum target, GLenum internalformat, GLuint buffer);
typedef void (APIENTRYP PFNGLMULTITEXBUFFEREXTPROC) (GLenum texunit, GLenum target, GLenum internalformat, GLuint buffer);
typedef void (APIENTRYP PFNGLTEXTUREPARAMETERIIVEXTPROC) (GLuint texture, GLenum target, GLenum pname, const GLint *params);
typedef void (APIENTRYP PFNGLTEXTUREPARAMETERIUIVEXTPROC) (GLuint texture, GLenum target, GLenum pname, const GLuint *params);
typedef void (APIENTRYP PFNGLGETTEXTUREPARAMETERIIVEXTPROC) (GLuint texture, GLenum target, GLenum pname, GLint *params);
typedef void (APIENTRYP PFNGLGETTEXTUREPARAMETERIUIVEXTPROC) (GLuint texture, GLenum target, GLenum pname, GLuint *params);
typedef void (APIENTRYP PFNGLMULTITEXPARAMETERIIVEXTPROC) (GLenum texunit, GLenum target, GLenum pname, const GLint *params);
typedef void (APIENTRYP PFNGLMULTITEXPARAMETERIUIVEXTPROC) (GLenum texunit, GLenum target, GLenum pname, const GLuint *params);
typedef void (APIENTRYP PFNGLGETMULTITEXPARAMETERIIVEXTPROC) (GLenum texunit, GLenum target, GLenum pname, GLint *params);
typedef void (APIENTRYP PFNGLGETMULTITEXPARAMETERIUIVEXTPROC) (GLenum texunit, GLenum target, GLenum pname, GLuint *params);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1UIEXTPROC) (GLuint program, GLint location, GLuint v0);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2UIEXTPROC) (GLuint program, GLint location, GLuint v0, GLuint v1);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3UIEXTPROC) (GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4UIEXTPROC) (GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1UIVEXTPROC) (GLuint program, GLint location, GLsizei count, const GLuint *value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2UIVEXTPROC) (GLuint program, GLint location, GLsizei count, const GLuint *value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3UIVEXTPROC) (GLuint program, GLint location, GLsizei count, const GLuint *value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4UIVEXTPROC) (GLuint program, GLint location, GLsizei count, const GLuint *value);
typedef void (APIENTRYP PFNGLNAMEDPROGRAMLOCALPARAMETERS4FVEXTPROC) (GLuint program, GLenum target, GLuint index, GLsizei count, const GLfloat *params);
typedef void (APIENTRYP PFNGLNAMEDPROGRAMLOCALPARAMETERI4IEXTPROC) (GLuint program, GLenum target, GLuint index, GLint x, GLint y, GLint z, GLint w);
typedef void (APIENTRYP PFNGLNAMEDPROGRAMLOCALPARAMETERI4IVEXTPROC) (GLuint program, GLenum target, GLuint index, const GLint *params);
typedef void (APIENTRYP PFNGLNAMEDPROGRAMLOCALPARAMETERSI4IVEXTPROC) (GLuint program, GLenum target, GLuint index, GLsizei count, const GLint *params);
typedef void (APIENTRYP PFNGLNAMEDPROGRAMLOCALPARAMETERI4UIEXTPROC) (GLuint program, GLenum target, GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);
typedef void (APIENTRYP PFNGLNAMEDPROGRAMLOCALPARAMETERI4UIVEXTPROC) (GLuint program, GLenum target, GLuint index, const GLuint *params);
typedef void (APIENTRYP PFNGLNAMEDPROGRAMLOCALPARAMETERSI4UIVEXTPROC) (GLuint program, GLenum target, GLuint index, GLsizei count, const GLuint *params);
typedef void (APIENTRYP PFNGLGETNAMEDPROGRAMLOCALPARAMETERIIVEXTPROC) (GLuint program, GLenum target, GLuint index, GLint *params);
typedef void (APIENTRYP PFNGLGETNAMEDPROGRAMLOCALPARAMETERIUIVEXTPROC) (GLuint program, GLenum target, GLuint index, GLuint *params);
typedef void (APIENTRYP PFNGLENABLECLIENTSTATEIEXTPROC) (GLenum array, GLuint index);
typedef void (APIENTRYP PFNGLDISABLECLIENTSTATEIEXTPROC) (GLenum array, GLuint index);
typedef void (APIENTRYP PFNGLGETFLOATI_VEXTPROC) (GLenum pname, GLuint index, GLfloat *params);
typedef void (APIENTRYP PFNGLGETDOUBLEI_VEXTPROC) (GLenum pname, GLuint index, GLdouble *params);
typedef void (APIENTRYP PFNGLGETPOINTERI_VEXTPROC) (GLenum pname, GLuint index, void **params);
typedef void (APIENTRYP PFNGLNAMEDPROGRAMSTRINGEXTPROC) (GLuint program, GLenum target, GLenum format, GLsizei len, const void *string);
typedef void (APIENTRYP PFNGLNAMEDPROGRAMLOCALPARAMETER4DEXTPROC) (GLuint program, GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
typedef void (APIENTRYP PFNGLNAMEDPROGRAMLOCALPARAMETER4DVEXTPROC) (GLuint program, GLenum target, GLuint index, const GLdouble *params);
typedef void (APIENTRYP PFNGLNAMEDPROGRAMLOCALPARAMETER4FEXTPROC) (GLuint program, GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
typedef void (APIENTRYP PFNGLNAMEDPROGRAMLOCALPARAMETER4FVEXTPROC) (GLuint program, GLenum target, GLuint index, const GLfloat *params);
typedef void (APIENTRYP PFNGLGETNAMEDPROGRAMLOCALPARAMETERDVEXTPROC) (GLuint program, GLenum target, GLuint index, GLdouble *params);
typedef void (APIENTRYP PFNGLGETNAMEDPROGRAMLOCALPARAMETERFVEXTPROC) (GLuint program, GLenum target, GLuint index, GLfloat *params);
typedef void (APIENTRYP PFNGLGETNAMEDPROGRAMIVEXTPROC) (GLuint program, GLenum target, GLenum pname, GLint *params);
typedef void (APIENTRYP PFNGLGETNAMEDPROGRAMSTRINGEXTPROC) (GLuint program, GLenum target, GLenum pname, void *string);
typedef void (APIENTRYP PFNGLNAMEDRENDERBUFFERSTORAGEEXTPROC) (GLuint renderbuffer, GLenum internalformat, GLsizei width, GLsizei height);
typedef void (APIENTRYP PFNGLGETNAMEDRENDERBUFFERPARAMETERIVEXTPROC) (GLuint renderbuffer, GLenum pname, GLint *params);
typedef void (APIENTRYP PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC) (GLuint renderbuffer, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
typedef void (APIENTRYP PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLECOVERAGEEXTPROC) (GLuint renderbuffer, GLsizei coverageSamples, GLsizei colorSamples, GLenum internalformat, GLsizei width, GLsizei height);
typedef GLenum (APIENTRYP PFNGLCHECKNAMEDFRAMEBUFFERSTATUSEXTPROC) (GLuint framebuffer, GLenum target);
typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERTEXTURE1DEXTPROC) (GLuint framebuffer, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERTEXTURE2DEXTPROC) (GLuint framebuffer, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERTEXTURE3DEXTPROC) (GLuint framebuffer, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset);
typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERRENDERBUFFEREXTPROC) (GLuint framebuffer, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);
typedef void (APIENTRYP PFNGLGETNAMEDFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC) (GLuint framebuffer, GLenum attachment, GLenum pname, GLint *params);
typedef void (APIENTRYP PFNGLGENERATETEXTUREMIPMAPEXTPROC) (GLuint texture, GLenum target);
typedef void (APIENTRYP PFNGLGENERATEMULTITEXMIPMAPEXTPROC) (GLenum texunit, GLenum target);
typedef void (APIENTRYP PFNGLFRAMEBUFFERDRAWBUFFEREXTPROC) (GLuint framebuffer, GLenum mode);
typedef void (APIENTRYP PFNGLFRAMEBUFFERDRAWBUFFERSEXTPROC) (GLuint framebuffer, GLsizei n, const GLenum *bufs);
typedef void (APIENTRYP PFNGLFRAMEBUFFERREADBUFFEREXTPROC) (GLuint framebuffer, GLenum mode);
typedef void (APIENTRYP PFNGLGETFRAMEBUFFERPARAMETERIVEXTPROC) (GLuint framebuffer, GLenum pname, GLint *params);
typedef void (APIENTRYP PFNGLNAMEDCOPYBUFFERSUBDATAEXTPROC) (GLuint readBuffer, GLuint writeBuffer, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size);
typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERTEXTUREEXTPROC) (GLuint framebuffer, GLenum attachment, GLuint texture, GLint level);
typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERTEXTURELAYEREXTPROC) (GLuint framebuffer, GLenum attachment, GLuint texture, GLint level, GLint layer);
typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERTEXTUREFACEEXTPROC) (GLuint framebuffer, GLenum attachment, GLuint texture, GLint level, GLenum face);
typedef void (APIENTRYP PFNGLTEXTURERENDERBUFFEREXTPROC) (GLuint texture, GLenum target, GLuint renderbuffer);
typedef void (APIENTRYP PFNGLMULTITEXRENDERBUFFEREXTPROC) (GLenum texunit, GLenum target, GLuint renderbuffer);
typedef void (APIENTRYP PFNGLVERTEXARRAYVERTEXOFFSETEXTPROC) (GLuint vaobj, GLuint buffer, GLint size, GLenum type, GLsizei stride, GLintptr offset);
typedef void (APIENTRYP PFNGLVERTEXARRAYCOLOROFFSETEXTPROC) (GLuint vaobj, GLuint buffer, GLint size, GLenum type, GLsizei stride, GLintptr offset);
typedef void (APIENTRYP PFNGLVERTEXARRAYEDGEFLAGOFFSETEXTPROC) (GLuint vaobj, GLuint buffer, GLsizei stride, GLintptr offset);
typedef void (APIENTRYP PFNGLVERTEXARRAYINDEXOFFSETEXTPROC) (GLuint vaobj, GLuint buffer, GLenum type, GLsizei stride, GLintptr offset);
typedef void (APIENTRYP PFNGLVERTEXARRAYNORMALOFFSETEXTPROC) (GLuint vaobj, GLuint buffer, GLenum type, GLsizei stride, GLintptr offset);
typedef void (APIENTRYP PFNGLVERTEXARRAYTEXCOORDOFFSETEXTPROC) (GLuint vaobj, GLuint buffer, GLint size, GLenum type, GLsizei stride, GLintptr offset);
typedef void (APIENTRYP PFNGLVERTEXARRAYMULTITEXCOORDOFFSETEXTPROC) (GLuint vaobj, GLuint buffer, GLenum texunit, GLint size, GLenum type, GLsizei stride, GLintptr offset);
typedef void (APIENTRYP PFNGLVERTEXARRAYFOGCOORDOFFSETEXTPROC) (GLuint vaobj, GLuint buffer, GLenum type, GLsizei stride, GLintptr offset);
typedef void (APIENTRYP PFNGLVERTEXARRAYSECONDARYCOLOROFFSETEXTPROC) (GLuint vaobj, GLuint buffer, GLint size, GLenum type, GLsizei stride, GLintptr offset);
typedef void (APIENTRYP PFNGLVERTEXARRAYVERTEXATTRIBOFFSETEXTPROC) (GLuint vaobj, GLuint buffer, GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, GLintptr offset);
typedef void (APIENTRYP PFNGLVERTEXARRAYVERTEXATTRIBIOFFSETEXTPROC) (GLuint vaobj, GLuint buffer, GLuint index, GLint size, GLenum type, GLsizei stride, GLintptr offset);
typedef void (APIENTRYP PFNGLENABLEVERTEXARRAYEXTPROC) (GLuint vaobj, GLenum array);
typedef void (APIENTRYP PFNGLDISABLEVERTEXARRAYEXTPROC) (GLuint vaobj, GLenum array);
typedef void (APIENTRYP PFNGLENABLEVERTEXARRAYATTRIBEXTPROC) (GLuint vaobj, GLuint index);
typedef void (APIENTRYP PFNGLDISABLEVERTEXARRAYATTRIBEXTPROC) (GLuint vaobj, GLuint index);
typedef void (APIENTRYP PFNGLGETVERTEXARRAYINTEGERVEXTPROC) (GLuint vaobj, GLenum pname, GLint *param);
typedef void (APIENTRYP PFNGLGETVERTEXARRAYPOINTERVEXTPROC) (GLuint vaobj, GLenum pname, void **param);
typedef void (APIENTRYP PFNGLGETVERTEXARRAYINTEGERI_VEXTPROC) (GLuint vaobj, GLuint index, GLenum pname, GLint *param);
typedef void (APIENTRYP PFNGLGETVERTEXARRAYPOINTERI_VEXTPROC) (GLuint vaobj, GLuint index, GLenum pname, void **param);
typedef void *(APIENTRYP PFNGLMAPNAMEDBUFFERRANGEEXTPROC) (GLuint buffer, GLintptr offset, GLsizeiptr length, GLbitfield access);
typedef void (APIENTRYP PFNGLFLUSHMAPPEDNAMEDBUFFERRANGEEXTPROC) (GLuint buffer, GLintptr offset, GLsizeiptr length);
typedef void (APIENTRYP PFNGLNAMEDBUFFERSTORAGEEXTPROC) (GLuint buffer, GLsizeiptr size, const void *data, GLbitfield flags);
typedef void (APIENTRYP PFNGLCLEARNAMEDBUFFERDATAEXTPROC) (GLuint buffer, GLenum internalformat, GLenum format, GLenum type, const void *data);
typedef void (APIENTRYP PFNGLCLEARNAMEDBUFFERSUBDATAEXTPROC) (GLuint buffer, GLenum internalformat, GLsizeiptr offset, GLsizeiptr size, GLenum format, GLenum type, const void *data);
typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERPARAMETERIEXTPROC) (GLuint framebuffer, GLenum pname, GLint param);
typedef void (APIENTRYP PFNGLGETNAMEDFRAMEBUFFERPARAMETERIVEXTPROC) (GLuint framebuffer, GLenum pname, GLint *params);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1DEXTPROC) (GLuint program, GLint location, GLdouble x);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2DEXTPROC) (GLuint program, GLint location, GLdouble x, GLdouble y);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3DEXTPROC) (GLuint program, GLint location, GLdouble x, GLdouble y, GLdouble z);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4DEXTPROC) (GLuint program, GLint location, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1DVEXTPROC) (GLuint program, GLint location, GLsizei count, const GLdouble *value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2DVEXTPROC) (GLuint program, GLint location, GLsizei count, const GLdouble *value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3DVEXTPROC) (GLuint program, GLint location, GLsizei count, const GLdouble *value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4DVEXTPROC) (GLuint program, GLint location, GLsizei count, const GLdouble *value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2DVEXTPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3DVEXTPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4DVEXTPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2X3DVEXTPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2X4DVEXTPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3X2DVEXTPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3X4DVEXTPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4X2DVEXTPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4X3DVEXTPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
typedef void (APIENTRYP PFNGLTEXTUREBUFFERRANGEEXTPROC) (GLuint texture, GLenum target, GLenum internalformat, GLuint buffer, GLintptr offset, GLsizeiptr size);
typedef void (APIENTRYP PFNGLTEXTURESTORAGE1DEXTPROC) (GLuint texture, GLenum target, GLsizei levels, GLenum internalformat, GLsizei width);
typedef void (APIENTRYP PFNGLTEXTURESTORAGE2DEXTPROC) (GLuint texture, GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height);
typedef void (APIENTRYP PFNGLTEXTURESTORAGE3DEXTPROC) (GLuint texture, GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth);
typedef void (APIENTRYP PFNGLTEXTURESTORAGE2DMULTISAMPLEEXTPROC) (GLuint texture, GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations);
typedef void (APIENTRYP PFNGLTEXTURESTORAGE3DMULTISAMPLEEXTPROC) (GLuint texture, GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);
typedef void (APIENTRYP PFNGLVERTEXARRAYBINDVERTEXBUFFEREXTPROC) (GLuint vaobj, GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride);
typedef void (APIENTRYP PFNGLVERTEXARRAYVERTEXATTRIBFORMATEXTPROC) (GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset);
typedef void (APIENTRYP PFNGLVERTEXARRAYVERTEXATTRIBIFORMATEXTPROC) (GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
typedef void (APIENTRYP PFNGLVERTEXARRAYVERTEXATTRIBLFORMATEXTPROC) (GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
typedef void (APIENTRYP PFNGLVERTEXARRAYVERTEXATTRIBBINDINGEXTPROC) (GLuint vaobj, GLuint attribindex, GLuint bindingindex);
typedef void (APIENTRYP PFNGLVERTEXARRAYVERTEXBINDINGDIVISOREXTPROC) (GLuint vaobj, GLuint bindingindex, GLuint divisor);
typedef void (APIENTRYP PFNGLVERTEXARRAYVERTEXATTRIBLOFFSETEXTPROC) (GLuint vaobj, GLuint buffer, GLuint index, GLint size, GLenum type, GLsizei stride, GLintptr offset);
typedef void (APIENTRYP PFNGLTEXTUREPAGECOMMITMENTEXTPROC) (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLboolean commit);
typedef void (APIENTRYP PFNGLVERTEXARRAYVERTEXATTRIBDIVISOREXTPROC) (GLuint vaobj, GLuint index, GLuint divisor);
// GL_EXT_direct_state_access

// GL_EXT_draw_buffers2
AXLGLFLAPI bool GL_EXT_draw_buffers2;
typedef void (APIENTRYP PFNGLCOLORMASKINDEXEDEXTPROC) (GLuint index, GLboolean r, GLboolean g, GLboolean b, GLboolean a);
// GL_EXT_draw_buffers2

// GL_EXT_draw_instanced
AXLGLFLAPI bool GL_EXT_draw_instanced;
typedef void (APIENTRYP PFNGLDRAWARRAYSINSTANCEDEXTPROC) (GLenum mode, GLint start, GLsizei count, GLsizei primcount);
typedef void (APIENTRYP PFNGLDRAWELEMENTSINSTANCEDEXTPROC) (GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei primcount);
// GL_EXT_draw_instanced

// GL_EXT_draw_range_elements
AXLGLFLAPI bool GL_EXT_draw_range_elements;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_ELEMENTS_VERTICES_EXT = 0x80E8;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_ELEMENTS_INDICES_EXT = 0x80E9;
typedef void (APIENTRYP PFNGLDRAWRANGEELEMENTSEXTPROC) (GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void *indices);
// GL_EXT_draw_range_elements

// GL_EXT_external_buffer
AXLGLFLAPI bool GL_EXT_external_buffer;
typedef void *GLeglClientBufferEXT;
typedef void (APIENTRYP PFNGLBUFFERSTORAGEEXTERNALEXTPROC) (GLenum target, GLintptr offset, GLsizeiptr size, GLeglClientBufferEXT clientBuffer, GLbitfield flags);
typedef void (APIENTRYP PFNGLNAMEDBUFFERSTORAGEEXTERNALEXTPROC) (GLuint buffer, GLintptr offset, GLsizeiptr size, GLeglClientBufferEXT clientBuffer, GLbitfield flags);
// GL_EXT_external_buffer

// GL_EXT_fog_coord
AXLGLFLAPI bool GL_EXT_fog_coord;
AXLGLFLCONSTMODIFIER GLconstant GL_FOG_COORDINATE_SOURCE_EXT = 0x8450;
AXLGLFLCONSTMODIFIER GLconstant GL_FOG_COORDINATE_EXT = 0x8451;
AXLGLFLCONSTMODIFIER GLconstant GL_FRAGMENT_DEPTH_EXT = 0x8452;
AXLGLFLCONSTMODIFIER GLconstant GL_CURRENT_FOG_COORDINATE_EXT = 0x8453;
AXLGLFLCONSTMODIFIER GLconstant GL_FOG_COORDINATE_ARRAY_TYPE_EXT = 0x8454;
AXLGLFLCONSTMODIFIER GLconstant GL_FOG_COORDINATE_ARRAY_STRIDE_EXT = 0x8455;
AXLGLFLCONSTMODIFIER GLconstant GL_FOG_COORDINATE_ARRAY_POINTER_EXT = 0x8456;
AXLGLFLCONSTMODIFIER GLconstant GL_FOG_COORDINATE_ARRAY_EXT = 0x8457;
typedef void (APIENTRYP PFNGLFOGCOORDFEXTPROC) (GLfloat coord);
typedef void (APIENTRYP PFNGLFOGCOORDFVEXTPROC) (const GLfloat *coord);
typedef void (APIENTRYP PFNGLFOGCOORDDEXTPROC) (GLdouble coord);
typedef void (APIENTRYP PFNGLFOGCOORDDVEXTPROC) (const GLdouble *coord);
typedef void (APIENTRYP PFNGLFOGCOORDPOINTEREXTPROC) (GLenum type, GLsizei stride, const void *pointer);
// GL_EXT_fog_coord

// GL_EXT_framebuffer_blit
AXLGLFLAPI bool GL_EXT_framebuffer_blit;
AXLGLFLCONSTMODIFIER GLconstant GL_READ_FRAMEBUFFER_EXT = 0x8CA8;
AXLGLFLCONSTMODIFIER GLconstant GL_DRAW_FRAMEBUFFER_EXT = 0x8CA9;
AXLGLFLCONSTMODIFIER GLconstant GL_DRAW_FRAMEBUFFER_BINDING_EXT = 0x8CA6;
AXLGLFLCONSTMODIFIER GLconstant GL_READ_FRAMEBUFFER_BINDING_EXT = 0x8CAA;
typedef void (APIENTRYP PFNGLBLITFRAMEBUFFEREXTPROC) (GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);
// GL_EXT_framebuffer_blit

// GL_EXT_framebuffer_multisample
AXLGLFLAPI bool GL_EXT_framebuffer_multisample;
AXLGLFLCONSTMODIFIER GLconstant GL_RENDERBUFFER_SAMPLES_EXT = 0x8CAB;
AXLGLFLCONSTMODIFIER GLconstant GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_EXT = 0x8D56;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_SAMPLES_EXT = 0x8D57;
typedef void (APIENTRYP PFNGLRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC) (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
// GL_EXT_framebuffer_multisample

// GL_EXT_framebuffer_multisample_blit_scaled
AXLGLFLAPI bool GL_EXT_framebuffer_multisample_blit_scaled;
AXLGLFLCONSTMODIFIER GLconstant GL_SCALED_RESOLVE_FASTEST_EXT = 0x90BA;
AXLGLFLCONSTMODIFIER GLconstant GL_SCALED_RESOLVE_NICEST_EXT = 0x90BB;
// GL_EXT_framebuffer_multisample_blit_scaled

// GL_EXT_framebuffer_object
AXLGLFLAPI bool GL_EXT_framebuffer_object;
AXLGLFLCONSTMODIFIER GLconstant GL_INVALID_FRAMEBUFFER_OPERATION_EXT = 0x0506;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_RENDERBUFFER_SIZE_EXT = 0x84E8;
AXLGLFLCONSTMODIFIER GLconstant GL_FRAMEBUFFER_BINDING_EXT = 0x8CA6;
AXLGLFLCONSTMODIFIER GLconstant GL_RENDERBUFFER_BINDING_EXT = 0x8CA7;
AXLGLFLCONSTMODIFIER GLconstant GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE_EXT = 0x8CD0;
AXLGLFLCONSTMODIFIER GLconstant GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME_EXT = 0x8CD1;
AXLGLFLCONSTMODIFIER GLconstant GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL_EXT = 0x8CD2;
AXLGLFLCONSTMODIFIER GLconstant GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE_EXT = 0x8CD3;
AXLGLFLCONSTMODIFIER GLconstant GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_3D_ZOFFSET_EXT = 0x8CD4;
AXLGLFLCONSTMODIFIER GLconstant GL_FRAMEBUFFER_COMPLETE_EXT = 0x8CD5;
AXLGLFLCONSTMODIFIER GLconstant GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT_EXT = 0x8CD6;
AXLGLFLCONSTMODIFIER GLconstant GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT_EXT = 0x8CD7;
AXLGLFLCONSTMODIFIER GLconstant GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS_EXT = 0x8CD9;
AXLGLFLCONSTMODIFIER GLconstant GL_FRAMEBUFFER_INCOMPLETE_FORMATS_EXT = 0x8CDA;
AXLGLFLCONSTMODIFIER GLconstant GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER_EXT = 0x8CDB;
AXLGLFLCONSTMODIFIER GLconstant GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER_EXT = 0x8CDC;
AXLGLFLCONSTMODIFIER GLconstant GL_FRAMEBUFFER_UNSUPPORTED_EXT = 0x8CDD;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_COLOR_ATTACHMENTS_EXT = 0x8CDF;
AXLGLFLCONSTMODIFIER GLconstant GL_COLOR_ATTACHMENT0_EXT = 0x8CE0;
AXLGLFLCONSTMODIFIER GLconstant GL_COLOR_ATTACHMENT1_EXT = 0x8CE1;
AXLGLFLCONSTMODIFIER GLconstant GL_COLOR_ATTACHMENT2_EXT = 0x8CE2;
AXLGLFLCONSTMODIFIER GLconstant GL_COLOR_ATTACHMENT3_EXT = 0x8CE3;
AXLGLFLCONSTMODIFIER GLconstant GL_COLOR_ATTACHMENT4_EXT = 0x8CE4;
AXLGLFLCONSTMODIFIER GLconstant GL_COLOR_ATTACHMENT5_EXT = 0x8CE5;
AXLGLFLCONSTMODIFIER GLconstant GL_COLOR_ATTACHMENT6_EXT = 0x8CE6;
AXLGLFLCONSTMODIFIER GLconstant GL_COLOR_ATTACHMENT7_EXT = 0x8CE7;
AXLGLFLCONSTMODIFIER GLconstant GL_COLOR_ATTACHMENT8_EXT = 0x8CE8;
AXLGLFLCONSTMODIFIER GLconstant GL_COLOR_ATTACHMENT9_EXT = 0x8CE9;
AXLGLFLCONSTMODIFIER GLconstant GL_COLOR_ATTACHMENT10_EXT = 0x8CEA;
AXLGLFLCONSTMODIFIER GLconstant GL_COLOR_ATTACHMENT11_EXT = 0x8CEB;
AXLGLFLCONSTMODIFIER GLconstant GL_COLOR_ATTACHMENT12_EXT = 0x8CEC;
AXLGLFLCONSTMODIFIER GLconstant GL_COLOR_ATTACHMENT13_EXT = 0x8CED;
AXLGLFLCONSTMODIFIER GLconstant GL_COLOR_ATTACHMENT14_EXT = 0x8CEE;
AXLGLFLCONSTMODIFIER GLconstant GL_COLOR_ATTACHMENT15_EXT = 0x8CEF;
AXLGLFLCONSTMODIFIER GLconstant GL_DEPTH_ATTACHMENT_EXT = 0x8D00;
AXLGLFLCONSTMODIFIER GLconstant GL_STENCIL_ATTACHMENT_EXT = 0x8D20;
AXLGLFLCONSTMODIFIER GLconstant GL_FRAMEBUFFER_EXT = 0x8D40;
AXLGLFLCONSTMODIFIER GLconstant GL_RENDERBUFFER_EXT = 0x8D41;
AXLGLFLCONSTMODIFIER GLconstant GL_RENDERBUFFER_WIDTH_EXT = 0x8D42;
AXLGLFLCONSTMODIFIER GLconstant GL_RENDERBUFFER_HEIGHT_EXT = 0x8D43;
AXLGLFLCONSTMODIFIER GLconstant GL_RENDERBUFFER_INTERNAL_FORMAT_EXT = 0x8D44;
AXLGLFLCONSTMODIFIER GLconstant GL_STENCIL_INDEX1_EXT = 0x8D46;
AXLGLFLCONSTMODIFIER GLconstant GL_STENCIL_INDEX4_EXT = 0x8D47;
AXLGLFLCONSTMODIFIER GLconstant GL_STENCIL_INDEX8_EXT = 0x8D48;
AXLGLFLCONSTMODIFIER GLconstant GL_STENCIL_INDEX16_EXT = 0x8D49;
AXLGLFLCONSTMODIFIER GLconstant GL_RENDERBUFFER_RED_SIZE_EXT = 0x8D50;
AXLGLFLCONSTMODIFIER GLconstant GL_RENDERBUFFER_GREEN_SIZE_EXT = 0x8D51;
AXLGLFLCONSTMODIFIER GLconstant GL_RENDERBUFFER_BLUE_SIZE_EXT = 0x8D52;
AXLGLFLCONSTMODIFIER GLconstant GL_RENDERBUFFER_ALPHA_SIZE_EXT = 0x8D53;
AXLGLFLCONSTMODIFIER GLconstant GL_RENDERBUFFER_DEPTH_SIZE_EXT = 0x8D54;
AXLGLFLCONSTMODIFIER GLconstant GL_RENDERBUFFER_STENCIL_SIZE_EXT = 0x8D55;
typedef GLboolean (APIENTRYP PFNGLISRENDERBUFFEREXTPROC) (GLuint renderbuffer);
typedef void (APIENTRYP PFNGLBINDRENDERBUFFEREXTPROC) (GLenum target, GLuint renderbuffer);
typedef void (APIENTRYP PFNGLDELETERENDERBUFFERSEXTPROC) (GLsizei n, const GLuint *renderbuffers);
typedef void (APIENTRYP PFNGLGENRENDERBUFFERSEXTPROC) (GLsizei n, GLuint *renderbuffers);
typedef void (APIENTRYP PFNGLRENDERBUFFERSTORAGEEXTPROC) (GLenum target, GLenum internalformat, GLsizei width, GLsizei height);
typedef void (APIENTRYP PFNGLGETRENDERBUFFERPARAMETERIVEXTPROC) (GLenum target, GLenum pname, GLint *params);
typedef GLboolean (APIENTRYP PFNGLISFRAMEBUFFEREXTPROC) (GLuint framebuffer);
typedef void (APIENTRYP PFNGLBINDFRAMEBUFFEREXTPROC) (GLenum target, GLuint framebuffer);
typedef void (APIENTRYP PFNGLDELETEFRAMEBUFFERSEXTPROC) (GLsizei n, const GLuint *framebuffers);
typedef void (APIENTRYP PFNGLGENFRAMEBUFFERSEXTPROC) (GLsizei n, GLuint *framebuffers);
typedef GLenum (APIENTRYP PFNGLCHECKFRAMEBUFFERSTATUSEXTPROC) (GLenum target);
typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTURE1DEXTPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTURE2DEXTPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTURE3DEXTPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset);
typedef void (APIENTRYP PFNGLFRAMEBUFFERRENDERBUFFEREXTPROC) (GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);
typedef void (APIENTRYP PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC) (GLenum target, GLenum attachment, GLenum pname, GLint *params);
typedef void (APIENTRYP PFNGLGENERATEMIPMAPEXTPROC) (GLenum target);
// GL_EXT_framebuffer_object

// GL_EXT_framebuffer_sRGB
AXLGLFLAPI bool GL_EXT_framebuffer_sRGB;
AXLGLFLCONSTMODIFIER GLconstant GL_FRAMEBUFFER_SRGB_EXT = 0x8DB9;
AXLGLFLCONSTMODIFIER GLconstant GL_FRAMEBUFFER_SRGB_CAPABLE_EXT = 0x8DBA;
// GL_EXT_framebuffer_sRGB

// GL_EXT_geometry_shader4
AXLGLFLAPI bool GL_EXT_geometry_shader4;
AXLGLFLCONSTMODIFIER GLconstant GL_GEOMETRY_SHADER_EXT = 0x8DD9;
AXLGLFLCONSTMODIFIER GLconstant GL_GEOMETRY_VERTICES_OUT_EXT = 0x8DDA;
AXLGLFLCONSTMODIFIER GLconstant GL_GEOMETRY_INPUT_TYPE_EXT = 0x8DDB;
AXLGLFLCONSTMODIFIER GLconstant GL_GEOMETRY_OUTPUT_TYPE_EXT = 0x8DDC;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_EXT = 0x8C29;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_GEOMETRY_VARYING_COMPONENTS_EXT = 0x8DDD;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_VERTEX_VARYING_COMPONENTS_EXT = 0x8DDE;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_VARYING_COMPONENTS_EXT = 0x8B4B;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_EXT = 0x8DDF;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_GEOMETRY_OUTPUT_VERTICES_EXT = 0x8DE0;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_EXT = 0x8DE1;
AXLGLFLCONSTMODIFIER GLconstant GL_LINES_ADJACENCY_EXT = 0x000A;
AXLGLFLCONSTMODIFIER GLconstant GL_LINE_STRIP_ADJACENCY_EXT = 0x000B;
AXLGLFLCONSTMODIFIER GLconstant GL_TRIANGLES_ADJACENCY_EXT = 0x000C;
AXLGLFLCONSTMODIFIER GLconstant GL_TRIANGLE_STRIP_ADJACENCY_EXT = 0x000D;
AXLGLFLCONSTMODIFIER GLconstant GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_EXT = 0x8DA8;
AXLGLFLCONSTMODIFIER GLconstant GL_FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_EXT = 0x8DA9;
AXLGLFLCONSTMODIFIER GLconstant GL_FRAMEBUFFER_ATTACHMENT_LAYERED_EXT = 0x8DA7;
AXLGLFLCONSTMODIFIER GLconstant GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER_EXT = 0x8CD4;
AXLGLFLCONSTMODIFIER GLconstant GL_PROGRAM_POINT_SIZE_EXT = 0x8642;
typedef void (APIENTRYP PFNGLPROGRAMPARAMETERIEXTPROC) (GLuint program, GLenum pname, GLint value);
// GL_EXT_geometry_shader4

// GL_EXT_gpu_program_parameters
AXLGLFLAPI bool GL_EXT_gpu_program_parameters;
typedef void (APIENTRYP PFNGLPROGRAMENVPARAMETERS4FVEXTPROC) (GLenum target, GLuint index, GLsizei count, const GLfloat *params);
typedef void (APIENTRYP PFNGLPROGRAMLOCALPARAMETERS4FVEXTPROC) (GLenum target, GLuint index, GLsizei count, const GLfloat *params);
// GL_EXT_gpu_program_parameters

// GL_EXT_gpu_shader4
AXLGLFLAPI bool GL_EXT_gpu_shader4;
AXLGLFLCONSTMODIFIER GLconstant GL_VERTEX_ATTRIB_ARRAY_INTEGER_EXT = 0x88FD;
AXLGLFLCONSTMODIFIER GLconstant GL_SAMPLER_1D_ARRAY_EXT = 0x8DC0;
AXLGLFLCONSTMODIFIER GLconstant GL_SAMPLER_2D_ARRAY_EXT = 0x8DC1;
AXLGLFLCONSTMODIFIER GLconstant GL_SAMPLER_BUFFER_EXT = 0x8DC2;
AXLGLFLCONSTMODIFIER GLconstant GL_SAMPLER_1D_ARRAY_SHADOW_EXT = 0x8DC3;
AXLGLFLCONSTMODIFIER GLconstant GL_SAMPLER_2D_ARRAY_SHADOW_EXT = 0x8DC4;
AXLGLFLCONSTMODIFIER GLconstant GL_SAMPLER_CUBE_SHADOW_EXT = 0x8DC5;
AXLGLFLCONSTMODIFIER GLconstant GL_UNSIGNED_INT_VEC2_EXT = 0x8DC6;
AXLGLFLCONSTMODIFIER GLconstant GL_UNSIGNED_INT_VEC3_EXT = 0x8DC7;
AXLGLFLCONSTMODIFIER GLconstant GL_UNSIGNED_INT_VEC4_EXT = 0x8DC8;
AXLGLFLCONSTMODIFIER GLconstant GL_INT_SAMPLER_1D_EXT = 0x8DC9;
AXLGLFLCONSTMODIFIER GLconstant GL_INT_SAMPLER_2D_EXT = 0x8DCA;
AXLGLFLCONSTMODIFIER GLconstant GL_INT_SAMPLER_3D_EXT = 0x8DCB;
AXLGLFLCONSTMODIFIER GLconstant GL_INT_SAMPLER_CUBE_EXT = 0x8DCC;
AXLGLFLCONSTMODIFIER GLconstant GL_INT_SAMPLER_2D_RECT_EXT = 0x8DCD;
AXLGLFLCONSTMODIFIER GLconstant GL_INT_SAMPLER_1D_ARRAY_EXT = 0x8DCE;
AXLGLFLCONSTMODIFIER GLconstant GL_INT_SAMPLER_2D_ARRAY_EXT = 0x8DCF;
AXLGLFLCONSTMODIFIER GLconstant GL_INT_SAMPLER_BUFFER_EXT = 0x8DD0;
AXLGLFLCONSTMODIFIER GLconstant GL_UNSIGNED_INT_SAMPLER_1D_EXT = 0x8DD1;
AXLGLFLCONSTMODIFIER GLconstant GL_UNSIGNED_INT_SAMPLER_2D_EXT = 0x8DD2;
AXLGLFLCONSTMODIFIER GLconstant GL_UNSIGNED_INT_SAMPLER_3D_EXT = 0x8DD3;
AXLGLFLCONSTMODIFIER GLconstant GL_UNSIGNED_INT_SAMPLER_CUBE_EXT = 0x8DD4;
AXLGLFLCONSTMODIFIER GLconstant GL_UNSIGNED_INT_SAMPLER_2D_RECT_EXT = 0x8DD5;
AXLGLFLCONSTMODIFIER GLconstant GL_UNSIGNED_INT_SAMPLER_1D_ARRAY_EXT = 0x8DD6;
AXLGLFLCONSTMODIFIER GLconstant GL_UNSIGNED_INT_SAMPLER_2D_ARRAY_EXT = 0x8DD7;
AXLGLFLCONSTMODIFIER GLconstant GL_UNSIGNED_INT_SAMPLER_BUFFER_EXT = 0x8DD8;
AXLGLFLCONSTMODIFIER GLconstant GL_MIN_PROGRAM_TEXEL_OFFSET_EXT = 0x8904;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_PROGRAM_TEXEL_OFFSET_EXT = 0x8905;
typedef void (APIENTRYP PFNGLGETUNIFORMUIVEXTPROC) (GLuint program, GLint location, GLuint *params);
typedef void (APIENTRYP PFNGLBINDFRAGDATALOCATIONEXTPROC) (GLuint program, GLuint color, const GLchar *name);
typedef GLint (APIENTRYP PFNGLGETFRAGDATALOCATIONEXTPROC) (GLuint program, const GLchar *name);
typedef void (APIENTRYP PFNGLUNIFORM1UIEXTPROC) (GLint location, GLuint v0);
typedef void (APIENTRYP PFNGLUNIFORM2UIEXTPROC) (GLint location, GLuint v0, GLuint v1);
typedef void (APIENTRYP PFNGLUNIFORM3UIEXTPROC) (GLint location, GLuint v0, GLuint v1, GLuint v2);
typedef void (APIENTRYP PFNGLUNIFORM4UIEXTPROC) (GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);
typedef void (APIENTRYP PFNGLUNIFORM1UIVEXTPROC) (GLint location, GLsizei count, const GLuint *value);
typedef void (APIENTRYP PFNGLUNIFORM2UIVEXTPROC) (GLint location, GLsizei count, const GLuint *value);
typedef void (APIENTRYP PFNGLUNIFORM3UIVEXTPROC) (GLint location, GLsizei count, const GLuint *value);
typedef void (APIENTRYP PFNGLUNIFORM4UIVEXTPROC) (GLint location, GLsizei count, const GLuint *value);
// GL_EXT_gpu_shader4

// GL_EXT_histogram
AXLGLFLAPI bool GL_EXT_histogram;
AXLGLFLCONSTMODIFIER GLconstant GL_HISTOGRAM_EXT = 0x8024;
AXLGLFLCONSTMODIFIER GLconstant GL_PROXY_HISTOGRAM_EXT = 0x8025;
AXLGLFLCONSTMODIFIER GLconstant GL_HISTOGRAM_WIDTH_EXT = 0x8026;
AXLGLFLCONSTMODIFIER GLconstant GL_HISTOGRAM_FORMAT_EXT = 0x8027;
AXLGLFLCONSTMODIFIER GLconstant GL_HISTOGRAM_RED_SIZE_EXT = 0x8028;
AXLGLFLCONSTMODIFIER GLconstant GL_HISTOGRAM_GREEN_SIZE_EXT = 0x8029;
AXLGLFLCONSTMODIFIER GLconstant GL_HISTOGRAM_BLUE_SIZE_EXT = 0x802A;
AXLGLFLCONSTMODIFIER GLconstant GL_HISTOGRAM_ALPHA_SIZE_EXT = 0x802B;
AXLGLFLCONSTMODIFIER GLconstant GL_HISTOGRAM_LUMINANCE_SIZE_EXT = 0x802C;
AXLGLFLCONSTMODIFIER GLconstant GL_HISTOGRAM_SINK_EXT = 0x802D;
AXLGLFLCONSTMODIFIER GLconstant GL_MINMAX_EXT = 0x802E;
AXLGLFLCONSTMODIFIER GLconstant GL_MINMAX_FORMAT_EXT = 0x802F;
AXLGLFLCONSTMODIFIER GLconstant GL_MINMAX_SINK_EXT = 0x8030;
AXLGLFLCONSTMODIFIER GLconstant GL_TABLE_TOO_LARGE_EXT = 0x8031;
typedef void (APIENTRYP PFNGLGETHISTOGRAMEXTPROC) (GLenum target, GLboolean reset, GLenum format, GLenum type, void *values);
typedef void (APIENTRYP PFNGLGETHISTOGRAMPARAMETERFVEXTPROC) (GLenum target, GLenum pname, GLfloat *params);
typedef void (APIENTRYP PFNGLGETHISTOGRAMPARAMETERIVEXTPROC) (GLenum target, GLenum pname, GLint *params);
typedef void (APIENTRYP PFNGLGETMINMAXEXTPROC) (GLenum target, GLboolean reset, GLenum format, GLenum type, void *values);
typedef void (APIENTRYP PFNGLGETMINMAXPARAMETERFVEXTPROC) (GLenum target, GLenum pname, GLfloat *params);
typedef void (APIENTRYP PFNGLGETMINMAXPARAMETERIVEXTPROC) (GLenum target, GLenum pname, GLint *params);
typedef void (APIENTRYP PFNGLHISTOGRAMEXTPROC) (GLenum target, GLsizei width, GLenum internalformat, GLboolean sink);
typedef void (APIENTRYP PFNGLMINMAXEXTPROC) (GLenum target, GLenum internalformat, GLboolean sink);
typedef void (APIENTRYP PFNGLRESETHISTOGRAMEXTPROC) (GLenum target);
typedef void (APIENTRYP PFNGLRESETMINMAXEXTPROC) (GLenum target);
// GL_EXT_histogram

// GL_EXT_index_array_formats
AXLGLFLAPI bool GL_EXT_index_array_formats;
AXLGLFLCONSTMODIFIER GLconstant GL_IUI_V2F_EXT = 0x81AD;
AXLGLFLCONSTMODIFIER GLconstant GL_IUI_V3F_EXT = 0x81AE;
AXLGLFLCONSTMODIFIER GLconstant GL_IUI_N3F_V2F_EXT = 0x81AF;
AXLGLFLCONSTMODIFIER GLconstant GL_IUI_N3F_V3F_EXT = 0x81B0;
AXLGLFLCONSTMODIFIER GLconstant GL_T2F_IUI_V2F_EXT = 0x81B1;
AXLGLFLCONSTMODIFIER GLconstant GL_T2F_IUI_V3F_EXT = 0x81B2;
AXLGLFLCONSTMODIFIER GLconstant GL_T2F_IUI_N3F_V2F_EXT = 0x81B3;
AXLGLFLCONSTMODIFIER GLconstant GL_T2F_IUI_N3F_V3F_EXT = 0x81B4;
// GL_EXT_index_array_formats

// GL_EXT_index_func
AXLGLFLAPI bool GL_EXT_index_func;
AXLGLFLCONSTMODIFIER GLconstant GL_INDEX_TEST_EXT = 0x81B5;
AXLGLFLCONSTMODIFIER GLconstant GL_INDEX_TEST_FUNC_EXT = 0x81B6;
AXLGLFLCONSTMODIFIER GLconstant GL_INDEX_TEST_REF_EXT = 0x81B7;
typedef void (APIENTRYP PFNGLINDEXFUNCEXTPROC) (GLenum func, GLclampf ref);
// GL_EXT_index_func

// GL_EXT_index_material
AXLGLFLAPI bool GL_EXT_index_material;
AXLGLFLCONSTMODIFIER GLconstant GL_INDEX_MATERIAL_EXT = 0x81B8;
AXLGLFLCONSTMODIFIER GLconstant GL_INDEX_MATERIAL_PARAMETER_EXT = 0x81B9;
AXLGLFLCONSTMODIFIER GLconstant GL_INDEX_MATERIAL_FACE_EXT = 0x81BA;
typedef void (APIENTRYP PFNGLINDEXMATERIALEXTPROC) (GLenum face, GLenum mode);
// GL_EXT_index_material

// GL_EXT_index_texture
AXLGLFLAPI bool GL_EXT_index_texture;
// GL_EXT_index_texture

// GL_EXT_light_texture
AXLGLFLAPI bool GL_EXT_light_texture;
AXLGLFLCONSTMODIFIER GLconstant GL_FRAGMENT_MATERIAL_EXT = 0x8349;
AXLGLFLCONSTMODIFIER GLconstant GL_FRAGMENT_NORMAL_EXT = 0x834A;
AXLGLFLCONSTMODIFIER GLconstant GL_FRAGMENT_COLOR_EXT = 0x834C;
AXLGLFLCONSTMODIFIER GLconstant GL_ATTENUATION_EXT = 0x834D;
AXLGLFLCONSTMODIFIER GLconstant GL_SHADOW_ATTENUATION_EXT = 0x834E;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_APPLICATION_MODE_EXT = 0x834F;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_LIGHT_EXT = 0x8350;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_MATERIAL_FACE_EXT = 0x8351;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_MATERIAL_PARAMETER_EXT = 0x8352;
typedef void (APIENTRYP PFNGLAPPLYTEXTUREEXTPROC) (GLenum mode);
typedef void (APIENTRYP PFNGLTEXTURELIGHTEXTPROC) (GLenum pname);
typedef void (APIENTRYP PFNGLTEXTUREMATERIALEXTPROC) (GLenum face, GLenum mode);
// GL_EXT_light_texture

// GL_EXT_memory_object
AXLGLFLAPI bool GL_EXT_memory_object;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_TILING_EXT = 0x9580;
AXLGLFLCONSTMODIFIER GLconstant GL_DEDICATED_MEMORY_OBJECT_EXT = 0x9581;
AXLGLFLCONSTMODIFIER GLconstant GL_PROTECTED_MEMORY_OBJECT_EXT = 0x959B;
AXLGLFLCONSTMODIFIER GLconstant GL_NUM_TILING_TYPES_EXT = 0x9582;
AXLGLFLCONSTMODIFIER GLconstant GL_TILING_TYPES_EXT = 0x9583;
AXLGLFLCONSTMODIFIER GLconstant GL_OPTIMAL_TILING_EXT = 0x9584;
AXLGLFLCONSTMODIFIER GLconstant GL_LINEAR_TILING_EXT = 0x9585;
AXLGLFLCONSTMODIFIER GLconstant GL_NUM_DEVICE_UUIDS_EXT = 0x9596;
AXLGLFLCONSTMODIFIER GLconstant GL_DEVICE_UUID_EXT = 0x9597;
AXLGLFLCONSTMODIFIER GLconstant GL_DRIVER_UUID_EXT = 0x9598;
AXLGLFLCONSTMODIFIER GLconstant GL_UUID_SIZE_EXT = 16;
typedef void (APIENTRYP PFNGLGETUNSIGNEDBYTEVEXTPROC) (GLenum pname, GLubyte *data);
typedef void (APIENTRYP PFNGLGETUNSIGNEDBYTEI_VEXTPROC) (GLenum target, GLuint index, GLubyte *data);
typedef void (APIENTRYP PFNGLDELETEMEMORYOBJECTSEXTPROC) (GLsizei n, const GLuint *memoryObjects);
typedef GLboolean (APIENTRYP PFNGLISMEMORYOBJECTEXTPROC) (GLuint memoryObject);
typedef void (APIENTRYP PFNGLCREATEMEMORYOBJECTSEXTPROC) (GLsizei n, GLuint *memoryObjects);
typedef void (APIENTRYP PFNGLMEMORYOBJECTPARAMETERIVEXTPROC) (GLuint memoryObject, GLenum pname, const GLint *params);
typedef void (APIENTRYP PFNGLGETMEMORYOBJECTPARAMETERIVEXTPROC) (GLuint memoryObject, GLenum pname, GLint *params);
typedef void (APIENTRYP PFNGLTEXSTORAGEMEM2DEXTPROC) (GLenum target, GLsizei levels, GLenum internalFormat, GLsizei width, GLsizei height, GLuint memory, GLuint64 offset);
typedef void (APIENTRYP PFNGLTEXSTORAGEMEM2DMULTISAMPLEEXTPROC) (GLenum target, GLsizei samples, GLenum internalFormat, GLsizei width, GLsizei height, GLboolean fixedSampleLocations, GLuint memory, GLuint64 offset);
typedef void (APIENTRYP PFNGLTEXSTORAGEMEM3DEXTPROC) (GLenum target, GLsizei levels, GLenum internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLuint memory, GLuint64 offset);
typedef void (APIENTRYP PFNGLTEXSTORAGEMEM3DMULTISAMPLEEXTPROC) (GLenum target, GLsizei samples, GLenum internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedSampleLocations, GLuint memory, GLuint64 offset);
typedef void (APIENTRYP PFNGLBUFFERSTORAGEMEMEXTPROC) (GLenum target, GLsizeiptr size, GLuint memory, GLuint64 offset);
typedef void (APIENTRYP PFNGLTEXTURESTORAGEMEM2DEXTPROC) (GLuint texture, GLsizei levels, GLenum internalFormat, GLsizei width, GLsizei height, GLuint memory, GLuint64 offset);
typedef void (APIENTRYP PFNGLTEXTURESTORAGEMEM2DMULTISAMPLEEXTPROC) (GLuint texture, GLsizei samples, GLenum internalFormat, GLsizei width, GLsizei height, GLboolean fixedSampleLocations, GLuint memory, GLuint64 offset);
typedef void (APIENTRYP PFNGLTEXTURESTORAGEMEM3DEXTPROC) (GLuint texture, GLsizei levels, GLenum internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLuint memory, GLuint64 offset);
typedef void (APIENTRYP PFNGLTEXTURESTORAGEMEM3DMULTISAMPLEEXTPROC) (GLuint texture, GLsizei samples, GLenum internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedSampleLocations, GLuint memory, GLuint64 offset);
typedef void (APIENTRYP PFNGLNAMEDBUFFERSTORAGEMEMEXTPROC) (GLuint buffer, GLsizeiptr size, GLuint memory, GLuint64 offset);
typedef void (APIENTRYP PFNGLTEXSTORAGEMEM1DEXTPROC) (GLenum target, GLsizei levels, GLenum internalFormat, GLsizei width, GLuint memory, GLuint64 offset);
typedef void (APIENTRYP PFNGLTEXTURESTORAGEMEM1DEXTPROC) (GLuint texture, GLsizei levels, GLenum internalFormat, GLsizei width, GLuint memory, GLuint64 offset);
// GL_EXT_memory_object

// GL_EXT_memory_object_fd
AXLGLFLAPI bool GL_EXT_memory_object_fd;
AXLGLFLCONSTMODIFIER GLconstant GL_HANDLE_TYPE_OPAQUE_FD_EXT = 0x9586;
typedef void (APIENTRYP PFNGLIMPORTMEMORYFDEXTPROC) (GLuint memory, GLuint64 size, GLenum handleType, GLint fd);
// GL_EXT_memory_object_fd

// GL_EXT_memory_object_win32
AXLGLFLAPI bool GL_EXT_memory_object_win32;
AXLGLFLCONSTMODIFIER GLconstant GL_HANDLE_TYPE_OPAQUE_WIN32_EXT = 0x9587;
AXLGLFLCONSTMODIFIER GLconstant GL_HANDLE_TYPE_OPAQUE_WIN32_KMT_EXT = 0x9588;
AXLGLFLCONSTMODIFIER GLconstant GL_DEVICE_LUID_EXT = 0x9599;
AXLGLFLCONSTMODIFIER GLconstant GL_DEVICE_NODE_MASK_EXT = 0x959A;
AXLGLFLCONSTMODIFIER GLconstant GL_LUID_SIZE_EXT = 8;
AXLGLFLCONSTMODIFIER GLconstant GL_HANDLE_TYPE_D3D12_TILEPOOL_EXT = 0x9589;
AXLGLFLCONSTMODIFIER GLconstant GL_HANDLE_TYPE_D3D12_RESOURCE_EXT = 0x958A;
AXLGLFLCONSTMODIFIER GLconstant GL_HANDLE_TYPE_D3D11_IMAGE_EXT = 0x958B;
AXLGLFLCONSTMODIFIER GLconstant GL_HANDLE_TYPE_D3D11_IMAGE_KMT_EXT = 0x958C;
typedef void (APIENTRYP PFNGLIMPORTMEMORYWIN32HANDLEEXTPROC) (GLuint memory, GLuint64 size, GLenum handleType, void *handle);
typedef void (APIENTRYP PFNGLIMPORTMEMORYWIN32NAMEEXTPROC) (GLuint memory, GLuint64 size, GLenum handleType, const void *name);
// GL_EXT_memory_object_win32

// GL_EXT_misc_attribute
AXLGLFLAPI bool GL_EXT_misc_attribute;
// GL_EXT_misc_attribute

// GL_EXT_multi_draw_arrays
AXLGLFLAPI bool GL_EXT_multi_draw_arrays;
typedef void (APIENTRYP PFNGLMULTIDRAWARRAYSEXTPROC) (GLenum mode, const GLint *first, const GLsizei *count, GLsizei primcount);
typedef void (APIENTRYP PFNGLMULTIDRAWELEMENTSEXTPROC) (GLenum mode, const GLsizei *count, GLenum type, const void *const*indices, GLsizei primcount);
// GL_EXT_multi_draw_arrays

// GL_EXT_multisample
AXLGLFLAPI bool GL_EXT_multisample;
AXLGLFLCONSTMODIFIER GLconstant GL_MULTISAMPLE_EXT = 0x809D;
AXLGLFLCONSTMODIFIER GLconstant GL_SAMPLE_ALPHA_TO_MASK_EXT = 0x809E;
AXLGLFLCONSTMODIFIER GLconstant GL_SAMPLE_ALPHA_TO_ONE_EXT = 0x809F;
AXLGLFLCONSTMODIFIER GLconstant GL_SAMPLE_MASK_EXT = 0x80A0;
AXLGLFLCONSTMODIFIER GLconstant GL_1PASS_EXT = 0x80A1;
AXLGLFLCONSTMODIFIER GLconstant GL_2PASS_0_EXT = 0x80A2;
AXLGLFLCONSTMODIFIER GLconstant GL_2PASS_1_EXT = 0x80A3;
AXLGLFLCONSTMODIFIER GLconstant GL_4PASS_0_EXT = 0x80A4;
AXLGLFLCONSTMODIFIER GLconstant GL_4PASS_1_EXT = 0x80A5;
AXLGLFLCONSTMODIFIER GLconstant GL_4PASS_2_EXT = 0x80A6;
AXLGLFLCONSTMODIFIER GLconstant GL_4PASS_3_EXT = 0x80A7;
AXLGLFLCONSTMODIFIER GLconstant GL_SAMPLE_BUFFERS_EXT = 0x80A8;
AXLGLFLCONSTMODIFIER GLconstant GL_SAMPLES_EXT = 0x80A9;
AXLGLFLCONSTMODIFIER GLconstant GL_SAMPLE_MASK_VALUE_EXT = 0x80AA;
AXLGLFLCONSTMODIFIER GLconstant GL_SAMPLE_MASK_INVERT_EXT = 0x80AB;
AXLGLFLCONSTMODIFIER GLconstant GL_SAMPLE_PATTERN_EXT = 0x80AC;
AXLGLFLCONSTMODIFIER GLconstant GL_MULTISAMPLE_BIT_EXT = 0x200000;00
typedef void (APIENTRYP PFNGLSAMPLEMASKEXTPROC) (GLclampf value, GLboolean invert);
typedef void (APIENTRYP PFNGLSAMPLEPATTERNEXTPROC) (GLenum pattern);
// GL_EXT_multisample

// GL_EXT_multiview_tessellation_geometry_shader
AXLGLFLAPI bool GL_EXT_multiview_tessellation_geometry_shader;
// GL_EXT_multiview_tessellation_geometry_shader

// GL_EXT_multiview_texture_multisample
AXLGLFLAPI bool GL_EXT_multiview_texture_multisample;
// GL_EXT_multiview_texture_multisample

// GL_EXT_multiview_timer_query
AXLGLFLAPI bool GL_EXT_multiview_timer_query;
// GL_EXT_multiview_timer_query

// GL_EXT_packed_depth_stencil
AXLGLFLAPI bool GL_EXT_packed_depth_stencil;
AXLGLFLCONSTMODIFIER GLconstant GL_DEPTH_STENCIL_EXT = 0x84F9;
AXLGLFLCONSTMODIFIER GLconstant GL_UNSIGNED_INT_24_8_EXT = 0x84FA;
AXLGLFLCONSTMODIFIER GLconstant GL_DEPTH24_STENCIL8_EXT = 0x88F0;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_STENCIL_SIZE_EXT = 0x88F1;
// GL_EXT_packed_depth_stencil

// GL_EXT_packed_float
AXLGLFLAPI bool GL_EXT_packed_float;
AXLGLFLCONSTMODIFIER GLconstant GL_R11F_G11F_B10F_EXT = 0x8C3A;
AXLGLFLCONSTMODIFIER GLconstant GL_UNSIGNED_INT_10F_11F_11F_REV_EXT = 0x8C3B;
AXLGLFLCONSTMODIFIER GLconstant GL_RGBA_SIGNED_COMPONENTS_EXT = 0x8C3C;
// GL_EXT_packed_float

// GL_EXT_packed_pixels
AXLGLFLAPI bool GL_EXT_packed_pixels;
AXLGLFLCONSTMODIFIER GLconstant GL_UNSIGNED_BYTE_3_3_2_EXT = 0x8032;
AXLGLFLCONSTMODIFIER GLconstant GL_UNSIGNED_SHORT_4_4_4_4_EXT = 0x8033;
AXLGLFLCONSTMODIFIER GLconstant GL_UNSIGNED_SHORT_5_5_5_1_EXT = 0x8034;
AXLGLFLCONSTMODIFIER GLconstant GL_UNSIGNED_INT_8_8_8_8_EXT = 0x8035;
AXLGLFLCONSTMODIFIER GLconstant GL_UNSIGNED_INT_10_10_10_2_EXT = 0x8036;
// GL_EXT_packed_pixels

// GL_EXT_paletted_texture
AXLGLFLAPI bool GL_EXT_paletted_texture;
AXLGLFLCONSTMODIFIER GLconstant GL_COLOR_INDEX1_EXT = 0x80E2;
AXLGLFLCONSTMODIFIER GLconstant GL_COLOR_INDEX2_EXT = 0x80E3;
AXLGLFLCONSTMODIFIER GLconstant GL_COLOR_INDEX4_EXT = 0x80E4;
AXLGLFLCONSTMODIFIER GLconstant GL_COLOR_INDEX8_EXT = 0x80E5;
AXLGLFLCONSTMODIFIER GLconstant GL_COLOR_INDEX12_EXT = 0x80E6;
AXLGLFLCONSTMODIFIER GLconstant GL_COLOR_INDEX16_EXT = 0x80E7;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_INDEX_SIZE_EXT = 0x80ED;
typedef void (APIENTRYP PFNGLCOLORTABLEEXTPROC) (GLenum target, GLenum internalFormat, GLsizei width, GLenum format, GLenum type, const void *table);
typedef void (APIENTRYP PFNGLGETCOLORTABLEEXTPROC) (GLenum target, GLenum format, GLenum type, void *data);
typedef void (APIENTRYP PFNGLGETCOLORTABLEPARAMETERIVEXTPROC) (GLenum target, GLenum pname, GLint *params);
typedef void (APIENTRYP PFNGLGETCOLORTABLEPARAMETERFVEXTPROC) (GLenum target, GLenum pname, GLfloat *params);
// GL_EXT_paletted_texture

// GL_EXT_pixel_buffer_object
AXLGLFLAPI bool GL_EXT_pixel_buffer_object;
AXLGLFLCONSTMODIFIER GLconstant GL_PIXEL_PACK_BUFFER_EXT = 0x88EB;
AXLGLFLCONSTMODIFIER GLconstant GL_PIXEL_UNPACK_BUFFER_EXT = 0x88EC;
AXLGLFLCONSTMODIFIER GLconstant GL_PIXEL_PACK_BUFFER_BINDING_EXT = 0x88ED;
AXLGLFLCONSTMODIFIER GLconstant GL_PIXEL_UNPACK_BUFFER_BINDING_EXT = 0x88EF;
// GL_EXT_pixel_buffer_object

// GL_EXT_pixel_transform
AXLGLFLAPI bool GL_EXT_pixel_transform;
AXLGLFLCONSTMODIFIER GLconstant GL_PIXEL_TRANSFORM_2D_EXT = 0x8330;
AXLGLFLCONSTMODIFIER GLconstant GL_PIXEL_MAG_FILTER_EXT = 0x8331;
AXLGLFLCONSTMODIFIER GLconstant GL_PIXEL_MIN_FILTER_EXT = 0x8332;
AXLGLFLCONSTMODIFIER GLconstant GL_PIXEL_CUBIC_WEIGHT_EXT = 0x8333;
AXLGLFLCONSTMODIFIER GLconstant GL_CUBIC_EXT = 0x8334;
AXLGLFLCONSTMODIFIER GLconstant GL_AVERAGE_EXT = 0x8335;
AXLGLFLCONSTMODIFIER GLconstant GL_PIXEL_TRANSFORM_2D_STACK_DEPTH_EXT = 0x8336;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_PIXEL_TRANSFORM_2D_STACK_DEPTH_EXT = 0x8337;
AXLGLFLCONSTMODIFIER GLconstant GL_PIXEL_TRANSFORM_2D_MATRIX_EXT = 0x8338;
typedef void (APIENTRYP PFNGLPIXELTRANSFORMPARAMETERIEXTPROC) (GLenum target, GLenum pname, GLint param);
typedef void (APIENTRYP PFNGLPIXELTRANSFORMPARAMETERFEXTPROC) (GLenum target, GLenum pname, GLfloat param);
typedef void (APIENTRYP PFNGLPIXELTRANSFORMPARAMETERIVEXTPROC) (GLenum target, GLenum pname, const GLint *params);
typedef void (APIENTRYP PFNGLPIXELTRANSFORMPARAMETERFVEXTPROC) (GLenum target, GLenum pname, const GLfloat *params);
typedef void (APIENTRYP PFNGLGETPIXELTRANSFORMPARAMETERIVEXTPROC) (GLenum target, GLenum pname, GLint *params);
typedef void (APIENTRYP PFNGLGETPIXELTRANSFORMPARAMETERFVEXTPROC) (GLenum target, GLenum pname, GLfloat *params);
// GL_EXT_pixel_transform

// GL_EXT_pixel_transform_color_table
AXLGLFLAPI bool GL_EXT_pixel_transform_color_table;
// GL_EXT_pixel_transform_color_table

// GL_EXT_point_parameters
AXLGLFLAPI bool GL_EXT_point_parameters;
AXLGLFLCONSTMODIFIER GLconstant GL_POINT_SIZE_MIN_EXT = 0x8126;
AXLGLFLCONSTMODIFIER GLconstant GL_POINT_SIZE_MAX_EXT = 0x8127;
AXLGLFLCONSTMODIFIER GLconstant GL_POINT_FADE_THRESHOLD_SIZE_EXT = 0x8128;
AXLGLFLCONSTMODIFIER GLconstant GL_DISTANCE_ATTENUATION_EXT = 0x8129;
typedef void (APIENTRYP PFNGLPOINTPARAMETERFEXTPROC) (GLenum pname, GLfloat param);
typedef void (APIENTRYP PFNGLPOINTPARAMETERFVEXTPROC) (GLenum pname, const GLfloat *params);
// GL_EXT_point_parameters

// GL_EXT_polygon_offset
AXLGLFLAPI bool GL_EXT_polygon_offset;
AXLGLFLCONSTMODIFIER GLconstant GL_POLYGON_OFFSET_EXT = 0x8037;
AXLGLFLCONSTMODIFIER GLconstant GL_POLYGON_OFFSET_FACTOR_EXT = 0x8038;
AXLGLFLCONSTMODIFIER GLconstant GL_POLYGON_OFFSET_BIAS_EXT = 0x8039;
typedef void (APIENTRYP PFNGLPOLYGONOFFSETEXTPROC) (GLfloat factor, GLfloat bias);
// GL_EXT_polygon_offset

// GL_EXT_polygon_offset_clamp
AXLGLFLAPI bool GL_EXT_polygon_offset_clamp;
AXLGLFLCONSTMODIFIER GLconstant GL_POLYGON_OFFSET_CLAMP_EXT = 0x8E1B;
typedef void (APIENTRYP PFNGLPOLYGONOFFSETCLAMPEXTPROC) (GLfloat factor, GLfloat units, GLfloat clamp);
// GL_EXT_polygon_offset_clamp

// GL_EXT_post_depth_coverage
AXLGLFLAPI bool GL_EXT_post_depth_coverage;
// GL_EXT_post_depth_coverage

// GL_EXT_provoking_vertex
AXLGLFLAPI bool GL_EXT_provoking_vertex;
AXLGLFLCONSTMODIFIER GLconstant GL_QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION_EXT = 0x8E4C;
AXLGLFLCONSTMODIFIER GLconstant GL_FIRST_VERTEX_CONVENTION_EXT = 0x8E4D;
AXLGLFLCONSTMODIFIER GLconstant GL_LAST_VERTEX_CONVENTION_EXT = 0x8E4E;
AXLGLFLCONSTMODIFIER GLconstant GL_PROVOKING_VERTEX_EXT = 0x8E4F;
typedef void (APIENTRYP PFNGLPROVOKINGVERTEXEXTPROC) (GLenum mode);
// GL_EXT_provoking_vertex

// GL_EXT_raster_multisample
AXLGLFLAPI bool GL_EXT_raster_multisample;
AXLGLFLCONSTMODIFIER GLconstant GL_RASTER_MULTISAMPLE_EXT = 0x9327;
AXLGLFLCONSTMODIFIER GLconstant GL_RASTER_SAMPLES_EXT = 0x9328;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_RASTER_SAMPLES_EXT = 0x9329;
AXLGLFLCONSTMODIFIER GLconstant GL_RASTER_FIXED_SAMPLE_LOCATIONS_EXT = 0x932A;
AXLGLFLCONSTMODIFIER GLconstant GL_MULTISAMPLE_RASTERIZATION_ALLOWED_EXT = 0x932B;
AXLGLFLCONSTMODIFIER GLconstant GL_EFFECTIVE_RASTER_SAMPLES_EXT = 0x932C;
typedef void (APIENTRYP PFNGLRASTERSAMPLESEXTPROC) (GLuint samples, GLboolean fixedsamplelocations);
// GL_EXT_raster_multisample

// GL_EXT_rescale_normal
AXLGLFLAPI bool GL_EXT_rescale_normal;
AXLGLFLCONSTMODIFIER GLconstant GL_RESCALE_NORMAL_EXT = 0x803A;
// GL_EXT_rescale_normal

// GL_EXT_secondary_color
AXLGLFLAPI bool GL_EXT_secondary_color;
AXLGLFLCONSTMODIFIER GLconstant GL_COLOR_SUM_EXT = 0x8458;
AXLGLFLCONSTMODIFIER GLconstant GL_CURRENT_SECONDARY_COLOR_EXT = 0x8459;
AXLGLFLCONSTMODIFIER GLconstant GL_SECONDARY_COLOR_ARRAY_SIZE_EXT = 0x845A;
AXLGLFLCONSTMODIFIER GLconstant GL_SECONDARY_COLOR_ARRAY_TYPE_EXT = 0x845B;
AXLGLFLCONSTMODIFIER GLconstant GL_SECONDARY_COLOR_ARRAY_STRIDE_EXT = 0x845C;
AXLGLFLCONSTMODIFIER GLconstant GL_SECONDARY_COLOR_ARRAY_POINTER_EXT = 0x845D;
AXLGLFLCONSTMODIFIER GLconstant GL_SECONDARY_COLOR_ARRAY_EXT = 0x845E;
typedef void (APIENTRYP PFNGLSECONDARYCOLOR3BEXTPROC) (GLbyte red, GLbyte green, GLbyte blue);
typedef void (APIENTRYP PFNGLSECONDARYCOLOR3BVEXTPROC) (const GLbyte *v);
typedef void (APIENTRYP PFNGLSECONDARYCOLOR3DEXTPROC) (GLdouble red, GLdouble green, GLdouble blue);
typedef void (APIENTRYP PFNGLSECONDARYCOLOR3DVEXTPROC) (const GLdouble *v);
typedef void (APIENTRYP PFNGLSECONDARYCOLOR3FEXTPROC) (GLfloat red, GLfloat green, GLfloat blue);
typedef void (APIENTRYP PFNGLSECONDARYCOLOR3FVEXTPROC) (const GLfloat *v);
typedef void (APIENTRYP PFNGLSECONDARYCOLOR3IEXTPROC) (GLint red, GLint green, GLint blue);
typedef void (APIENTRYP PFNGLSECONDARYCOLOR3IVEXTPROC) (const GLint *v);
typedef void (APIENTRYP PFNGLSECONDARYCOLOR3SEXTPROC) (GLshort red, GLshort green, GLshort blue);
typedef void (APIENTRYP PFNGLSECONDARYCOLOR3SVEXTPROC) (const GLshort *v);
typedef void (APIENTRYP PFNGLSECONDARYCOLOR3UBEXTPROC) (GLubyte red, GLubyte green, GLubyte blue);
typedef void (APIENTRYP PFNGLSECONDARYCOLOR3UBVEXTPROC) (const GLubyte *v);
typedef void (APIENTRYP PFNGLSECONDARYCOLOR3UIEXTPROC) (GLuint red, GLuint green, GLuint blue);
typedef void (APIENTRYP PFNGLSECONDARYCOLOR3UIVEXTPROC) (const GLuint *v);
typedef void (APIENTRYP PFNGLSECONDARYCOLOR3USEXTPROC) (GLushort red, GLushort green, GLushort blue);
typedef void (APIENTRYP PFNGLSECONDARYCOLOR3USVEXTPROC) (const GLushort *v);
typedef void (APIENTRYP PFNGLSECONDARYCOLORPOINTEREXTPROC) (GLint size, GLenum type, GLsizei stride, const void *pointer);
// GL_EXT_secondary_color

// GL_EXT_semaphore
AXLGLFLAPI bool GL_EXT_semaphore;
AXLGLFLCONSTMODIFIER GLconstant GL_LAYOUT_GENERAL_EXT = 0x958D;
AXLGLFLCONSTMODIFIER GLconstant GL_LAYOUT_COLOR_ATTACHMENT_EXT = 0x958E;
AXLGLFLCONSTMODIFIER GLconstant GL_LAYOUT_DEPTH_STENCIL_ATTACHMENT_EXT = 0x958F;
AXLGLFLCONSTMODIFIER GLconstant GL_LAYOUT_DEPTH_STENCIL_READ_ONLY_EXT = 0x9590;
AXLGLFLCONSTMODIFIER GLconstant GL_LAYOUT_SHADER_READ_ONLY_EXT = 0x9591;
AXLGLFLCONSTMODIFIER GLconstant GL_LAYOUT_TRANSFER_SRC_EXT = 0x9592;
AXLGLFLCONSTMODIFIER GLconstant GL_LAYOUT_TRANSFER_DST_EXT = 0x9593;
AXLGLFLCONSTMODIFIER GLconstant GL_LAYOUT_DEPTH_READ_ONLY_STENCIL_ATTACHMENT_EXT = 0x9530;
AXLGLFLCONSTMODIFIER GLconstant GL_LAYOUT_DEPTH_ATTACHMENT_STENCIL_READ_ONLY_EXT = 0x9531;
typedef void (APIENTRYP PFNGLGENSEMAPHORESEXTPROC) (GLsizei n, GLuint *semaphores);
typedef void (APIENTRYP PFNGLDELETESEMAPHORESEXTPROC) (GLsizei n, const GLuint *semaphores);
typedef GLboolean (APIENTRYP PFNGLISSEMAPHOREEXTPROC) (GLuint semaphore);
typedef void (APIENTRYP PFNGLSEMAPHOREPARAMETERUI64VEXTPROC) (GLuint semaphore, GLenum pname, const GLuint64 *params);
typedef void (APIENTRYP PFNGLGETSEMAPHOREPARAMETERUI64VEXTPROC) (GLuint semaphore, GLenum pname, GLuint64 *params);
typedef void (APIENTRYP PFNGLWAITSEMAPHOREEXTPROC) (GLuint semaphore, GLuint numBufferBarriers, const GLuint *buffers, GLuint numTextureBarriers, const GLuint *textures, const GLenum *srcLayouts);
typedef void (APIENTRYP PFNGLSIGNALSEMAPHOREEXTPROC) (GLuint semaphore, GLuint numBufferBarriers, const GLuint *buffers, GLuint numTextureBarriers, const GLuint *textures, const GLenum *dstLayouts);
// GL_EXT_semaphore

// GL_EXT_semaphore_fd
AXLGLFLAPI bool GL_EXT_semaphore_fd;
typedef void (APIENTRYP PFNGLIMPORTSEMAPHOREFDEXTPROC) (GLuint semaphore, GLenum handleType, GLint fd);
// GL_EXT_semaphore_fd

// GL_EXT_semaphore_win32
AXLGLFLAPI bool GL_EXT_semaphore_win32;
AXLGLFLCONSTMODIFIER GLconstant GL_HANDLE_TYPE_D3D12_FENCE_EXT = 0x9594;
AXLGLFLCONSTMODIFIER GLconstant GL_D3D12_FENCE_VALUE_EXT = 0x9595;
typedef void (APIENTRYP PFNGLIMPORTSEMAPHOREWIN32HANDLEEXTPROC) (GLuint semaphore, GLenum handleType, void *handle);
typedef void (APIENTRYP PFNGLIMPORTSEMAPHOREWIN32NAMEEXTPROC) (GLuint semaphore, GLenum handleType, const void *name);
// GL_EXT_semaphore_win32

// GL_EXT_separate_shader_objects
AXLGLFLAPI bool GL_EXT_separate_shader_objects;
AXLGLFLCONSTMODIFIER GLconstant GL_ACTIVE_PROGRAM_EXT = 0x8B8D;
typedef void (APIENTRYP PFNGLUSESHADERPROGRAMEXTPROC) (GLenum type, GLuint program);
typedef void (APIENTRYP PFNGLACTIVEPROGRAMEXTPROC) (GLuint program);
typedef GLuint (APIENTRYP PFNGLCREATESHADERPROGRAMEXTPROC) (GLenum type, const GLchar *string);
// GL_EXT_separate_shader_objects

// GL_EXT_separate_specular_color
AXLGLFLAPI bool GL_EXT_separate_specular_color;
AXLGLFLCONSTMODIFIER GLconstant GL_LIGHT_MODEL_COLOR_CONTROL_EXT = 0x81F8;
AXLGLFLCONSTMODIFIER GLconstant GL_SINGLE_COLOR_EXT = 0x81F9;
AXLGLFLCONSTMODIFIER GLconstant GL_SEPARATE_SPECULAR_COLOR_EXT = 0x81FA;
// GL_EXT_separate_specular_color

// GL_EXT_shader_framebuffer_fetch
AXLGLFLAPI bool GL_EXT_shader_framebuffer_fetch;
AXLGLFLCONSTMODIFIER GLconstant GL_FRAGMENT_SHADER_DISCARDS_SAMPLES_EXT = 0x8A52;
// GL_EXT_shader_framebuffer_fetch

// GL_EXT_shader_framebuffer_fetch_non_coherent
AXLGLFLAPI bool GL_EXT_shader_framebuffer_fetch_non_coherent;
typedef void (APIENTRYP PFNGLFRAMEBUFFERFETCHBARRIEREXTPROC) (void);
// GL_EXT_shader_framebuffer_fetch_non_coherent

// GL_EXT_shader_image_load_formatted
AXLGLFLAPI bool GL_EXT_shader_image_load_formatted;
// GL_EXT_shader_image_load_formatted

// GL_EXT_shader_image_load_store
AXLGLFLAPI bool GL_EXT_shader_image_load_store;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_IMAGE_UNITS_EXT = 0x8F38;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_COMBINED_IMAGE_UNITS_AND_FRAGMENT_OUTPUTS_EXT = 0x8F39;
AXLGLFLCONSTMODIFIER GLconstant GL_IMAGE_BINDING_NAME_EXT = 0x8F3A;
AXLGLFLCONSTMODIFIER GLconstant GL_IMAGE_BINDING_LEVEL_EXT = 0x8F3B;
AXLGLFLCONSTMODIFIER GLconstant GL_IMAGE_BINDING_LAYERED_EXT = 0x8F3C;
AXLGLFLCONSTMODIFIER GLconstant GL_IMAGE_BINDING_LAYER_EXT = 0x8F3D;
AXLGLFLCONSTMODIFIER GLconstant GL_IMAGE_BINDING_ACCESS_EXT = 0x8F3E;
AXLGLFLCONSTMODIFIER GLconstant GL_IMAGE_1D_EXT = 0x904C;
AXLGLFLCONSTMODIFIER GLconstant GL_IMAGE_2D_EXT = 0x904D;
AXLGLFLCONSTMODIFIER GLconstant GL_IMAGE_3D_EXT = 0x904E;
AXLGLFLCONSTMODIFIER GLconstant GL_IMAGE_2D_RECT_EXT = 0x904F;
AXLGLFLCONSTMODIFIER GLconstant GL_IMAGE_CUBE_EXT = 0x9050;
AXLGLFLCONSTMODIFIER GLconstant GL_IMAGE_BUFFER_EXT = 0x9051;
AXLGLFLCONSTMODIFIER GLconstant GL_IMAGE_1D_ARRAY_EXT = 0x9052;
AXLGLFLCONSTMODIFIER GLconstant GL_IMAGE_2D_ARRAY_EXT = 0x9053;
AXLGLFLCONSTMODIFIER GLconstant GL_IMAGE_CUBE_MAP_ARRAY_EXT = 0x9054;
AXLGLFLCONSTMODIFIER GLconstant GL_IMAGE_2D_MULTISAMPLE_EXT = 0x9055;
AXLGLFLCONSTMODIFIER GLconstant GL_IMAGE_2D_MULTISAMPLE_ARRAY_EXT = 0x9056;
AXLGLFLCONSTMODIFIER GLconstant GL_INT_IMAGE_1D_EXT = 0x9057;
AXLGLFLCONSTMODIFIER GLconstant GL_INT_IMAGE_2D_EXT = 0x9058;
AXLGLFLCONSTMODIFIER GLconstant GL_INT_IMAGE_3D_EXT = 0x9059;
AXLGLFLCONSTMODIFIER GLconstant GL_INT_IMAGE_2D_RECT_EXT = 0x905A;
AXLGLFLCONSTMODIFIER GLconstant GL_INT_IMAGE_CUBE_EXT = 0x905B;
AXLGLFLCONSTMODIFIER GLconstant GL_INT_IMAGE_BUFFER_EXT = 0x905C;
AXLGLFLCONSTMODIFIER GLconstant GL_INT_IMAGE_1D_ARRAY_EXT = 0x905D;
AXLGLFLCONSTMODIFIER GLconstant GL_INT_IMAGE_2D_ARRAY_EXT = 0x905E;
AXLGLFLCONSTMODIFIER GLconstant GL_INT_IMAGE_CUBE_MAP_ARRAY_EXT = 0x905F;
AXLGLFLCONSTMODIFIER GLconstant GL_INT_IMAGE_2D_MULTISAMPLE_EXT = 0x9060;
AXLGLFLCONSTMODIFIER GLconstant GL_INT_IMAGE_2D_MULTISAMPLE_ARRAY_EXT = 0x9061;
AXLGLFLCONSTMODIFIER GLconstant GL_UNSIGNED_INT_IMAGE_1D_EXT = 0x9062;
AXLGLFLCONSTMODIFIER GLconstant GL_UNSIGNED_INT_IMAGE_2D_EXT = 0x9063;
AXLGLFLCONSTMODIFIER GLconstant GL_UNSIGNED_INT_IMAGE_3D_EXT = 0x9064;
AXLGLFLCONSTMODIFIER GLconstant GL_UNSIGNED_INT_IMAGE_2D_RECT_EXT = 0x9065;
AXLGLFLCONSTMODIFIER GLconstant GL_UNSIGNED_INT_IMAGE_CUBE_EXT = 0x9066;
AXLGLFLCONSTMODIFIER GLconstant GL_UNSIGNED_INT_IMAGE_BUFFER_EXT = 0x9067;
AXLGLFLCONSTMODIFIER GLconstant GL_UNSIGNED_INT_IMAGE_1D_ARRAY_EXT = 0x9068;
AXLGLFLCONSTMODIFIER GLconstant GL_UNSIGNED_INT_IMAGE_2D_ARRAY_EXT = 0x9069;
AXLGLFLCONSTMODIFIER GLconstant GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY_EXT = 0x906A;
AXLGLFLCONSTMODIFIER GLconstant GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_EXT = 0x906B;
AXLGLFLCONSTMODIFIER GLconstant GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY_EXT = 0x906C;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_IMAGE_SAMPLES_EXT = 0x906D;
AXLGLFLCONSTMODIFIER GLconstant GL_IMAGE_BINDING_FORMAT_EXT = 0x906E;
AXLGLFLCONSTMODIFIER GLconstant GL_VERTEX_ATTRIB_ARRAY_BARRIER_BIT_EXT = 0x000000;01
AXLGLFLCONSTMODIFIER GLconstant GL_ELEMENT_ARRAY_BARRIER_BIT_EXT = 0x000000;02
AXLGLFLCONSTMODIFIER GLconstant GL_UNIFORM_BARRIER_BIT_EXT = 0x000000;04
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_FETCH_BARRIER_BIT_EXT = 0x000000;08
AXLGLFLCONSTMODIFIER GLconstant GL_SHADER_IMAGE_ACCESS_BARRIER_BIT_EXT = 0x000000;20
AXLGLFLCONSTMODIFIER GLconstant GL_COMMAND_BARRIER_BIT_EXT = 0x000000;40
AXLGLFLCONSTMODIFIER GLconstant GL_PIXEL_BUFFER_BARRIER_BIT_EXT = 0x000000;80
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_UPDATE_BARRIER_BIT_EXT = 0x000001;00
AXLGLFLCONSTMODIFIER GLconstant GL_BUFFER_UPDATE_BARRIER_BIT_EXT = 0x000002;00
AXLGLFLCONSTMODIFIER GLconstant GL_FRAMEBUFFER_BARRIER_BIT_EXT = 0x000004;00
AXLGLFLCONSTMODIFIER GLconstant GL_TRANSFORM_FEEDBACK_BARRIER_BIT_EXT = 0x000008;00
AXLGLFLCONSTMODIFIER GLconstant GL_ATOMIC_COUNTER_BARRIER_BIT_EXT = 0x000010;00
AXLGLFLCONSTMODIFIER GLconstant GL_ALL_BARRIER_BITS_EXT = 0xFFFFFF;FF
typedef void (APIENTRYP PFNGLBINDIMAGETEXTUREEXTPROC) (GLuint index, GLuint texture, GLint level, GLboolean layered, GLint layer, GLenum access, GLint format);
typedef void (APIENTRYP PFNGLMEMORYBARRIEREXTPROC) (GLbitfield barriers);
// GL_EXT_shader_image_load_store

// GL_EXT_shader_integer_mix
AXLGLFLAPI bool GL_EXT_shader_integer_mix;
// GL_EXT_shader_integer_mix

// GL_EXT_shadow_funcs
AXLGLFLAPI bool GL_EXT_shadow_funcs;
// GL_EXT_shadow_funcs

// GL_EXT_shared_texture_palette
AXLGLFLAPI bool GL_EXT_shared_texture_palette;
AXLGLFLCONSTMODIFIER GLconstant GL_SHARED_TEXTURE_PALETTE_EXT = 0x81FB;
// GL_EXT_shared_texture_palette

// GL_EXT_sparse_texture2
AXLGLFLAPI bool GL_EXT_sparse_texture2;
// GL_EXT_sparse_texture2

// GL_EXT_stencil_clear_tag
AXLGLFLAPI bool GL_EXT_stencil_clear_tag;
AXLGLFLCONSTMODIFIER GLconstant GL_STENCIL_TAG_BITS_EXT = 0x88F2;
AXLGLFLCONSTMODIFIER GLconstant GL_STENCIL_CLEAR_TAG_VALUE_EXT = 0x88F3;
typedef void (APIENTRYP PFNGLSTENCILCLEARTAGEXTPROC) (GLsizei stencilTagBits, GLuint stencilClearTag);
// GL_EXT_stencil_clear_tag

// GL_EXT_stencil_two_side
AXLGLFLAPI bool GL_EXT_stencil_two_side;
AXLGLFLCONSTMODIFIER GLconstant GL_STENCIL_TEST_TWO_SIDE_EXT = 0x8910;
AXLGLFLCONSTMODIFIER GLconstant GL_ACTIVE_STENCIL_FACE_EXT = 0x8911;
typedef void (APIENTRYP PFNGLACTIVESTENCILFACEEXTPROC) (GLenum face);
// GL_EXT_stencil_two_side

// GL_EXT_stencil_wrap
AXLGLFLAPI bool GL_EXT_stencil_wrap;
AXLGLFLCONSTMODIFIER GLconstant GL_INCR_WRAP_EXT = 0x8507;
AXLGLFLCONSTMODIFIER GLconstant GL_DECR_WRAP_EXT = 0x8508;
// GL_EXT_stencil_wrap

// GL_EXT_subtexture
AXLGLFLAPI bool GL_EXT_subtexture;
typedef void (APIENTRYP PFNGLTEXSUBIMAGE1DEXTPROC) (GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const void *pixels);
typedef void (APIENTRYP PFNGLTEXSUBIMAGE2DEXTPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *pixels);
// GL_EXT_subtexture

// GL_EXT_texture
AXLGLFLAPI bool GL_EXT_texture;
AXLGLFLCONSTMODIFIER GLconstant GL_ALPHA4_EXT = 0x803B;
AXLGLFLCONSTMODIFIER GLconstant GL_ALPHA8_EXT = 0x803C;
AXLGLFLCONSTMODIFIER GLconstant GL_ALPHA12_EXT = 0x803D;
AXLGLFLCONSTMODIFIER GLconstant GL_ALPHA16_EXT = 0x803E;
AXLGLFLCONSTMODIFIER GLconstant GL_LUMINANCE4_EXT = 0x803F;
AXLGLFLCONSTMODIFIER GLconstant GL_LUMINANCE8_EXT = 0x8040;
AXLGLFLCONSTMODIFIER GLconstant GL_LUMINANCE12_EXT = 0x8041;
AXLGLFLCONSTMODIFIER GLconstant GL_LUMINANCE16_EXT = 0x8042;
AXLGLFLCONSTMODIFIER GLconstant GL_LUMINANCE4_ALPHA4_EXT = 0x8043;
AXLGLFLCONSTMODIFIER GLconstant GL_LUMINANCE6_ALPHA2_EXT = 0x8044;
AXLGLFLCONSTMODIFIER GLconstant GL_LUMINANCE8_ALPHA8_EXT = 0x8045;
AXLGLFLCONSTMODIFIER GLconstant GL_LUMINANCE12_ALPHA4_EXT = 0x8046;
AXLGLFLCONSTMODIFIER GLconstant GL_LUMINANCE12_ALPHA12_EXT = 0x8047;
AXLGLFLCONSTMODIFIER GLconstant GL_LUMINANCE16_ALPHA16_EXT = 0x8048;
AXLGLFLCONSTMODIFIER GLconstant GL_INTENSITY_EXT = 0x8049;
AXLGLFLCONSTMODIFIER GLconstant GL_INTENSITY4_EXT = 0x804A;
AXLGLFLCONSTMODIFIER GLconstant GL_INTENSITY8_EXT = 0x804B;
AXLGLFLCONSTMODIFIER GLconstant GL_INTENSITY12_EXT = 0x804C;
AXLGLFLCONSTMODIFIER GLconstant GL_INTENSITY16_EXT = 0x804D;
AXLGLFLCONSTMODIFIER GLconstant GL_RGB2_EXT = 0x804E;
AXLGLFLCONSTMODIFIER GLconstant GL_RGB4_EXT = 0x804F;
AXLGLFLCONSTMODIFIER GLconstant GL_RGB5_EXT = 0x8050;
AXLGLFLCONSTMODIFIER GLconstant GL_RGB8_EXT = 0x8051;
AXLGLFLCONSTMODIFIER GLconstant GL_RGB10_EXT = 0x8052;
AXLGLFLCONSTMODIFIER GLconstant GL_RGB12_EXT = 0x8053;
AXLGLFLCONSTMODIFIER GLconstant GL_RGB16_EXT = 0x8054;
AXLGLFLCONSTMODIFIER GLconstant GL_RGBA2_EXT = 0x8055;
AXLGLFLCONSTMODIFIER GLconstant GL_RGBA4_EXT = 0x8056;
AXLGLFLCONSTMODIFIER GLconstant GL_RGB5_A1_EXT = 0x8057;
AXLGLFLCONSTMODIFIER GLconstant GL_RGBA8_EXT = 0x8058;
AXLGLFLCONSTMODIFIER GLconstant GL_RGB10_A2_EXT = 0x8059;
AXLGLFLCONSTMODIFIER GLconstant GL_RGBA12_EXT = 0x805A;
AXLGLFLCONSTMODIFIER GLconstant GL_RGBA16_EXT = 0x805B;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_RED_SIZE_EXT = 0x805C;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_GREEN_SIZE_EXT = 0x805D;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_BLUE_SIZE_EXT = 0x805E;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_ALPHA_SIZE_EXT = 0x805F;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_LUMINANCE_SIZE_EXT = 0x8060;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_INTENSITY_SIZE_EXT = 0x8061;
AXLGLFLCONSTMODIFIER GLconstant GL_REPLACE_EXT = 0x8062;
AXLGLFLCONSTMODIFIER GLconstant GL_PROXY_TEXTURE_1D_EXT = 0x8063;
AXLGLFLCONSTMODIFIER GLconstant GL_PROXY_TEXTURE_2D_EXT = 0x8064;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_TOO_LARGE_EXT = 0x8065;
// GL_EXT_texture

// GL_EXT_texture3D
AXLGLFLAPI bool GL_EXT_texture3D;
AXLGLFLCONSTMODIFIER GLconstant GL_PACK_SKIP_IMAGES_EXT = 0x806B;
AXLGLFLCONSTMODIFIER GLconstant GL_PACK_IMAGE_HEIGHT_EXT = 0x806C;
AXLGLFLCONSTMODIFIER GLconstant GL_UNPACK_SKIP_IMAGES_EXT = 0x806D;
AXLGLFLCONSTMODIFIER GLconstant GL_UNPACK_IMAGE_HEIGHT_EXT = 0x806E;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_3D_EXT = 0x806F;
AXLGLFLCONSTMODIFIER GLconstant GL_PROXY_TEXTURE_3D_EXT = 0x8070;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_DEPTH_EXT = 0x8071;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_WRAP_R_EXT = 0x8072;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_3D_TEXTURE_SIZE_EXT = 0x8073;
typedef void (APIENTRYP PFNGLTEXIMAGE3DEXTPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const void *pixels);
typedef void (APIENTRYP PFNGLTEXSUBIMAGE3DEXTPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void *pixels);
// GL_EXT_texture3D

// GL_EXT_texture_array
AXLGLFLAPI bool GL_EXT_texture_array;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_1D_ARRAY_EXT = 0x8C18;
AXLGLFLCONSTMODIFIER GLconstant GL_PROXY_TEXTURE_1D_ARRAY_EXT = 0x8C19;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_2D_ARRAY_EXT = 0x8C1A;
AXLGLFLCONSTMODIFIER GLconstant GL_PROXY_TEXTURE_2D_ARRAY_EXT = 0x8C1B;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_BINDING_1D_ARRAY_EXT = 0x8C1C;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_BINDING_2D_ARRAY_EXT = 0x8C1D;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_ARRAY_TEXTURE_LAYERS_EXT = 0x88FF;
AXLGLFLCONSTMODIFIER GLconstant GL_COMPARE_REF_DEPTH_TO_TEXTURE_EXT = 0x884E;
typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTURELAYEREXTPROC) (GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer);
// GL_EXT_texture_array

// GL_EXT_texture_buffer_object
AXLGLFLAPI bool GL_EXT_texture_buffer_object;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_BUFFER_EXT = 0x8C2A;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_TEXTURE_BUFFER_SIZE_EXT = 0x8C2B;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_BINDING_BUFFER_EXT = 0x8C2C;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_BUFFER_DATA_STORE_BINDING_EXT = 0x8C2D;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_BUFFER_FORMAT_EXT = 0x8C2E;
typedef void (APIENTRYP PFNGLTEXBUFFEREXTPROC) (GLenum target, GLenum internalformat, GLuint buffer);
// GL_EXT_texture_buffer_object

// GL_EXT_texture_compression_latc
AXLGLFLAPI bool GL_EXT_texture_compression_latc;
AXLGLFLCONSTMODIFIER GLconstant GL_COMPRESSED_LUMINANCE_LATC1_EXT = 0x8C70;
AXLGLFLCONSTMODIFIER GLconstant GL_COMPRESSED_SIGNED_LUMINANCE_LATC1_EXT = 0x8C71;
AXLGLFLCONSTMODIFIER GLconstant GL_COMPRESSED_LUMINANCE_ALPHA_LATC2_EXT = 0x8C72;
AXLGLFLCONSTMODIFIER GLconstant GL_COMPRESSED_SIGNED_LUMINANCE_ALPHA_LATC2_EXT = 0x8C73;
// GL_EXT_texture_compression_latc

// GL_EXT_texture_compression_rgtc
AXLGLFLAPI bool GL_EXT_texture_compression_rgtc;
AXLGLFLCONSTMODIFIER GLconstant GL_COMPRESSED_RED_RGTC1_EXT = 0x8DBB;
AXLGLFLCONSTMODIFIER GLconstant GL_COMPRESSED_SIGNED_RED_RGTC1_EXT = 0x8DBC;
AXLGLFLCONSTMODIFIER GLconstant GL_COMPRESSED_RED_GREEN_RGTC2_EXT = 0x8DBD;
AXLGLFLCONSTMODIFIER GLconstant GL_COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT = 0x8DBE;
// GL_EXT_texture_compression_rgtc

// GL_EXT_texture_compression_s3tc
AXLGLFLAPI bool GL_EXT_texture_compression_s3tc;
AXLGLFLCONSTMODIFIER GLconstant GL_COMPRESSED_RGB_S3TC_DXT1_EXT = 0x83F0;
AXLGLFLCONSTMODIFIER GLconstant GL_COMPRESSED_RGBA_S3TC_DXT1_EXT = 0x83F1;
AXLGLFLCONSTMODIFIER GLconstant GL_COMPRESSED_RGBA_S3TC_DXT3_EXT = 0x83F2;
AXLGLFLCONSTMODIFIER GLconstant GL_COMPRESSED_RGBA_S3TC_DXT5_EXT = 0x83F3;
// GL_EXT_texture_compression_s3tc

// GL_EXT_texture_cube_map
AXLGLFLAPI bool GL_EXT_texture_cube_map;
AXLGLFLCONSTMODIFIER GLconstant GL_NORMAL_MAP_EXT = 0x8511;
AXLGLFLCONSTMODIFIER GLconstant GL_REFLECTION_MAP_EXT = 0x8512;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_CUBE_MAP_EXT = 0x8513;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_BINDING_CUBE_MAP_EXT = 0x8514;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_CUBE_MAP_POSITIVE_X_EXT = 0x8515;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_CUBE_MAP_NEGATIVE_X_EXT = 0x8516;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_CUBE_MAP_POSITIVE_Y_EXT = 0x8517;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_CUBE_MAP_NEGATIVE_Y_EXT = 0x8518;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_CUBE_MAP_POSITIVE_Z_EXT = 0x8519;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_CUBE_MAP_NEGATIVE_Z_EXT = 0x851A;
AXLGLFLCONSTMODIFIER GLconstant GL_PROXY_TEXTURE_CUBE_MAP_EXT = 0x851B;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_CUBE_MAP_TEXTURE_SIZE_EXT = 0x851C;
// GL_EXT_texture_cube_map

// GL_EXT_texture_env_add
AXLGLFLAPI bool GL_EXT_texture_env_add;
// GL_EXT_texture_env_add

// GL_EXT_texture_env_combine
AXLGLFLAPI bool GL_EXT_texture_env_combine;
AXLGLFLCONSTMODIFIER GLconstant GL_COMBINE_EXT = 0x8570;
AXLGLFLCONSTMODIFIER GLconstant GL_COMBINE_RGB_EXT = 0x8571;
AXLGLFLCONSTMODIFIER GLconstant GL_COMBINE_ALPHA_EXT = 0x8572;
AXLGLFLCONSTMODIFIER GLconstant GL_RGB_SCALE_EXT = 0x8573;
AXLGLFLCONSTMODIFIER GLconstant GL_ADD_SIGNED_EXT = 0x8574;
AXLGLFLCONSTMODIFIER GLconstant GL_INTERPOLATE_EXT = 0x8575;
AXLGLFLCONSTMODIFIER GLconstant GL_CONSTANT_EXT = 0x8576;
AXLGLFLCONSTMODIFIER GLconstant GL_PRIMARY_COLOR_EXT = 0x8577;
AXLGLFLCONSTMODIFIER GLconstant GL_PREVIOUS_EXT = 0x8578;
AXLGLFLCONSTMODIFIER GLconstant GL_SOURCE0_RGB_EXT = 0x8580;
AXLGLFLCONSTMODIFIER GLconstant GL_SOURCE1_RGB_EXT = 0x8581;
AXLGLFLCONSTMODIFIER GLconstant GL_SOURCE2_RGB_EXT = 0x8582;
AXLGLFLCONSTMODIFIER GLconstant GL_SOURCE0_ALPHA_EXT = 0x8588;
AXLGLFLCONSTMODIFIER GLconstant GL_SOURCE1_ALPHA_EXT = 0x8589;
AXLGLFLCONSTMODIFIER GLconstant GL_SOURCE2_ALPHA_EXT = 0x858A;
AXLGLFLCONSTMODIFIER GLconstant GL_OPERAND0_RGB_EXT = 0x8590;
AXLGLFLCONSTMODIFIER GLconstant GL_OPERAND1_RGB_EXT = 0x8591;
AXLGLFLCONSTMODIFIER GLconstant GL_OPERAND2_RGB_EXT = 0x8592;
AXLGLFLCONSTMODIFIER GLconstant GL_OPERAND0_ALPHA_EXT = 0x8598;
AXLGLFLCONSTMODIFIER GLconstant GL_OPERAND1_ALPHA_EXT = 0x8599;
AXLGLFLCONSTMODIFIER GLconstant GL_OPERAND2_ALPHA_EXT = 0x859A;
// GL_EXT_texture_env_combine

// GL_EXT_texture_env_dot3
AXLGLFLAPI bool GL_EXT_texture_env_dot3;
AXLGLFLCONSTMODIFIER GLconstant GL_DOT3_RGB_EXT = 0x8740;
AXLGLFLCONSTMODIFIER GLconstant GL_DOT3_RGBA_EXT = 0x8741;
// GL_EXT_texture_env_dot3

// GL_EXT_texture_filter_anisotropic
AXLGLFLAPI bool GL_EXT_texture_filter_anisotropic;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_MAX_ANISOTROPY_EXT = 0x84FE;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_TEXTURE_MAX_ANISOTROPY_EXT = 0x84FF;
// GL_EXT_texture_filter_anisotropic

// GL_EXT_texture_filter_minmax
AXLGLFLAPI bool GL_EXT_texture_filter_minmax;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_REDUCTION_MODE_EXT = 0x9366;
AXLGLFLCONSTMODIFIER GLconstant GL_WEIGHTED_AVERAGE_EXT = 0x9367;
// GL_EXT_texture_filter_minmax

// GL_EXT_texture_integer
AXLGLFLAPI bool GL_EXT_texture_integer;
AXLGLFLCONSTMODIFIER GLconstant GL_RGBA32UI_EXT = 0x8D70;
AXLGLFLCONSTMODIFIER GLconstant GL_RGB32UI_EXT = 0x8D71;
AXLGLFLCONSTMODIFIER GLconstant GL_ALPHA32UI_EXT = 0x8D72;
AXLGLFLCONSTMODIFIER GLconstant GL_INTENSITY32UI_EXT = 0x8D73;
AXLGLFLCONSTMODIFIER GLconstant GL_LUMINANCE32UI_EXT = 0x8D74;
AXLGLFLCONSTMODIFIER GLconstant GL_LUMINANCE_ALPHA32UI_EXT = 0x8D75;
AXLGLFLCONSTMODIFIER GLconstant GL_RGBA16UI_EXT = 0x8D76;
AXLGLFLCONSTMODIFIER GLconstant GL_RGB16UI_EXT = 0x8D77;
AXLGLFLCONSTMODIFIER GLconstant GL_ALPHA16UI_EXT = 0x8D78;
AXLGLFLCONSTMODIFIER GLconstant GL_INTENSITY16UI_EXT = 0x8D79;
AXLGLFLCONSTMODIFIER GLconstant GL_LUMINANCE16UI_EXT = 0x8D7A;
AXLGLFLCONSTMODIFIER GLconstant GL_LUMINANCE_ALPHA16UI_EXT = 0x8D7B;
AXLGLFLCONSTMODIFIER GLconstant GL_RGBA8UI_EXT = 0x8D7C;
AXLGLFLCONSTMODIFIER GLconstant GL_RGB8UI_EXT = 0x8D7D;
AXLGLFLCONSTMODIFIER GLconstant GL_ALPHA8UI_EXT = 0x8D7E;
AXLGLFLCONSTMODIFIER GLconstant GL_INTENSITY8UI_EXT = 0x8D7F;
AXLGLFLCONSTMODIFIER GLconstant GL_LUMINANCE8UI_EXT = 0x8D80;
AXLGLFLCONSTMODIFIER GLconstant GL_LUMINANCE_ALPHA8UI_EXT = 0x8D81;
AXLGLFLCONSTMODIFIER GLconstant GL_RGBA32I_EXT = 0x8D82;
AXLGLFLCONSTMODIFIER GLconstant GL_RGB32I_EXT = 0x8D83;
AXLGLFLCONSTMODIFIER GLconstant GL_ALPHA32I_EXT = 0x8D84;
AXLGLFLCONSTMODIFIER GLconstant GL_INTENSITY32I_EXT = 0x8D85;
AXLGLFLCONSTMODIFIER GLconstant GL_LUMINANCE32I_EXT = 0x8D86;
AXLGLFLCONSTMODIFIER GLconstant GL_LUMINANCE_ALPHA32I_EXT = 0x8D87;
AXLGLFLCONSTMODIFIER GLconstant GL_RGBA16I_EXT = 0x8D88;
AXLGLFLCONSTMODIFIER GLconstant GL_RGB16I_EXT = 0x8D89;
AXLGLFLCONSTMODIFIER GLconstant GL_ALPHA16I_EXT = 0x8D8A;
AXLGLFLCONSTMODIFIER GLconstant GL_INTENSITY16I_EXT = 0x8D8B;
AXLGLFLCONSTMODIFIER GLconstant GL_LUMINANCE16I_EXT = 0x8D8C;
AXLGLFLCONSTMODIFIER GLconstant GL_LUMINANCE_ALPHA16I_EXT = 0x8D8D;
AXLGLFLCONSTMODIFIER GLconstant GL_RGBA8I_EXT = 0x8D8E;
AXLGLFLCONSTMODIFIER GLconstant GL_RGB8I_EXT = 0x8D8F;
AXLGLFLCONSTMODIFIER GLconstant GL_ALPHA8I_EXT = 0x8D90;
AXLGLFLCONSTMODIFIER GLconstant GL_INTENSITY8I_EXT = 0x8D91;
AXLGLFLCONSTMODIFIER GLconstant GL_LUMINANCE8I_EXT = 0x8D92;
AXLGLFLCONSTMODIFIER GLconstant GL_LUMINANCE_ALPHA8I_EXT = 0x8D93;
AXLGLFLCONSTMODIFIER GLconstant GL_RED_INTEGER_EXT = 0x8D94;
AXLGLFLCONSTMODIFIER GLconstant GL_GREEN_INTEGER_EXT = 0x8D95;
AXLGLFLCONSTMODIFIER GLconstant GL_BLUE_INTEGER_EXT = 0x8D96;
AXLGLFLCONSTMODIFIER GLconstant GL_ALPHA_INTEGER_EXT = 0x8D97;
AXLGLFLCONSTMODIFIER GLconstant GL_RGB_INTEGER_EXT = 0x8D98;
AXLGLFLCONSTMODIFIER GLconstant GL_RGBA_INTEGER_EXT = 0x8D99;
AXLGLFLCONSTMODIFIER GLconstant GL_BGR_INTEGER_EXT = 0x8D9A;
AXLGLFLCONSTMODIFIER GLconstant GL_BGRA_INTEGER_EXT = 0x8D9B;
AXLGLFLCONSTMODIFIER GLconstant GL_LUMINANCE_INTEGER_EXT = 0x8D9C;
AXLGLFLCONSTMODIFIER GLconstant GL_LUMINANCE_ALPHA_INTEGER_EXT = 0x8D9D;
AXLGLFLCONSTMODIFIER GLconstant GL_RGBA_INTEGER_MODE_EXT = 0x8D9E;
typedef void (APIENTRYP PFNGLTEXPARAMETERIIVEXTPROC) (GLenum target, GLenum pname, const GLint *params);
typedef void (APIENTRYP PFNGLTEXPARAMETERIUIVEXTPROC) (GLenum target, GLenum pname, const GLuint *params);
typedef void (APIENTRYP PFNGLGETTEXPARAMETERIIVEXTPROC) (GLenum target, GLenum pname, GLint *params);
typedef void (APIENTRYP PFNGLGETTEXPARAMETERIUIVEXTPROC) (GLenum target, GLenum pname, GLuint *params);
typedef void (APIENTRYP PFNGLCLEARCOLORIIEXTPROC) (GLint red, GLint green, GLint blue, GLint alpha);
typedef void (APIENTRYP PFNGLCLEARCOLORIUIEXTPROC) (GLuint red, GLuint green, GLuint blue, GLuint alpha);
// GL_EXT_texture_integer

// GL_EXT_texture_lod_bias
AXLGLFLAPI bool GL_EXT_texture_lod_bias;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_TEXTURE_LOD_BIAS_EXT = 0x84FD;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_FILTER_CONTROL_EXT = 0x8500;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_LOD_BIAS_EXT = 0x8501;
// GL_EXT_texture_lod_bias

// GL_EXT_texture_mirror_clamp
AXLGLFLAPI bool GL_EXT_texture_mirror_clamp;
AXLGLFLCONSTMODIFIER GLconstant GL_MIRROR_CLAMP_EXT = 0x8742;
AXLGLFLCONSTMODIFIER GLconstant GL_MIRROR_CLAMP_TO_EDGE_EXT = 0x8743;
AXLGLFLCONSTMODIFIER GLconstant GL_MIRROR_CLAMP_TO_BORDER_EXT = 0x8912;
// GL_EXT_texture_mirror_clamp

// GL_EXT_texture_object
AXLGLFLAPI bool GL_EXT_texture_object;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_PRIORITY_EXT = 0x8066;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_RESIDENT_EXT = 0x8067;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_1D_BINDING_EXT = 0x8068;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_2D_BINDING_EXT = 0x8069;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_3D_BINDING_EXT = 0x806A;
typedef GLboolean (APIENTRYP PFNGLARETEXTURESRESIDENTEXTPROC) (GLsizei n, const GLuint *textures, GLboolean *residences);
typedef void (APIENTRYP PFNGLBINDTEXTUREEXTPROC) (GLenum target, GLuint texture);
typedef void (APIENTRYP PFNGLDELETETEXTURESEXTPROC) (GLsizei n, const GLuint *textures);
typedef void (APIENTRYP PFNGLGENTEXTURESEXTPROC) (GLsizei n, GLuint *textures);
typedef GLboolean (APIENTRYP PFNGLISTEXTUREEXTPROC) (GLuint texture);
typedef void (APIENTRYP PFNGLPRIORITIZETEXTURESEXTPROC) (GLsizei n, const GLuint *textures, const GLclampf *priorities);
// GL_EXT_texture_object

// GL_EXT_texture_perturb_normal
AXLGLFLAPI bool GL_EXT_texture_perturb_normal;
AXLGLFLCONSTMODIFIER GLconstant GL_PERTURB_EXT = 0x85AE;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_NORMAL_EXT = 0x85AF;
typedef void (APIENTRYP PFNGLTEXTURENORMALEXTPROC) (GLenum mode);
// GL_EXT_texture_perturb_normal

// GL_EXT_texture_sRGB
AXLGLFLAPI bool GL_EXT_texture_sRGB;
AXLGLFLCONSTMODIFIER GLconstant GL_SRGB_EXT = 0x8C40;
AXLGLFLCONSTMODIFIER GLconstant GL_SRGB8_EXT = 0x8C41;
AXLGLFLCONSTMODIFIER GLconstant GL_SRGB_ALPHA_EXT = 0x8C42;
AXLGLFLCONSTMODIFIER GLconstant GL_SRGB8_ALPHA8_EXT = 0x8C43;
AXLGLFLCONSTMODIFIER GLconstant GL_SLUMINANCE_ALPHA_EXT = 0x8C44;
AXLGLFLCONSTMODIFIER GLconstant GL_SLUMINANCE8_ALPHA8_EXT = 0x8C45;
AXLGLFLCONSTMODIFIER GLconstant GL_SLUMINANCE_EXT = 0x8C46;
AXLGLFLCONSTMODIFIER GLconstant GL_SLUMINANCE8_EXT = 0x8C47;
AXLGLFLCONSTMODIFIER GLconstant GL_COMPRESSED_SRGB_EXT = 0x8C48;
AXLGLFLCONSTMODIFIER GLconstant GL_COMPRESSED_SRGB_ALPHA_EXT = 0x8C49;
AXLGLFLCONSTMODIFIER GLconstant GL_COMPRESSED_SLUMINANCE_EXT = 0x8C4A;
AXLGLFLCONSTMODIFIER GLconstant GL_COMPRESSED_SLUMINANCE_ALPHA_EXT = 0x8C4B;
AXLGLFLCONSTMODIFIER GLconstant GL_COMPRESSED_SRGB_S3TC_DXT1_EXT = 0x8C4C;
AXLGLFLCONSTMODIFIER GLconstant GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT = 0x8C4D;
AXLGLFLCONSTMODIFIER GLconstant GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT = 0x8C4E;
AXLGLFLCONSTMODIFIER GLconstant GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT = 0x8C4F;
// GL_EXT_texture_sRGB

// GL_EXT_texture_sRGB_R8
AXLGLFLAPI bool GL_EXT_texture_sRGB_R8;
AXLGLFLCONSTMODIFIER GLconstant GL_SR8_EXT = 0x8FBD;
// GL_EXT_texture_sRGB_R8

// GL_EXT_texture_sRGB_decode
AXLGLFLAPI bool GL_EXT_texture_sRGB_decode;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_SRGB_DECODE_EXT = 0x8A48;
AXLGLFLCONSTMODIFIER GLconstant GL_DECODE_EXT = 0x8A49;
AXLGLFLCONSTMODIFIER GLconstant GL_SKIP_DECODE_EXT = 0x8A4A;
// GL_EXT_texture_sRGB_decode

// GL_EXT_texture_shadow_lod
AXLGLFLAPI bool GL_EXT_texture_shadow_lod;
// GL_EXT_texture_shadow_lod

// GL_EXT_texture_shared_exponent
AXLGLFLAPI bool GL_EXT_texture_shared_exponent;
AXLGLFLCONSTMODIFIER GLconstant GL_RGB9_E5_EXT = 0x8C3D;
AXLGLFLCONSTMODIFIER GLconstant GL_UNSIGNED_INT_5_9_9_9_REV_EXT = 0x8C3E;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_SHARED_SIZE_EXT = 0x8C3F;
// GL_EXT_texture_shared_exponent

// GL_EXT_texture_snorm
AXLGLFLAPI bool GL_EXT_texture_snorm;
AXLGLFLCONSTMODIFIER GLconstant GL_ALPHA_SNORM = 0x9010;
AXLGLFLCONSTMODIFIER GLconstant GL_LUMINANCE_SNORM = 0x9011;
AXLGLFLCONSTMODIFIER GLconstant GL_LUMINANCE_ALPHA_SNORM = 0x9012;
AXLGLFLCONSTMODIFIER GLconstant GL_INTENSITY_SNORM = 0x9013;
AXLGLFLCONSTMODIFIER GLconstant GL_ALPHA8_SNORM = 0x9014;
AXLGLFLCONSTMODIFIER GLconstant GL_LUMINANCE8_SNORM = 0x9015;
AXLGLFLCONSTMODIFIER GLconstant GL_LUMINANCE8_ALPHA8_SNORM = 0x9016;
AXLGLFLCONSTMODIFIER GLconstant GL_INTENSITY8_SNORM = 0x9017;
AXLGLFLCONSTMODIFIER GLconstant GL_ALPHA16_SNORM = 0x9018;
AXLGLFLCONSTMODIFIER GLconstant GL_LUMINANCE16_SNORM = 0x9019;
AXLGLFLCONSTMODIFIER GLconstant GL_LUMINANCE16_ALPHA16_SNORM = 0x901A;
AXLGLFLCONSTMODIFIER GLconstant GL_INTENSITY16_SNORM = 0x901B;
AXLGLFLCONSTMODIFIER GLconstant GL_RED_SNORM = 0x8F90;
AXLGLFLCONSTMODIFIER GLconstant GL_RG_SNORM = 0x8F91;
AXLGLFLCONSTMODIFIER GLconstant GL_RGB_SNORM = 0x8F92;
AXLGLFLCONSTMODIFIER GLconstant GL_RGBA_SNORM = 0x8F93;
// GL_EXT_texture_snorm

// GL_EXT_texture_swizzle
AXLGLFLAPI bool GL_EXT_texture_swizzle;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_SWIZZLE_R_EXT = 0x8E42;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_SWIZZLE_G_EXT = 0x8E43;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_SWIZZLE_B_EXT = 0x8E44;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_SWIZZLE_A_EXT = 0x8E45;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_SWIZZLE_RGBA_EXT = 0x8E46;
// GL_EXT_texture_swizzle

// GL_EXT_timer_query
AXLGLFLAPI bool GL_EXT_timer_query;
AXLGLFLCONSTMODIFIER GLconstant GL_TIME_ELAPSED_EXT = 0x88BF;
typedef void (APIENTRYP PFNGLGETQUERYOBJECTI64VEXTPROC) (GLuint id, GLenum pname, GLint64 *params);
typedef void (APIENTRYP PFNGLGETQUERYOBJECTUI64VEXTPROC) (GLuint id, GLenum pname, GLuint64 *params);
// GL_EXT_timer_query

// GL_EXT_transform_feedback
AXLGLFLAPI bool GL_EXT_transform_feedback;
AXLGLFLCONSTMODIFIER GLconstant GL_TRANSFORM_FEEDBACK_BUFFER_EXT = 0x8C8E;
AXLGLFLCONSTMODIFIER GLconstant GL_TRANSFORM_FEEDBACK_BUFFER_START_EXT = 0x8C84;
AXLGLFLCONSTMODIFIER GLconstant GL_TRANSFORM_FEEDBACK_BUFFER_SIZE_EXT = 0x8C85;
AXLGLFLCONSTMODIFIER GLconstant GL_TRANSFORM_FEEDBACK_BUFFER_BINDING_EXT = 0x8C8F;
AXLGLFLCONSTMODIFIER GLconstant GL_INTERLEAVED_ATTRIBS_EXT = 0x8C8C;
AXLGLFLCONSTMODIFIER GLconstant GL_SEPARATE_ATTRIBS_EXT = 0x8C8D;
AXLGLFLCONSTMODIFIER GLconstant GL_PRIMITIVES_GENERATED_EXT = 0x8C87;
AXLGLFLCONSTMODIFIER GLconstant GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN_EXT = 0x8C88;
AXLGLFLCONSTMODIFIER GLconstant GL_RASTERIZER_DISCARD_EXT = 0x8C89;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS_EXT = 0x8C8A;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS_EXT = 0x8C8B;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS_EXT = 0x8C80;
AXLGLFLCONSTMODIFIER GLconstant GL_TRANSFORM_FEEDBACK_VARYINGS_EXT = 0x8C83;
AXLGLFLCONSTMODIFIER GLconstant GL_TRANSFORM_FEEDBACK_BUFFER_MODE_EXT = 0x8C7F;
AXLGLFLCONSTMODIFIER GLconstant GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH_EXT = 0x8C76;
typedef void (APIENTRYP PFNGLBEGINTRANSFORMFEEDBACKEXTPROC) (GLenum primitiveMode);
typedef void (APIENTRYP PFNGLENDTRANSFORMFEEDBACKEXTPROC) (void);
typedef void (APIENTRYP PFNGLBINDBUFFERRANGEEXTPROC) (GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size);
typedef void (APIENTRYP PFNGLBINDBUFFEROFFSETEXTPROC) (GLenum target, GLuint index, GLuint buffer, GLintptr offset);
typedef void (APIENTRYP PFNGLBINDBUFFERBASEEXTPROC) (GLenum target, GLuint index, GLuint buffer);
typedef void (APIENTRYP PFNGLTRANSFORMFEEDBACKVARYINGSEXTPROC) (GLuint program, GLsizei count, const GLchar *const*varyings, GLenum bufferMode);
typedef void (APIENTRYP PFNGLGETTRANSFORMFEEDBACKVARYINGEXTPROC) (GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLsizei *size, GLenum *type, GLchar *name);
// GL_EXT_transform_feedback

// GL_EXT_vertex_array
AXLGLFLAPI bool GL_EXT_vertex_array;
AXLGLFLCONSTMODIFIER GLconstant GL_VERTEX_ARRAY_EXT = 0x8074;
AXLGLFLCONSTMODIFIER GLconstant GL_NORMAL_ARRAY_EXT = 0x8075;
AXLGLFLCONSTMODIFIER GLconstant GL_COLOR_ARRAY_EXT = 0x8076;
AXLGLFLCONSTMODIFIER GLconstant GL_INDEX_ARRAY_EXT = 0x8077;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_COORD_ARRAY_EXT = 0x8078;
AXLGLFLCONSTMODIFIER GLconstant GL_EDGE_FLAG_ARRAY_EXT = 0x8079;
AXLGLFLCONSTMODIFIER GLconstant GL_VERTEX_ARRAY_SIZE_EXT = 0x807A;
AXLGLFLCONSTMODIFIER GLconstant GL_VERTEX_ARRAY_TYPE_EXT = 0x807B;
AXLGLFLCONSTMODIFIER GLconstant GL_VERTEX_ARRAY_STRIDE_EXT = 0x807C;
AXLGLFLCONSTMODIFIER GLconstant GL_VERTEX_ARRAY_COUNT_EXT = 0x807D;
AXLGLFLCONSTMODIFIER GLconstant GL_NORMAL_ARRAY_TYPE_EXT = 0x807E;
AXLGLFLCONSTMODIFIER GLconstant GL_NORMAL_ARRAY_STRIDE_EXT = 0x807F;
AXLGLFLCONSTMODIFIER GLconstant GL_NORMAL_ARRAY_COUNT_EXT = 0x8080;
AXLGLFLCONSTMODIFIER GLconstant GL_COLOR_ARRAY_SIZE_EXT = 0x8081;
AXLGLFLCONSTMODIFIER GLconstant GL_COLOR_ARRAY_TYPE_EXT = 0x8082;
AXLGLFLCONSTMODIFIER GLconstant GL_COLOR_ARRAY_STRIDE_EXT = 0x8083;
AXLGLFLCONSTMODIFIER GLconstant GL_COLOR_ARRAY_COUNT_EXT = 0x8084;
AXLGLFLCONSTMODIFIER GLconstant GL_INDEX_ARRAY_TYPE_EXT = 0x8085;
AXLGLFLCONSTMODIFIER GLconstant GL_INDEX_ARRAY_STRIDE_EXT = 0x8086;
AXLGLFLCONSTMODIFIER GLconstant GL_INDEX_ARRAY_COUNT_EXT = 0x8087;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_COORD_ARRAY_SIZE_EXT = 0x8088;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_COORD_ARRAY_TYPE_EXT = 0x8089;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_COORD_ARRAY_STRIDE_EXT = 0x808A;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_COORD_ARRAY_COUNT_EXT = 0x808B;
AXLGLFLCONSTMODIFIER GLconstant GL_EDGE_FLAG_ARRAY_STRIDE_EXT = 0x808C;
AXLGLFLCONSTMODIFIER GLconstant GL_EDGE_FLAG_ARRAY_COUNT_EXT = 0x808D;
AXLGLFLCONSTMODIFIER GLconstant GL_VERTEX_ARRAY_POINTER_EXT = 0x808E;
AXLGLFLCONSTMODIFIER GLconstant GL_NORMAL_ARRAY_POINTER_EXT = 0x808F;
AXLGLFLCONSTMODIFIER GLconstant GL_COLOR_ARRAY_POINTER_EXT = 0x8090;
AXLGLFLCONSTMODIFIER GLconstant GL_INDEX_ARRAY_POINTER_EXT = 0x8091;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_COORD_ARRAY_POINTER_EXT = 0x8092;
AXLGLFLCONSTMODIFIER GLconstant GL_EDGE_FLAG_ARRAY_POINTER_EXT = 0x8093;
typedef void (APIENTRYP PFNGLARRAYELEMENTEXTPROC) (GLint i);
typedef void (APIENTRYP PFNGLCOLORPOINTEREXTPROC) (GLint size, GLenum type, GLsizei stride, GLsizei count, const void *pointer);
typedef void (APIENTRYP PFNGLDRAWARRAYSEXTPROC) (GLenum mode, GLint first, GLsizei count);
typedef void (APIENTRYP PFNGLEDGEFLAGPOINTEREXTPROC) (GLsizei stride, GLsizei count, const GLboolean *pointer);
typedef void (APIENTRYP PFNGLGETPOINTERVEXTPROC) (GLenum pname, void **params);
typedef void (APIENTRYP PFNGLINDEXPOINTEREXTPROC) (GLenum type, GLsizei stride, GLsizei count, const void *pointer);
typedef void (APIENTRYP PFNGLNORMALPOINTEREXTPROC) (GLenum type, GLsizei stride, GLsizei count, const void *pointer);
typedef void (APIENTRYP PFNGLTEXCOORDPOINTEREXTPROC) (GLint size, GLenum type, GLsizei stride, GLsizei count, const void *pointer);
typedef void (APIENTRYP PFNGLVERTEXPOINTEREXTPROC) (GLint size, GLenum type, GLsizei stride, GLsizei count, const void *pointer);
// GL_EXT_vertex_array

// GL_EXT_vertex_array_bgra
AXLGLFLAPI bool GL_EXT_vertex_array_bgra;
// GL_EXT_vertex_array_bgra

// GL_EXT_vertex_attrib_64bit
AXLGLFLAPI bool GL_EXT_vertex_attrib_64bit;
AXLGLFLCONSTMODIFIER GLconstant GL_DOUBLE_VEC2_EXT = 0x8FFC;
AXLGLFLCONSTMODIFIER GLconstant GL_DOUBLE_VEC3_EXT = 0x8FFD;
AXLGLFLCONSTMODIFIER GLconstant GL_DOUBLE_VEC4_EXT = 0x8FFE;
AXLGLFLCONSTMODIFIER GLconstant GL_DOUBLE_MAT2_EXT = 0x8F46;
AXLGLFLCONSTMODIFIER GLconstant GL_DOUBLE_MAT3_EXT = 0x8F47;
AXLGLFLCONSTMODIFIER GLconstant GL_DOUBLE_MAT4_EXT = 0x8F48;
AXLGLFLCONSTMODIFIER GLconstant GL_DOUBLE_MAT2x3_EXT = 0x8F49;
AXLGLFLCONSTMODIFIER GLconstant GL_DOUBLE_MAT2x4_EXT = 0x8F4A;
AXLGLFLCONSTMODIFIER GLconstant GL_DOUBLE_MAT3x2_EXT = 0x8F4B;
AXLGLFLCONSTMODIFIER GLconstant GL_DOUBLE_MAT3x4_EXT = 0x8F4C;
AXLGLFLCONSTMODIFIER GLconstant GL_DOUBLE_MAT4x2_EXT = 0x8F4D;
AXLGLFLCONSTMODIFIER GLconstant GL_DOUBLE_MAT4x3_EXT = 0x8F4E;
typedef void (APIENTRYP PFNGLVERTEXATTRIBL1DEXTPROC) (GLuint index, GLdouble x);
typedef void (APIENTRYP PFNGLVERTEXATTRIBL2DEXTPROC) (GLuint index, GLdouble x, GLdouble y);
typedef void (APIENTRYP PFNGLVERTEXATTRIBL3DEXTPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble z);
typedef void (APIENTRYP PFNGLVERTEXATTRIBL4DEXTPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
typedef void (APIENTRYP PFNGLVERTEXATTRIBL1DVEXTPROC) (GLuint index, const GLdouble *v);
typedef void (APIENTRYP PFNGLVERTEXATTRIBL2DVEXTPROC) (GLuint index, const GLdouble *v);
typedef void (APIENTRYP PFNGLVERTEXATTRIBL3DVEXTPROC) (GLuint index, const GLdouble *v);
typedef void (APIENTRYP PFNGLVERTEXATTRIBL4DVEXTPROC) (GLuint index, const GLdouble *v);
typedef void (APIENTRYP PFNGLVERTEXATTRIBLPOINTEREXTPROC) (GLuint index, GLint size, GLenum type, GLsizei stride, const void *pointer);
typedef void (APIENTRYP PFNGLGETVERTEXATTRIBLDVEXTPROC) (GLuint index, GLenum pname, GLdouble *params);
// GL_EXT_vertex_attrib_64bit

// GL_EXT_vertex_shader
AXLGLFLAPI bool GL_EXT_vertex_shader;
AXLGLFLCONSTMODIFIER GLconstant GL_VERTEX_SHADER_EXT = 0x8780;
AXLGLFLCONSTMODIFIER GLconstant GL_VERTEX_SHADER_BINDING_EXT = 0x8781;
AXLGLFLCONSTMODIFIER GLconstant GL_OP_INDEX_EXT = 0x8782;
AXLGLFLCONSTMODIFIER GLconstant GL_OP_NEGATE_EXT = 0x8783;
AXLGLFLCONSTMODIFIER GLconstant GL_OP_DOT3_EXT = 0x8784;
AXLGLFLCONSTMODIFIER GLconstant GL_OP_DOT4_EXT = 0x8785;
AXLGLFLCONSTMODIFIER GLconstant GL_OP_MUL_EXT = 0x8786;
AXLGLFLCONSTMODIFIER GLconstant GL_OP_ADD_EXT = 0x8787;
AXLGLFLCONSTMODIFIER GLconstant GL_OP_MADD_EXT = 0x8788;
AXLGLFLCONSTMODIFIER GLconstant GL_OP_FRAC_EXT = 0x8789;
AXLGLFLCONSTMODIFIER GLconstant GL_OP_MAX_EXT = 0x878A;
AXLGLFLCONSTMODIFIER GLconstant GL_OP_MIN_EXT = 0x878B;
AXLGLFLCONSTMODIFIER GLconstant GL_OP_SET_GE_EXT = 0x878C;
AXLGLFLCONSTMODIFIER GLconstant GL_OP_SET_LT_EXT = 0x878D;
AXLGLFLCONSTMODIFIER GLconstant GL_OP_CLAMP_EXT = 0x878E;
AXLGLFLCONSTMODIFIER GLconstant GL_OP_FLOOR_EXT = 0x878F;
AXLGLFLCONSTMODIFIER GLconstant GL_OP_ROUND_EXT = 0x8790;
AXLGLFLCONSTMODIFIER GLconstant GL_OP_EXP_BASE_2_EXT = 0x8791;
AXLGLFLCONSTMODIFIER GLconstant GL_OP_LOG_BASE_2_EXT = 0x8792;
AXLGLFLCONSTMODIFIER GLconstant GL_OP_POWER_EXT = 0x8793;
AXLGLFLCONSTMODIFIER GLconstant GL_OP_RECIP_EXT = 0x8794;
AXLGLFLCONSTMODIFIER GLconstant GL_OP_RECIP_SQRT_EXT = 0x8795;
AXLGLFLCONSTMODIFIER GLconstant GL_OP_SUB_EXT = 0x8796;
AXLGLFLCONSTMODIFIER GLconstant GL_OP_CROSS_PRODUCT_EXT = 0x8797;
AXLGLFLCONSTMODIFIER GLconstant GL_OP_MULTIPLY_MATRIX_EXT = 0x8798;
AXLGLFLCONSTMODIFIER GLconstant GL_OP_MOV_EXT = 0x8799;
AXLGLFLCONSTMODIFIER GLconstant GL_OUTPUT_VERTEX_EXT = 0x879A;
AXLGLFLCONSTMODIFIER GLconstant GL_OUTPUT_COLOR0_EXT = 0x879B;
AXLGLFLCONSTMODIFIER GLconstant GL_OUTPUT_COLOR1_EXT = 0x879C;
AXLGLFLCONSTMODIFIER GLconstant GL_OUTPUT_TEXTURE_COORD0_EXT = 0x879D;
AXLGLFLCONSTMODIFIER GLconstant GL_OUTPUT_TEXTURE_COORD1_EXT = 0x879E;
AXLGLFLCONSTMODIFIER GLconstant GL_OUTPUT_TEXTURE_COORD2_EXT = 0x879F;
AXLGLFLCONSTMODIFIER GLconstant GL_OUTPUT_TEXTURE_COORD3_EXT = 0x87A0;
AXLGLFLCONSTMODIFIER GLconstant GL_OUTPUT_TEXTURE_COORD4_EXT = 0x87A1;
AXLGLFLCONSTMODIFIER GLconstant GL_OUTPUT_TEXTURE_COORD5_EXT = 0x87A2;
AXLGLFLCONSTMODIFIER GLconstant GL_OUTPUT_TEXTURE_COORD6_EXT = 0x87A3;
AXLGLFLCONSTMODIFIER GLconstant GL_OUTPUT_TEXTURE_COORD7_EXT = 0x87A4;
AXLGLFLCONSTMODIFIER GLconstant GL_OUTPUT_TEXTURE_COORD8_EXT = 0x87A5;
AXLGLFLCONSTMODIFIER GLconstant GL_OUTPUT_TEXTURE_COORD9_EXT = 0x87A6;
AXLGLFLCONSTMODIFIER GLconstant GL_OUTPUT_TEXTURE_COORD10_EXT = 0x87A7;
AXLGLFLCONSTMODIFIER GLconstant GL_OUTPUT_TEXTURE_COORD11_EXT = 0x87A8;
AXLGLFLCONSTMODIFIER GLconstant GL_OUTPUT_TEXTURE_COORD12_EXT = 0x87A9;
AXLGLFLCONSTMODIFIER GLconstant GL_OUTPUT_TEXTURE_COORD13_EXT = 0x87AA;
AXLGLFLCONSTMODIFIER GLconstant GL_OUTPUT_TEXTURE_COORD14_EXT = 0x87AB;
AXLGLFLCONSTMODIFIER GLconstant GL_OUTPUT_TEXTURE_COORD15_EXT = 0x87AC;
AXLGLFLCONSTMODIFIER GLconstant GL_OUTPUT_TEXTURE_COORD16_EXT = 0x87AD;
AXLGLFLCONSTMODIFIER GLconstant GL_OUTPUT_TEXTURE_COORD17_EXT = 0x87AE;
AXLGLFLCONSTMODIFIER GLconstant GL_OUTPUT_TEXTURE_COORD18_EXT = 0x87AF;
AXLGLFLCONSTMODIFIER GLconstant GL_OUTPUT_TEXTURE_COORD19_EXT = 0x87B0;
AXLGLFLCONSTMODIFIER GLconstant GL_OUTPUT_TEXTURE_COORD20_EXT = 0x87B1;
AXLGLFLCONSTMODIFIER GLconstant GL_OUTPUT_TEXTURE_COORD21_EXT = 0x87B2;
AXLGLFLCONSTMODIFIER GLconstant GL_OUTPUT_TEXTURE_COORD22_EXT = 0x87B3;
AXLGLFLCONSTMODIFIER GLconstant GL_OUTPUT_TEXTURE_COORD23_EXT = 0x87B4;
AXLGLFLCONSTMODIFIER GLconstant GL_OUTPUT_TEXTURE_COORD24_EXT = 0x87B5;
AXLGLFLCONSTMODIFIER GLconstant GL_OUTPUT_TEXTURE_COORD25_EXT = 0x87B6;
AXLGLFLCONSTMODIFIER GLconstant GL_OUTPUT_TEXTURE_COORD26_EXT = 0x87B7;
AXLGLFLCONSTMODIFIER GLconstant GL_OUTPUT_TEXTURE_COORD27_EXT = 0x87B8;
AXLGLFLCONSTMODIFIER GLconstant GL_OUTPUT_TEXTURE_COORD28_EXT = 0x87B9;
AXLGLFLCONSTMODIFIER GLconstant GL_OUTPUT_TEXTURE_COORD29_EXT = 0x87BA;
AXLGLFLCONSTMODIFIER GLconstant GL_OUTPUT_TEXTURE_COORD30_EXT = 0x87BB;
AXLGLFLCONSTMODIFIER GLconstant GL_OUTPUT_TEXTURE_COORD31_EXT = 0x87BC;
AXLGLFLCONSTMODIFIER GLconstant GL_OUTPUT_FOG_EXT = 0x87BD;
AXLGLFLCONSTMODIFIER GLconstant GL_SCALAR_EXT = 0x87BE;
AXLGLFLCONSTMODIFIER GLconstant GL_VECTOR_EXT = 0x87BF;
AXLGLFLCONSTMODIFIER GLconstant GL_MATRIX_EXT = 0x87C0;
AXLGLFLCONSTMODIFIER GLconstant GL_VARIANT_EXT = 0x87C1;
AXLGLFLCONSTMODIFIER GLconstant GL_INVARIANT_EXT = 0x87C2;
AXLGLFLCONSTMODIFIER GLconstant GL_LOCAL_CONSTANT_EXT = 0x87C3;
AXLGLFLCONSTMODIFIER GLconstant GL_LOCAL_EXT = 0x87C4;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_VERTEX_SHADER_INSTRUCTIONS_EXT = 0x87C5;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_VERTEX_SHADER_VARIANTS_EXT = 0x87C6;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_VERTEX_SHADER_INVARIANTS_EXT = 0x87C7;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_VERTEX_SHADER_LOCAL_CONSTANTS_EXT = 0x87C8;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_VERTEX_SHADER_LOCALS_EXT = 0x87C9;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_OPTIMIZED_VERTEX_SHADER_INSTRUCTIONS_EXT = 0x87CA;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_OPTIMIZED_VERTEX_SHADER_VARIANTS_EXT = 0x87CB;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_OPTIMIZED_VERTEX_SHADER_LOCAL_CONSTANTS_EXT = 0x87CC;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_OPTIMIZED_VERTEX_SHADER_INVARIANTS_EXT = 0x87CD;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_OPTIMIZED_VERTEX_SHADER_LOCALS_EXT = 0x87CE;
AXLGLFLCONSTMODIFIER GLconstant GL_VERTEX_SHADER_INSTRUCTIONS_EXT = 0x87CF;
AXLGLFLCONSTMODIFIER GLconstant GL_VERTEX_SHADER_VARIANTS_EXT = 0x87D0;
AXLGLFLCONSTMODIFIER GLconstant GL_VERTEX_SHADER_INVARIANTS_EXT = 0x87D1;
AXLGLFLCONSTMODIFIER GLconstant GL_VERTEX_SHADER_LOCAL_CONSTANTS_EXT = 0x87D2;
AXLGLFLCONSTMODIFIER GLconstant GL_VERTEX_SHADER_LOCALS_EXT = 0x87D3;
AXLGLFLCONSTMODIFIER GLconstant GL_VERTEX_SHADER_OPTIMIZED_EXT = 0x87D4;
AXLGLFLCONSTMODIFIER GLconstant GL_X_EXT = 0x87D5;
AXLGLFLCONSTMODIFIER GLconstant GL_Y_EXT = 0x87D6;
AXLGLFLCONSTMODIFIER GLconstant GL_Z_EXT = 0x87D7;
AXLGLFLCONSTMODIFIER GLconstant GL_W_EXT = 0x87D8;
AXLGLFLCONSTMODIFIER GLconstant GL_NEGATIVE_X_EXT = 0x87D9;
AXLGLFLCONSTMODIFIER GLconstant GL_NEGATIVE_Y_EXT = 0x87DA;
AXLGLFLCONSTMODIFIER GLconstant GL_NEGATIVE_Z_EXT = 0x87DB;
AXLGLFLCONSTMODIFIER GLconstant GL_NEGATIVE_W_EXT = 0x87DC;
AXLGLFLCONSTMODIFIER GLconstant GL_ZERO_EXT = 0x87DD;
AXLGLFLCONSTMODIFIER GLconstant GL_ONE_EXT = 0x87DE;
AXLGLFLCONSTMODIFIER GLconstant GL_NEGATIVE_ONE_EXT = 0x87DF;
AXLGLFLCONSTMODIFIER GLconstant GL_NORMALIZED_RANGE_EXT = 0x87E0;
AXLGLFLCONSTMODIFIER GLconstant GL_FULL_RANGE_EXT = 0x87E1;
AXLGLFLCONSTMODIFIER GLconstant GL_CURRENT_VERTEX_EXT = 0x87E2;
AXLGLFLCONSTMODIFIER GLconstant GL_MVP_MATRIX_EXT = 0x87E3;
AXLGLFLCONSTMODIFIER GLconstant GL_VARIANT_VALUE_EXT = 0x87E4;
AXLGLFLCONSTMODIFIER GLconstant GL_VARIANT_DATATYPE_EXT = 0x87E5;
AXLGLFLCONSTMODIFIER GLconstant GL_VARIANT_ARRAY_STRIDE_EXT = 0x87E6;
AXLGLFLCONSTMODIFIER GLconstant GL_VARIANT_ARRAY_TYPE_EXT = 0x87E7;
AXLGLFLCONSTMODIFIER GLconstant GL_VARIANT_ARRAY_EXT = 0x87E8;
AXLGLFLCONSTMODIFIER GLconstant GL_VARIANT_ARRAY_POINTER_EXT = 0x87E9;
AXLGLFLCONSTMODIFIER GLconstant GL_INVARIANT_VALUE_EXT = 0x87EA;
AXLGLFLCONSTMODIFIER GLconstant GL_INVARIANT_DATATYPE_EXT = 0x87EB;
AXLGLFLCONSTMODIFIER GLconstant GL_LOCAL_CONSTANT_VALUE_EXT = 0x87EC;
AXLGLFLCONSTMODIFIER GLconstant GL_LOCAL_CONSTANT_DATATYPE_EXT = 0x87ED;
typedef void (APIENTRYP PFNGLBEGINVERTEXSHADEREXTPROC) (void);
typedef void (APIENTRYP PFNGLENDVERTEXSHADEREXTPROC) (void);
typedef void (APIENTRYP PFNGLBINDVERTEXSHADEREXTPROC) (GLuint id);
typedef GLuint (APIENTRYP PFNGLGENVERTEXSHADERSEXTPROC) (GLuint range);
typedef void (APIENTRYP PFNGLDELETEVERTEXSHADEREXTPROC) (GLuint id);
typedef void (APIENTRYP PFNGLSHADEROP1EXTPROC) (GLenum op, GLuint res, GLuint arg1);
typedef void (APIENTRYP PFNGLSHADEROP2EXTPROC) (GLenum op, GLuint res, GLuint arg1, GLuint arg2);
typedef void (APIENTRYP PFNGLSHADEROP3EXTPROC) (GLenum op, GLuint res, GLuint arg1, GLuint arg2, GLuint arg3);
typedef void (APIENTRYP PFNGLSWIZZLEEXTPROC) (GLuint res, GLuint in, GLenum outX, GLenum outY, GLenum outZ, GLenum outW);
typedef void (APIENTRYP PFNGLWRITEMASKEXTPROC) (GLuint res, GLuint in, GLenum outX, GLenum outY, GLenum outZ, GLenum outW);
typedef void (APIENTRYP PFNGLINSERTCOMPONENTEXTPROC) (GLuint res, GLuint src, GLuint num);
typedef void (APIENTRYP PFNGLEXTRACTCOMPONENTEXTPROC) (GLuint res, GLuint src, GLuint num);
typedef GLuint (APIENTRYP PFNGLGENSYMBOLSEXTPROC) (GLenum datatype, GLenum storagetype, GLenum range, GLuint components);
typedef void (APIENTRYP PFNGLSETINVARIANTEXTPROC) (GLuint id, GLenum type, const void *addr);
typedef void (APIENTRYP PFNGLSETLOCALCONSTANTEXTPROC) (GLuint id, GLenum type, const void *addr);
typedef void (APIENTRYP PFNGLVARIANTBVEXTPROC) (GLuint id, const GLbyte *addr);
typedef void (APIENTRYP PFNGLVARIANTSVEXTPROC) (GLuint id, const GLshort *addr);
typedef void (APIENTRYP PFNGLVARIANTIVEXTPROC) (GLuint id, const GLint *addr);
typedef void (APIENTRYP PFNGLVARIANTFVEXTPROC) (GLuint id, const GLfloat *addr);
typedef void (APIENTRYP PFNGLVARIANTDVEXTPROC) (GLuint id, const GLdouble *addr);
typedef void (APIENTRYP PFNGLVARIANTUBVEXTPROC) (GLuint id, const GLubyte *addr);
typedef void (APIENTRYP PFNGLVARIANTUSVEXTPROC) (GLuint id, const GLushort *addr);
typedef void (APIENTRYP PFNGLVARIANTUIVEXTPROC) (GLuint id, const GLuint *addr);
typedef void (APIENTRYP PFNGLVARIANTPOINTEREXTPROC) (GLuint id, GLenum type, GLuint stride, const void *addr);
typedef void (APIENTRYP PFNGLENABLEVARIANTCLIENTSTATEEXTPROC) (GLuint id);
typedef void (APIENTRYP PFNGLDISABLEVARIANTCLIENTSTATEEXTPROC) (GLuint id);
typedef GLuint (APIENTRYP PFNGLBINDLIGHTPARAMETEREXTPROC) (GLenum light, GLenum value);
typedef GLuint (APIENTRYP PFNGLBINDMATERIALPARAMETEREXTPROC) (GLenum face, GLenum value);
typedef GLuint (APIENTRYP PFNGLBINDTEXGENPARAMETEREXTPROC) (GLenum unit, GLenum coord, GLenum value);
typedef GLuint (APIENTRYP PFNGLBINDTEXTUREUNITPARAMETEREXTPROC) (GLenum unit, GLenum value);
typedef GLuint (APIENTRYP PFNGLBINDPARAMETEREXTPROC) (GLenum value);
typedef GLboolean (APIENTRYP PFNGLISVARIANTENABLEDEXTPROC) (GLuint id, GLenum cap);
typedef void (APIENTRYP PFNGLGETVARIANTBOOLEANVEXTPROC) (GLuint id, GLenum value, GLboolean *data);
typedef void (APIENTRYP PFNGLGETVARIANTINTEGERVEXTPROC) (GLuint id, GLenum value, GLint *data);
typedef void (APIENTRYP PFNGLGETVARIANTFLOATVEXTPROC) (GLuint id, GLenum value, GLfloat *data);
typedef void (APIENTRYP PFNGLGETVARIANTPOINTERVEXTPROC) (GLuint id, GLenum value, void **data);
typedef void (APIENTRYP PFNGLGETINVARIANTBOOLEANVEXTPROC) (GLuint id, GLenum value, GLboolean *data);
typedef void (APIENTRYP PFNGLGETINVARIANTINTEGERVEXTPROC) (GLuint id, GLenum value, GLint *data);
typedef void (APIENTRYP PFNGLGETINVARIANTFLOATVEXTPROC) (GLuint id, GLenum value, GLfloat *data);
typedef void (APIENTRYP PFNGLGETLOCALCONSTANTBOOLEANVEXTPROC) (GLuint id, GLenum value, GLboolean *data);
typedef void (APIENTRYP PFNGLGETLOCALCONSTANTINTEGERVEXTPROC) (GLuint id, GLenum value, GLint *data);
typedef void (APIENTRYP PFNGLGETLOCALCONSTANTFLOATVEXTPROC) (GLuint id, GLenum value, GLfloat *data);
// GL_EXT_vertex_shader

// GL_EXT_vertex_weighting
AXLGLFLAPI bool GL_EXT_vertex_weighting;
AXLGLFLCONSTMODIFIER GLconstant GL_MODELVIEW0_STACK_DEPTH_EXT = 0x0BA3;
AXLGLFLCONSTMODIFIER GLconstant GL_MODELVIEW1_STACK_DEPTH_EXT = 0x8502;
AXLGLFLCONSTMODIFIER GLconstant GL_MODELVIEW0_MATRIX_EXT = 0x0BA6;
AXLGLFLCONSTMODIFIER GLconstant GL_MODELVIEW1_MATRIX_EXT = 0x8506;
AXLGLFLCONSTMODIFIER GLconstant GL_VERTEX_WEIGHTING_EXT = 0x8509;
AXLGLFLCONSTMODIFIER GLconstant GL_MODELVIEW0_EXT = 0x1700;
AXLGLFLCONSTMODIFIER GLconstant GL_MODELVIEW1_EXT = 0x850A;
AXLGLFLCONSTMODIFIER GLconstant GL_CURRENT_VERTEX_WEIGHT_EXT = 0x850B;
AXLGLFLCONSTMODIFIER GLconstant GL_VERTEX_WEIGHT_ARRAY_EXT = 0x850C;
AXLGLFLCONSTMODIFIER GLconstant GL_VERTEX_WEIGHT_ARRAY_SIZE_EXT = 0x850D;
AXLGLFLCONSTMODIFIER GLconstant GL_VERTEX_WEIGHT_ARRAY_TYPE_EXT = 0x850E;
AXLGLFLCONSTMODIFIER GLconstant GL_VERTEX_WEIGHT_ARRAY_STRIDE_EXT = 0x850F;
AXLGLFLCONSTMODIFIER GLconstant GL_VERTEX_WEIGHT_ARRAY_POINTER_EXT = 0x8510;
typedef void (APIENTRYP PFNGLVERTEXWEIGHTFEXTPROC) (GLfloat weight);
typedef void (APIENTRYP PFNGLVERTEXWEIGHTFVEXTPROC) (const GLfloat *weight);
typedef void (APIENTRYP PFNGLVERTEXWEIGHTPOINTEREXTPROC) (GLint size, GLenum type, GLsizei stride, const void *pointer);
// GL_EXT_vertex_weighting

// GL_EXT_win32_keyed_mutex
AXLGLFLAPI bool GL_EXT_win32_keyed_mutex;
typedef GLboolean (APIENTRYP PFNGLACQUIREKEYEDMUTEXWIN32EXTPROC) (GLuint memory, GLuint64 key, GLuint timeout);
typedef GLboolean (APIENTRYP PFNGLRELEASEKEYEDMUTEXWIN32EXTPROC) (GLuint memory, GLuint64 key);
// GL_EXT_win32_keyed_mutex

// GL_EXT_window_rectangles
AXLGLFLAPI bool GL_EXT_window_rectangles;
AXLGLFLCONSTMODIFIER GLconstant GL_INCLUSIVE_EXT = 0x8F10;
AXLGLFLCONSTMODIFIER GLconstant GL_EXCLUSIVE_EXT = 0x8F11;
AXLGLFLCONSTMODIFIER GLconstant GL_WINDOW_RECTANGLE_EXT = 0x8F12;
AXLGLFLCONSTMODIFIER GLconstant GL_WINDOW_RECTANGLE_MODE_EXT = 0x8F13;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_WINDOW_RECTANGLES_EXT = 0x8F14;
AXLGLFLCONSTMODIFIER GLconstant GL_NUM_WINDOW_RECTANGLES_EXT = 0x8F15;
typedef void (APIENTRYP PFNGLWINDOWRECTANGLESEXTPROC) (GLenum mode, GLsizei count, const GLint *box);
// GL_EXT_window_rectangles

// GL_EXT_x11_sync_object
AXLGLFLAPI bool GL_EXT_x11_sync_object;
AXLGLFLCONSTMODIFIER GLconstant GL_SYNC_X11_FENCE_EXT = 0x90E1;
typedef GLsync (APIENTRYP PFNGLIMPORTSYNCEXTPROC) (GLenum external_sync_type, GLintptr external_sync, GLbitfield flags);
// GL_EXT_x11_sync_object

} // namespace GLEXT

namespace GLGREMEDY {

// GL_GREMEDY_frame_terminator
AXLGLFLAPI bool GL_GREMEDY_frame_terminator;
typedef void (APIENTRYP PFNGLFRAMETERMINATORGREMEDYPROC) (void);
// GL_GREMEDY_frame_terminator

// GL_GREMEDY_string_marker
AXLGLFLAPI bool GL_GREMEDY_string_marker;
typedef void (APIENTRYP PFNGLSTRINGMARKERGREMEDYPROC) (GLsizei len, const void *string);
// GL_GREMEDY_string_marker

} // namespace GLGREMEDY

namespace GLHP {

// GL_HP_convolution_border_modes
AXLGLFLAPI bool GL_HP_convolution_border_modes;
AXLGLFLCONSTMODIFIER GLconstant GL_IGNORE_BORDER_HP = 0x8150;
AXLGLFLCONSTMODIFIER GLconstant GL_CONSTANT_BORDER_HP = 0x8151;
AXLGLFLCONSTMODIFIER GLconstant GL_REPLICATE_BORDER_HP = 0x8153;
AXLGLFLCONSTMODIFIER GLconstant GL_CONVOLUTION_BORDER_COLOR_HP = 0x8154;
// GL_HP_convolution_border_modes

// GL_HP_image_transform
AXLGLFLAPI bool GL_HP_image_transform;
AXLGLFLCONSTMODIFIER GLconstant GL_IMAGE_SCALE_X_HP = 0x8155;
AXLGLFLCONSTMODIFIER GLconstant GL_IMAGE_SCALE_Y_HP = 0x8156;
AXLGLFLCONSTMODIFIER GLconstant GL_IMAGE_TRANSLATE_X_HP = 0x8157;
AXLGLFLCONSTMODIFIER GLconstant GL_IMAGE_TRANSLATE_Y_HP = 0x8158;
AXLGLFLCONSTMODIFIER GLconstant GL_IMAGE_ROTATE_ANGLE_HP = 0x8159;
AXLGLFLCONSTMODIFIER GLconstant GL_IMAGE_ROTATE_ORIGIN_X_HP = 0x815A;
AXLGLFLCONSTMODIFIER GLconstant GL_IMAGE_ROTATE_ORIGIN_Y_HP = 0x815B;
AXLGLFLCONSTMODIFIER GLconstant GL_IMAGE_MAG_FILTER_HP = 0x815C;
AXLGLFLCONSTMODIFIER GLconstant GL_IMAGE_MIN_FILTER_HP = 0x815D;
AXLGLFLCONSTMODIFIER GLconstant GL_IMAGE_CUBIC_WEIGHT_HP = 0x815E;
AXLGLFLCONSTMODIFIER GLconstant GL_CUBIC_HP = 0x815F;
AXLGLFLCONSTMODIFIER GLconstant GL_AVERAGE_HP = 0x8160;
AXLGLFLCONSTMODIFIER GLconstant GL_IMAGE_TRANSFORM_2D_HP = 0x8161;
AXLGLFLCONSTMODIFIER GLconstant GL_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP = 0x8162;
AXLGLFLCONSTMODIFIER GLconstant GL_PROXY_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP = 0x8163;
typedef void (APIENTRYP PFNGLIMAGETRANSFORMPARAMETERIHPPROC) (GLenum target, GLenum pname, GLint param);
typedef void (APIENTRYP PFNGLIMAGETRANSFORMPARAMETERFHPPROC) (GLenum target, GLenum pname, GLfloat param);
typedef void (APIENTRYP PFNGLIMAGETRANSFORMPARAMETERIVHPPROC) (GLenum target, GLenum pname, const GLint *params);
typedef void (APIENTRYP PFNGLIMAGETRANSFORMPARAMETERFVHPPROC) (GLenum target, GLenum pname, const GLfloat *params);
typedef void (APIENTRYP PFNGLGETIMAGETRANSFORMPARAMETERIVHPPROC) (GLenum target, GLenum pname, GLint *params);
typedef void (APIENTRYP PFNGLGETIMAGETRANSFORMPARAMETERFVHPPROC) (GLenum target, GLenum pname, GLfloat *params);
// GL_HP_image_transform

// GL_HP_occlusion_test
AXLGLFLAPI bool GL_HP_occlusion_test;
AXLGLFLCONSTMODIFIER GLconstant GL_OCCLUSION_TEST_HP = 0x8165;
AXLGLFLCONSTMODIFIER GLconstant GL_OCCLUSION_TEST_RESULT_HP = 0x8166;
// GL_HP_occlusion_test

// GL_HP_texture_lighting
AXLGLFLAPI bool GL_HP_texture_lighting;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_LIGHTING_MODE_HP = 0x8167;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_POST_SPECULAR_HP = 0x8168;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_PRE_SPECULAR_HP = 0x8169;
// GL_HP_texture_lighting

} // namespace GLHP

namespace GLIBM {

// GL_IBM_cull_vertex
AXLGLFLAPI bool GL_IBM_cull_vertex;
AXLGLFLCONSTMODIFIER GLconstant GL_CULL_VERTEX_IBM = 103050;
// GL_IBM_cull_vertex

// GL_IBM_multimode_draw_arrays
AXLGLFLAPI bool GL_IBM_multimode_draw_arrays;
typedef void (APIENTRYP PFNGLMULTIMODEDRAWARRAYSIBMPROC) (const GLenum *mode, const GLint *first, const GLsizei *count, GLsizei primcount, GLint modestride);
typedef void (APIENTRYP PFNGLMULTIMODEDRAWELEMENTSIBMPROC) (const GLenum *mode, const GLsizei *count, GLenum type, const void *const*indices, GLsizei primcount, GLint modestride);
// GL_IBM_multimode_draw_arrays

// GL_IBM_rasterpos_clip
AXLGLFLAPI bool GL_IBM_rasterpos_clip;
AXLGLFLCONSTMODIFIER GLconstant GL_RASTER_POSITION_UNCLIPPED_IBM = 0x19262;
// GL_IBM_rasterpos_clip

// GL_IBM_static_data
AXLGLFLAPI bool GL_IBM_static_data;
AXLGLFLCONSTMODIFIER GLconstant GL_ALL_STATIC_DATA_IBM = 103060;
AXLGLFLCONSTMODIFIER GLconstant GL_STATIC_VERTEX_ARRAY_IBM = 103061;
typedef void (APIENTRYP PFNGLFLUSHSTATICDATAIBMPROC) (GLenum target);
// GL_IBM_static_data

// GL_IBM_texture_mirrored_repeat
AXLGLFLAPI bool GL_IBM_texture_mirrored_repeat;
AXLGLFLCONSTMODIFIER GLconstant GL_MIRRORED_REPEAT_IBM = 0x8370;
// GL_IBM_texture_mirrored_repeat

// GL_IBM_vertex_array_lists
AXLGLFLAPI bool GL_IBM_vertex_array_lists;
AXLGLFLCONSTMODIFIER GLconstant GL_VERTEX_ARRAY_LIST_IBM = 103070;
AXLGLFLCONSTMODIFIER GLconstant GL_NORMAL_ARRAY_LIST_IBM = 103071;
AXLGLFLCONSTMODIFIER GLconstant GL_COLOR_ARRAY_LIST_IBM = 103072;
AXLGLFLCONSTMODIFIER GLconstant GL_INDEX_ARRAY_LIST_IBM = 103073;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_COORD_ARRAY_LIST_IBM = 103074;
AXLGLFLCONSTMODIFIER GLconstant GL_EDGE_FLAG_ARRAY_LIST_IBM = 103075;
AXLGLFLCONSTMODIFIER GLconstant GL_FOG_COORDINATE_ARRAY_LIST_IBM = 103076;
AXLGLFLCONSTMODIFIER GLconstant GL_SECONDARY_COLOR_ARRAY_LIST_IBM = 103077;
AXLGLFLCONSTMODIFIER GLconstant GL_VERTEX_ARRAY_LIST_STRIDE_IBM = 103080;
AXLGLFLCONSTMODIFIER GLconstant GL_NORMAL_ARRAY_LIST_STRIDE_IBM = 103081;
AXLGLFLCONSTMODIFIER GLconstant GL_COLOR_ARRAY_LIST_STRIDE_IBM = 103082;
AXLGLFLCONSTMODIFIER GLconstant GL_INDEX_ARRAY_LIST_STRIDE_IBM = 103083;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_COORD_ARRAY_LIST_STRIDE_IBM = 103084;
AXLGLFLCONSTMODIFIER GLconstant GL_EDGE_FLAG_ARRAY_LIST_STRIDE_IBM = 103085;
AXLGLFLCONSTMODIFIER GLconstant GL_FOG_COORDINATE_ARRAY_LIST_STRIDE_IBM = 103086;
AXLGLFLCONSTMODIFIER GLconstant GL_SECONDARY_COLOR_ARRAY_LIST_STRIDE_IBM = 103087;
typedef void (APIENTRYP PFNGLCOLORPOINTERLISTIBMPROC) (GLint size, GLenum type, GLint stride, const void **pointer, GLint ptrstride);
typedef void (APIENTRYP PFNGLSECONDARYCOLORPOINTERLISTIBMPROC) (GLint size, GLenum type, GLint stride, const void **pointer, GLint ptrstride);
typedef void (APIENTRYP PFNGLEDGEFLAGPOINTERLISTIBMPROC) (GLint stride, const GLboolean **pointer, GLint ptrstride);
typedef void (APIENTRYP PFNGLFOGCOORDPOINTERLISTIBMPROC) (GLenum type, GLint stride, const void **pointer, GLint ptrstride);
typedef void (APIENTRYP PFNGLINDEXPOINTERLISTIBMPROC) (GLenum type, GLint stride, const void **pointer, GLint ptrstride);
typedef void (APIENTRYP PFNGLNORMALPOINTERLISTIBMPROC) (GLenum type, GLint stride, const void **pointer, GLint ptrstride);
typedef void (APIENTRYP PFNGLTEXCOORDPOINTERLISTIBMPROC) (GLint size, GLenum type, GLint stride, const void **pointer, GLint ptrstride);
typedef void (APIENTRYP PFNGLVERTEXPOINTERLISTIBMPROC) (GLint size, GLenum type, GLint stride, const void **pointer, GLint ptrstride);
// GL_IBM_vertex_array_lists

} // namespace GLIBM

namespace GLINGR {

// GL_INGR_blend_func_separate
AXLGLFLAPI bool GL_INGR_blend_func_separate;
typedef void (APIENTRYP PFNGLBLENDFUNCSEPARATEINGRPROC) (GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha);
// GL_INGR_blend_func_separate

// GL_INGR_color_clamp
AXLGLFLAPI bool GL_INGR_color_clamp;
AXLGLFLCONSTMODIFIER GLconstant GL_RED_MIN_CLAMP_INGR = 0x8560;
AXLGLFLCONSTMODIFIER GLconstant GL_GREEN_MIN_CLAMP_INGR = 0x8561;
AXLGLFLCONSTMODIFIER GLconstant GL_BLUE_MIN_CLAMP_INGR = 0x8562;
AXLGLFLCONSTMODIFIER GLconstant GL_ALPHA_MIN_CLAMP_INGR = 0x8563;
AXLGLFLCONSTMODIFIER GLconstant GL_RED_MAX_CLAMP_INGR = 0x8564;
AXLGLFLCONSTMODIFIER GLconstant GL_GREEN_MAX_CLAMP_INGR = 0x8565;
AXLGLFLCONSTMODIFIER GLconstant GL_BLUE_MAX_CLAMP_INGR = 0x8566;
AXLGLFLCONSTMODIFIER GLconstant GL_ALPHA_MAX_CLAMP_INGR = 0x8567;
// GL_INGR_color_clamp

// GL_INGR_interlace_read
AXLGLFLAPI bool GL_INGR_interlace_read;
AXLGLFLCONSTMODIFIER GLconstant GL_INTERLACE_READ_INGR = 0x8568;
// GL_INGR_interlace_read

} // namespace GLINGR

namespace GLINTEL {

// GL_INTEL_blackhole_render
AXLGLFLAPI bool GL_INTEL_blackhole_render;
AXLGLFLCONSTMODIFIER GLconstant GL_BLACKHOLE_RENDER_INTEL = 0x83FC;
// GL_INTEL_blackhole_render

// GL_INTEL_conservative_rasterization
AXLGLFLAPI bool GL_INTEL_conservative_rasterization;
AXLGLFLCONSTMODIFIER GLconstant GL_CONSERVATIVE_RASTERIZATION_INTEL = 0x83FE;
// GL_INTEL_conservative_rasterization

// GL_INTEL_fragment_shader_ordering
AXLGLFLAPI bool GL_INTEL_fragment_shader_ordering;
// GL_INTEL_fragment_shader_ordering

// GL_INTEL_framebuffer_CMAA
AXLGLFLAPI bool GL_INTEL_framebuffer_CMAA;
typedef void (APIENTRYP PFNGLAPPLYFRAMEBUFFERATTACHMENTCMAAINTELPROC) (void);
// GL_INTEL_framebuffer_CMAA

// GL_INTEL_map_texture
AXLGLFLAPI bool GL_INTEL_map_texture;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_MEMORY_LAYOUT_INTEL = 0x83FF;
AXLGLFLCONSTMODIFIER GLconstant GL_LAYOUT_DEFAULT_INTEL = 0;
AXLGLFLCONSTMODIFIER GLconstant GL_LAYOUT_LINEAR_INTEL = 1;
AXLGLFLCONSTMODIFIER GLconstant GL_LAYOUT_LINEAR_CPU_CACHED_INTEL = 2;
typedef void (APIENTRYP PFNGLSYNCTEXTUREINTELPROC) (GLuint texture);
typedef void (APIENTRYP PFNGLUNMAPTEXTURE2DINTELPROC) (GLuint texture, GLint level);
typedef void *(APIENTRYP PFNGLMAPTEXTURE2DINTELPROC) (GLuint texture, GLint level, GLbitfield access, GLint *stride, GLenum *layout);
// GL_INTEL_map_texture

// GL_INTEL_parallel_arrays
AXLGLFLAPI bool GL_INTEL_parallel_arrays;
AXLGLFLCONSTMODIFIER GLconstant GL_PARALLEL_ARRAYS_INTEL = 0x83F4;
AXLGLFLCONSTMODIFIER GLconstant GL_VERTEX_ARRAY_PARALLEL_POINTERS_INTEL = 0x83F5;
AXLGLFLCONSTMODIFIER GLconstant GL_NORMAL_ARRAY_PARALLEL_POINTERS_INTEL = 0x83F6;
AXLGLFLCONSTMODIFIER GLconstant GL_COLOR_ARRAY_PARALLEL_POINTERS_INTEL = 0x83F7;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_COORD_ARRAY_PARALLEL_POINTERS_INTEL = 0x83F8;
typedef void (APIENTRYP PFNGLVERTEXPOINTERVINTELPROC) (GLint size, GLenum type, const void **pointer);
typedef void (APIENTRYP PFNGLNORMALPOINTERVINTELPROC) (GLenum type, const void **pointer);
typedef void (APIENTRYP PFNGLCOLORPOINTERVINTELPROC) (GLint size, GLenum type, const void **pointer);
typedef void (APIENTRYP PFNGLTEXCOORDPOINTERVINTELPROC) (GLint size, GLenum type, const void **pointer);
// GL_INTEL_parallel_arrays

// GL_INTEL_performance_query
AXLGLFLAPI bool GL_INTEL_performance_query;
AXLGLFLCONSTMODIFIER GLconstant GL_PERFQUERY_SINGLE_CONTEXT_INTEL = 0x000000;00
AXLGLFLCONSTMODIFIER GLconstant GL_PERFQUERY_GLOBAL_CONTEXT_INTEL = 0x000000;01
AXLGLFLCONSTMODIFIER GLconstant GL_PERFQUERY_WAIT_INTEL = 0x83FB;
AXLGLFLCONSTMODIFIER GLconstant GL_PERFQUERY_FLUSH_INTEL = 0x83FA;
AXLGLFLCONSTMODIFIER GLconstant GL_PERFQUERY_DONOT_FLUSH_INTEL = 0x83F9;
AXLGLFLCONSTMODIFIER GLconstant GL_PERFQUERY_COUNTER_EVENT_INTEL = 0x94F0;
AXLGLFLCONSTMODIFIER GLconstant GL_PERFQUERY_COUNTER_DURATION_NORM_INTEL = 0x94F1;
AXLGLFLCONSTMODIFIER GLconstant GL_PERFQUERY_COUNTER_DURATION_RAW_INTEL = 0x94F2;
AXLGLFLCONSTMODIFIER GLconstant GL_PERFQUERY_COUNTER_THROUGHPUT_INTEL = 0x94F3;
AXLGLFLCONSTMODIFIER GLconstant GL_PERFQUERY_COUNTER_RAW_INTEL = 0x94F4;
AXLGLFLCONSTMODIFIER GLconstant GL_PERFQUERY_COUNTER_TIMESTAMP_INTEL = 0x94F5;
AXLGLFLCONSTMODIFIER GLconstant GL_PERFQUERY_COUNTER_DATA_UINT32_INTEL = 0x94F8;
AXLGLFLCONSTMODIFIER GLconstant GL_PERFQUERY_COUNTER_DATA_UINT64_INTEL = 0x94F9;
AXLGLFLCONSTMODIFIER GLconstant GL_PERFQUERY_COUNTER_DATA_FLOAT_INTEL = 0x94FA;
AXLGLFLCONSTMODIFIER GLconstant GL_PERFQUERY_COUNTER_DATA_DOUBLE_INTEL = 0x94FB;
AXLGLFLCONSTMODIFIER GLconstant GL_PERFQUERY_COUNTER_DATA_BOOL32_INTEL = 0x94FC;
AXLGLFLCONSTMODIFIER GLconstant GL_PERFQUERY_QUERY_NAME_LENGTH_MAX_INTEL = 0x94FD;
AXLGLFLCONSTMODIFIER GLconstant GL_PERFQUERY_COUNTER_NAME_LENGTH_MAX_INTEL = 0x94FE;
AXLGLFLCONSTMODIFIER GLconstant GL_PERFQUERY_COUNTER_DESC_LENGTH_MAX_INTEL = 0x94FF;
AXLGLFLCONSTMODIFIER GLconstant GL_PERFQUERY_GPA_EXTENDED_COUNTERS_INTEL = 0x9500;
typedef void (APIENTRYP PFNGLBEGINPERFQUERYINTELPROC) (GLuint queryHandle);
typedef void (APIENTRYP PFNGLCREATEPERFQUERYINTELPROC) (GLuint queryId, GLuint *queryHandle);
typedef void (APIENTRYP PFNGLDELETEPERFQUERYINTELPROC) (GLuint queryHandle);
typedef void (APIENTRYP PFNGLENDPERFQUERYINTELPROC) (GLuint queryHandle);
typedef void (APIENTRYP PFNGLGETFIRSTPERFQUERYIDINTELPROC) (GLuint *queryId);
typedef void (APIENTRYP PFNGLGETNEXTPERFQUERYIDINTELPROC) (GLuint queryId, GLuint *nextQueryId);
typedef void (APIENTRYP PFNGLGETPERFCOUNTERINFOINTELPROC) (GLuint queryId, GLuint counterId, GLuint counterNameLength, GLchar *counterName, GLuint counterDescLength, GLchar *counterDesc, GLuint *counterOffset, GLuint *counterDataSize, GLuint *counterTypeEnum, GLuint *counterDataTypeEnum, GLuint64 *rawCounterMaxValue);
typedef void (APIENTRYP PFNGLGETPERFQUERYDATAINTELPROC) (GLuint queryHandle, GLuint flags, GLsizei dataSize, void *data, GLuint *bytesWritten);
typedef void (APIENTRYP PFNGLGETPERFQUERYIDBYNAMEINTELPROC) (GLchar *queryName, GLuint *queryId);
typedef void (APIENTRYP PFNGLGETPERFQUERYINFOINTELPROC) (GLuint queryId, GLuint queryNameLength, GLchar *queryName, GLuint *dataSize, GLuint *noCounters, GLuint *noInstances, GLuint *capsMask);
// GL_INTEL_performance_query

} // namespace GLINTEL

namespace GLMESAX {

// GL_MESAX_texture_stack
AXLGLFLAPI bool GL_MESAX_texture_stack;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_1D_STACK_MESAX = 0x8759;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_2D_STACK_MESAX = 0x875A;
AXLGLFLCONSTMODIFIER GLconstant GL_PROXY_TEXTURE_1D_STACK_MESAX = 0x875B;
AXLGLFLCONSTMODIFIER GLconstant GL_PROXY_TEXTURE_2D_STACK_MESAX = 0x875C;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_1D_STACK_BINDING_MESAX = 0x875D;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_2D_STACK_BINDING_MESAX = 0x875E;
// GL_MESAX_texture_stack

} // namespace GLMESAX

namespace GLMESA {

// GL_MESA_framebuffer_flip_x
AXLGLFLAPI bool GL_MESA_framebuffer_flip_x;
AXLGLFLCONSTMODIFIER GLconstant GL_FRAMEBUFFER_FLIP_X_MESA = 0x8BBC;
// GL_MESA_framebuffer_flip_x

// GL_MESA_framebuffer_flip_y
AXLGLFLAPI bool GL_MESA_framebuffer_flip_y;
AXLGLFLCONSTMODIFIER GLconstant GL_FRAMEBUFFER_FLIP_Y_MESA = 0x8BBB;
typedef void (APIENTRYP PFNGLFRAMEBUFFERPARAMETERIMESAPROC) (GLenum target, GLenum pname, GLint param);
typedef void (APIENTRYP PFNGLGETFRAMEBUFFERPARAMETERIVMESAPROC) (GLenum target, GLenum pname, GLint *params);
// GL_MESA_framebuffer_flip_y

// GL_MESA_framebuffer_swap_xy
AXLGLFLAPI bool GL_MESA_framebuffer_swap_xy;
AXLGLFLCONSTMODIFIER GLconstant GL_FRAMEBUFFER_SWAP_XY_MESA = 0x8BBD;
// GL_MESA_framebuffer_swap_xy

// GL_MESA_pack_invert
AXLGLFLAPI bool GL_MESA_pack_invert;
AXLGLFLCONSTMODIFIER GLconstant GL_PACK_INVERT_MESA = 0x8758;
// GL_MESA_pack_invert

// GL_MESA_program_binary_formats
AXLGLFLAPI bool GL_MESA_program_binary_formats;
AXLGLFLCONSTMODIFIER GLconstant GL_PROGRAM_BINARY_FORMAT_MESA = 0x875F;
// GL_MESA_program_binary_formats

// GL_MESA_resize_buffers
AXLGLFLAPI bool GL_MESA_resize_buffers;
typedef void (APIENTRYP PFNGLRESIZEBUFFERSMESAPROC) (void);
// GL_MESA_resize_buffers

// GL_MESA_shader_integer_functions
AXLGLFLAPI bool GL_MESA_shader_integer_functions;
// GL_MESA_shader_integer_functions

// GL_MESA_tile_raster_order
AXLGLFLAPI bool GL_MESA_tile_raster_order;
AXLGLFLCONSTMODIFIER GLconstant GL_TILE_RASTER_ORDER_FIXED_MESA = 0x8BB8;
AXLGLFLCONSTMODIFIER GLconstant GL_TILE_RASTER_ORDER_INCREASING_X_MESA = 0x8BB9;
AXLGLFLCONSTMODIFIER GLconstant GL_TILE_RASTER_ORDER_INCREASING_Y_MESA = 0x8BBA;
// GL_MESA_tile_raster_order

// GL_MESA_window_pos
AXLGLFLAPI bool GL_MESA_window_pos;
typedef void (APIENTRYP PFNGLWINDOWPOS2DMESAPROC) (GLdouble x, GLdouble y);
typedef void (APIENTRYP PFNGLWINDOWPOS2DVMESAPROC) (const GLdouble *v);
typedef void (APIENTRYP PFNGLWINDOWPOS2FMESAPROC) (GLfloat x, GLfloat y);
typedef void (APIENTRYP PFNGLWINDOWPOS2FVMESAPROC) (const GLfloat *v);
typedef void (APIENTRYP PFNGLWINDOWPOS2IMESAPROC) (GLint x, GLint y);
typedef void (APIENTRYP PFNGLWINDOWPOS2IVMESAPROC) (const GLint *v);
typedef void (APIENTRYP PFNGLWINDOWPOS2SMESAPROC) (GLshort x, GLshort y);
typedef void (APIENTRYP PFNGLWINDOWPOS2SVMESAPROC) (const GLshort *v);
typedef void (APIENTRYP PFNGLWINDOWPOS3DMESAPROC) (GLdouble x, GLdouble y, GLdouble z);
typedef void (APIENTRYP PFNGLWINDOWPOS3DVMESAPROC) (const GLdouble *v);
typedef void (APIENTRYP PFNGLWINDOWPOS3FMESAPROC) (GLfloat x, GLfloat y, GLfloat z);
typedef void (APIENTRYP PFNGLWINDOWPOS3FVMESAPROC) (const GLfloat *v);
typedef void (APIENTRYP PFNGLWINDOWPOS3IMESAPROC) (GLint x, GLint y, GLint z);
typedef void (APIENTRYP PFNGLWINDOWPOS3IVMESAPROC) (const GLint *v);
typedef void (APIENTRYP PFNGLWINDOWPOS3SMESAPROC) (GLshort x, GLshort y, GLshort z);
typedef void (APIENTRYP PFNGLWINDOWPOS3SVMESAPROC) (const GLshort *v);
typedef void (APIENTRYP PFNGLWINDOWPOS4DMESAPROC) (GLdouble x, GLdouble y, GLdouble z, GLdouble w);
typedef void (APIENTRYP PFNGLWINDOWPOS4DVMESAPROC) (const GLdouble *v);
typedef void (APIENTRYP PFNGLWINDOWPOS4FMESAPROC) (GLfloat x, GLfloat y, GLfloat z, GLfloat w);
typedef void (APIENTRYP PFNGLWINDOWPOS4FVMESAPROC) (const GLfloat *v);
typedef void (APIENTRYP PFNGLWINDOWPOS4IMESAPROC) (GLint x, GLint y, GLint z, GLint w);
typedef void (APIENTRYP PFNGLWINDOWPOS4IVMESAPROC) (const GLint *v);
typedef void (APIENTRYP PFNGLWINDOWPOS4SMESAPROC) (GLshort x, GLshort y, GLshort z, GLshort w);
typedef void (APIENTRYP PFNGLWINDOWPOS4SVMESAPROC) (const GLshort *v);
// GL_MESA_window_pos

// GL_MESA_ycbcr_texture
AXLGLFLAPI bool GL_MESA_ycbcr_texture;
AXLGLFLCONSTMODIFIER GLconstant GL_UNSIGNED_SHORT_8_8_MESA = 0x85BA;
AXLGLFLCONSTMODIFIER GLconstant GL_UNSIGNED_SHORT_8_8_REV_MESA = 0x85BB;
AXLGLFLCONSTMODIFIER GLconstant GL_YCBCR_MESA = 0x8757;
// GL_MESA_ycbcr_texture

} // namespace GLMESA

namespace GLNVX {

// GL_NVX_blend_equation_advanced_multi_draw_buffers
AXLGLFLAPI bool GL_NVX_blend_equation_advanced_multi_draw_buffers;
// GL_NVX_blend_equation_advanced_multi_draw_buffers

// GL_NVX_conditional_render
AXLGLFLAPI bool GL_NVX_conditional_render;
typedef void (APIENTRYP PFNGLBEGINCONDITIONALRENDERNVXPROC) (GLuint id);
typedef void (APIENTRYP PFNGLENDCONDITIONALRENDERNVXPROC) (void);
// GL_NVX_conditional_render

// GL_NVX_gpu_memory_info
AXLGLFLAPI bool GL_NVX_gpu_memory_info;
AXLGLFLCONSTMODIFIER GLconstant GL_GPU_MEMORY_INFO_DEDICATED_VIDMEM_NVX = 0x9047;
AXLGLFLCONSTMODIFIER GLconstant GL_GPU_MEMORY_INFO_TOTAL_AVAILABLE_MEMORY_NVX = 0x9048;
AXLGLFLCONSTMODIFIER GLconstant GL_GPU_MEMORY_INFO_CURRENT_AVAILABLE_VIDMEM_NVX = 0x9049;
AXLGLFLCONSTMODIFIER GLconstant GL_GPU_MEMORY_INFO_EVICTION_COUNT_NVX = 0x904A;
AXLGLFLCONSTMODIFIER GLconstant GL_GPU_MEMORY_INFO_EVICTED_MEMORY_NVX = 0x904B;
// GL_NVX_gpu_memory_info

// GL_NVX_gpu_multicast2
AXLGLFLAPI bool GL_NVX_gpu_multicast2;
AXLGLFLCONSTMODIFIER GLconstant GL_UPLOAD_GPU_MASK_NVX = 0x954A;
typedef void (APIENTRYP PFNGLUPLOADGPUMASKNVXPROC) (GLbitfield mask);
typedef void (APIENTRYP PFNGLMULTICASTVIEWPORTARRAYVNVXPROC) (GLuint gpu, GLuint first, GLsizei count, const GLfloat *v);
typedef void (APIENTRYP PFNGLMULTICASTVIEWPORTPOSITIONWSCALENVXPROC) (GLuint gpu, GLuint index, GLfloat xcoeff, GLfloat ycoeff);
typedef void (APIENTRYP PFNGLMULTICASTSCISSORARRAYVNVXPROC) (GLuint gpu, GLuint first, GLsizei count, const GLint *v);
typedef GLuint (APIENTRYP PFNGLASYNCCOPYBUFFERSUBDATANVXPROC) (GLsizei waitSemaphoreCount, const GLuint *waitSemaphoreArray, const GLuint64 *fenceValueArray, GLuint readGpu, GLbitfield writeGpuMask, GLuint readBuffer, GLuint writeBuffer, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size, GLsizei signalSemaphoreCount, const GLuint *signalSemaphoreArray, const GLuint64 *signalValueArray);
typedef GLuint (APIENTRYP PFNGLASYNCCOPYIMAGESUBDATANVXPROC) (GLsizei waitSemaphoreCount, const GLuint *waitSemaphoreArray, const GLuint64 *waitValueArray, GLuint srcGpu, GLbitfield dstGpuMask, GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint srcX, GLint srcY, GLint srcZ, GLuint dstName, GLenum dstTarget, GLint dstLevel, GLint dstX, GLint dstY, GLint dstZ, GLsizei srcWidth, GLsizei srcHeight, GLsizei srcDepth, GLsizei signalSemaphoreCount, const GLuint *signalSemaphoreArray, const GLuint64 *signalValueArray);
// GL_NVX_gpu_multicast2

// GL_NVX_linked_gpu_multicast
AXLGLFLAPI bool GL_NVX_linked_gpu_multicast;
AXLGLFLCONSTMODIFIER GLconstant GL_LGPU_SEPARATE_STORAGE_BIT_NVX = 0x0800;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_LGPU_GPUS_NVX = 0x92BA;
typedef void (APIENTRYP PFNGLLGPUNAMEDBUFFERSUBDATANVXPROC) (GLbitfield gpuMask, GLuint buffer, GLintptr offset, GLsizeiptr size, const void *data);
typedef void (APIENTRYP PFNGLLGPUCOPYIMAGESUBDATANVXPROC) (GLuint sourceGpu, GLbitfield destinationGpuMask, GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint srcX, GLint srxY, GLint srcZ, GLuint dstName, GLenum dstTarget, GLint dstLevel, GLint dstX, GLint dstY, GLint dstZ, GLsizei width, GLsizei height, GLsizei depth);
typedef void (APIENTRYP PFNGLLGPUINTERLOCKNVXPROC) (void);
// GL_NVX_linked_gpu_multicast

// GL_NVX_progress_fence
AXLGLFLAPI bool GL_NVX_progress_fence;
typedef GLuint (APIENTRYP PFNGLCREATEPROGRESSFENCENVXPROC) (void);
typedef void (APIENTRYP PFNGLSIGNALSEMAPHOREUI64NVXPROC) (GLuint signalGpu, GLsizei fenceObjectCount, const GLuint *semaphoreArray, const GLuint64 *fenceValueArray);
typedef void (APIENTRYP PFNGLWAITSEMAPHOREUI64NVXPROC) (GLuint waitGpu, GLsizei fenceObjectCount, const GLuint *semaphoreArray, const GLuint64 *fenceValueArray);
typedef void (APIENTRYP PFNGLCLIENTWAITSEMAPHOREUI64NVXPROC) (GLsizei fenceObjectCount, const GLuint *semaphoreArray, const GLuint64 *fenceValueArray);
// GL_NVX_progress_fence

} // namespace GLNVX

namespace GLNV {

// GL_NV_alpha_to_coverage_dither_control
AXLGLFLAPI bool GL_NV_alpha_to_coverage_dither_control;
AXLGLFLCONSTMODIFIER GLconstant GL_ALPHA_TO_COVERAGE_DITHER_DEFAULT_NV = 0x934D;
AXLGLFLCONSTMODIFIER GLconstant GL_ALPHA_TO_COVERAGE_DITHER_ENABLE_NV = 0x934E;
AXLGLFLCONSTMODIFIER GLconstant GL_ALPHA_TO_COVERAGE_DITHER_DISABLE_NV = 0x934F;
AXLGLFLCONSTMODIFIER GLconstant GL_ALPHA_TO_COVERAGE_DITHER_MODE_NV = 0x92BF;
typedef void (APIENTRYP PFNGLALPHATOCOVERAGEDITHERCONTROLNVPROC) (GLenum mode);
// GL_NV_alpha_to_coverage_dither_control

// GL_NV_bindless_multi_draw_indirect
AXLGLFLAPI bool GL_NV_bindless_multi_draw_indirect;
typedef void (APIENTRYP PFNGLMULTIDRAWARRAYSINDIRECTBINDLESSNVPROC) (GLenum mode, const void *indirect, GLsizei drawCount, GLsizei stride, GLint vertexBufferCount);
typedef void (APIENTRYP PFNGLMULTIDRAWELEMENTSINDIRECTBINDLESSNVPROC) (GLenum mode, GLenum type, const void *indirect, GLsizei drawCount, GLsizei stride, GLint vertexBufferCount);
// GL_NV_bindless_multi_draw_indirect

// GL_NV_bindless_multi_draw_indirect_count
AXLGLFLAPI bool GL_NV_bindless_multi_draw_indirect_count;
typedef void (APIENTRYP PFNGLMULTIDRAWARRAYSINDIRECTBINDLESSCOUNTNVPROC) (GLenum mode, const void *indirect, GLsizei drawCount, GLsizei maxDrawCount, GLsizei stride, GLint vertexBufferCount);
typedef void (APIENTRYP PFNGLMULTIDRAWELEMENTSINDIRECTBINDLESSCOUNTNVPROC) (GLenum mode, GLenum type, const void *indirect, GLsizei drawCount, GLsizei maxDrawCount, GLsizei stride, GLint vertexBufferCount);
// GL_NV_bindless_multi_draw_indirect_count

// GL_NV_bindless_texture
AXLGLFLAPI bool GL_NV_bindless_texture;
typedef GLuint64 (APIENTRYP PFNGLGETTEXTUREHANDLENVPROC) (GLuint texture);
typedef GLuint64 (APIENTRYP PFNGLGETTEXTURESAMPLERHANDLENVPROC) (GLuint texture, GLuint sampler);
typedef void (APIENTRYP PFNGLMAKETEXTUREHANDLERESIDENTNVPROC) (GLuint64 handle);
typedef void (APIENTRYP PFNGLMAKETEXTUREHANDLENONRESIDENTNVPROC) (GLuint64 handle);
typedef GLuint64 (APIENTRYP PFNGLGETIMAGEHANDLENVPROC) (GLuint texture, GLint level, GLboolean layered, GLint layer, GLenum format);
typedef void (APIENTRYP PFNGLMAKEIMAGEHANDLERESIDENTNVPROC) (GLuint64 handle, GLenum access);
typedef void (APIENTRYP PFNGLMAKEIMAGEHANDLENONRESIDENTNVPROC) (GLuint64 handle);
typedef void (APIENTRYP PFNGLUNIFORMHANDLEUI64NVPROC) (GLint location, GLuint64 value);
typedef void (APIENTRYP PFNGLUNIFORMHANDLEUI64VNVPROC) (GLint location, GLsizei count, const GLuint64 *value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMHANDLEUI64NVPROC) (GLuint program, GLint location, GLuint64 value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMHANDLEUI64VNVPROC) (GLuint program, GLint location, GLsizei count, const GLuint64 *values);
typedef GLboolean (APIENTRYP PFNGLISTEXTUREHANDLERESIDENTNVPROC) (GLuint64 handle);
typedef GLboolean (APIENTRYP PFNGLISIMAGEHANDLERESIDENTNVPROC) (GLuint64 handle);
// GL_NV_bindless_texture

// GL_NV_blend_equation_advanced
AXLGLFLAPI bool GL_NV_blend_equation_advanced;
AXLGLFLCONSTMODIFIER GLconstant GL_BLEND_OVERLAP_NV = 0x9281;
AXLGLFLCONSTMODIFIER GLconstant GL_BLEND_PREMULTIPLIED_SRC_NV = 0x9280;
AXLGLFLCONSTMODIFIER GLconstant GL_BLUE_NV = 0x1905;
AXLGLFLCONSTMODIFIER GLconstant GL_COLORBURN_NV = 0x929A;
AXLGLFLCONSTMODIFIER GLconstant GL_COLORDODGE_NV = 0x9299;
AXLGLFLCONSTMODIFIER GLconstant GL_CONJOINT_NV = 0x9284;
AXLGLFLCONSTMODIFIER GLconstant GL_CONTRAST_NV = 0x92A1;
AXLGLFLCONSTMODIFIER GLconstant GL_DARKEN_NV = 0x9297;
AXLGLFLCONSTMODIFIER GLconstant GL_DIFFERENCE_NV = 0x929E;
AXLGLFLCONSTMODIFIER GLconstant GL_DISJOINT_NV = 0x9283;
AXLGLFLCONSTMODIFIER GLconstant GL_DST_ATOP_NV = 0x928F;
AXLGLFLCONSTMODIFIER GLconstant GL_DST_IN_NV = 0x928B;
AXLGLFLCONSTMODIFIER GLconstant GL_DST_NV = 0x9287;
AXLGLFLCONSTMODIFIER GLconstant GL_DST_OUT_NV = 0x928D;
AXLGLFLCONSTMODIFIER GLconstant GL_DST_OVER_NV = 0x9289;
AXLGLFLCONSTMODIFIER GLconstant GL_EXCLUSION_NV = 0x92A0;
AXLGLFLCONSTMODIFIER GLconstant GL_GREEN_NV = 0x1904;
AXLGLFLCONSTMODIFIER GLconstant GL_HARDLIGHT_NV = 0x929B;
AXLGLFLCONSTMODIFIER GLconstant GL_HARDMIX_NV = 0x92A9;
AXLGLFLCONSTMODIFIER GLconstant GL_HSL_COLOR_NV = 0x92AF;
AXLGLFLCONSTMODIFIER GLconstant GL_HSL_HUE_NV = 0x92AD;
AXLGLFLCONSTMODIFIER GLconstant GL_HSL_LUMINOSITY_NV = 0x92B0;
AXLGLFLCONSTMODIFIER GLconstant GL_HSL_SATURATION_NV = 0x92AE;
AXLGLFLCONSTMODIFIER GLconstant GL_INVERT_OVG_NV = 0x92B4;
AXLGLFLCONSTMODIFIER GLconstant GL_INVERT_RGB_NV = 0x92A3;
AXLGLFLCONSTMODIFIER GLconstant GL_LIGHTEN_NV = 0x9298;
AXLGLFLCONSTMODIFIER GLconstant GL_LINEARBURN_NV = 0x92A5;
AXLGLFLCONSTMODIFIER GLconstant GL_LINEARDODGE_NV = 0x92A4;
AXLGLFLCONSTMODIFIER GLconstant GL_LINEARLIGHT_NV = 0x92A7;
AXLGLFLCONSTMODIFIER GLconstant GL_MINUS_CLAMPED_NV = 0x92B3;
AXLGLFLCONSTMODIFIER GLconstant GL_MINUS_NV = 0x929F;
AXLGLFLCONSTMODIFIER GLconstant GL_MULTIPLY_NV = 0x9294;
AXLGLFLCONSTMODIFIER GLconstant GL_OVERLAY_NV = 0x9296;
AXLGLFLCONSTMODIFIER GLconstant GL_PINLIGHT_NV = 0x92A8;
AXLGLFLCONSTMODIFIER GLconstant GL_PLUS_CLAMPED_ALPHA_NV = 0x92B2;
AXLGLFLCONSTMODIFIER GLconstant GL_PLUS_CLAMPED_NV = 0x92B1;
AXLGLFLCONSTMODIFIER GLconstant GL_PLUS_DARKER_NV = 0x9292;
AXLGLFLCONSTMODIFIER GLconstant GL_PLUS_NV = 0x9291;
AXLGLFLCONSTMODIFIER GLconstant GL_RED_NV = 0x1903;
AXLGLFLCONSTMODIFIER GLconstant GL_SCREEN_NV = 0x9295;
AXLGLFLCONSTMODIFIER GLconstant GL_SOFTLIGHT_NV = 0x929C;
AXLGLFLCONSTMODIFIER GLconstant GL_SRC_ATOP_NV = 0x928E;
AXLGLFLCONSTMODIFIER GLconstant GL_SRC_IN_NV = 0x928A;
AXLGLFLCONSTMODIFIER GLconstant GL_SRC_NV = 0x9286;
AXLGLFLCONSTMODIFIER GLconstant GL_SRC_OUT_NV = 0x928C;
AXLGLFLCONSTMODIFIER GLconstant GL_SRC_OVER_NV = 0x9288;
AXLGLFLCONSTMODIFIER GLconstant GL_UNCORRELATED_NV = 0x9282;
AXLGLFLCONSTMODIFIER GLconstant GL_VIVIDLIGHT_NV = 0x92A6;
AXLGLFLCONSTMODIFIER GLconstant GL_XOR_NV = 0x1506;
typedef void (APIENTRYP PFNGLBLENDPARAMETERINVPROC) (GLenum pname, GLint value);
typedef void (APIENTRYP PFNGLBLENDBARRIERNVPROC) (void);
// GL_NV_blend_equation_advanced

// GL_NV_blend_equation_advanced_coherent
AXLGLFLAPI bool GL_NV_blend_equation_advanced_coherent;
AXLGLFLCONSTMODIFIER GLconstant GL_BLEND_ADVANCED_COHERENT_NV = 0x9285;
// GL_NV_blend_equation_advanced_coherent

// GL_NV_blend_minmax_factor
AXLGLFLAPI bool GL_NV_blend_minmax_factor;
// GL_NV_blend_minmax_factor

// GL_NV_blend_square
AXLGLFLAPI bool GL_NV_blend_square;
// GL_NV_blend_square

// GL_NV_clip_space_w_scaling
AXLGLFLAPI bool GL_NV_clip_space_w_scaling;
AXLGLFLCONSTMODIFIER GLconstant GL_VIEWPORT_POSITION_W_SCALE_NV = 0x937C;
AXLGLFLCONSTMODIFIER GLconstant GL_VIEWPORT_POSITION_W_SCALE_X_COEFF_NV = 0x937D;
AXLGLFLCONSTMODIFIER GLconstant GL_VIEWPORT_POSITION_W_SCALE_Y_COEFF_NV = 0x937E;
typedef void (APIENTRYP PFNGLVIEWPORTPOSITIONWSCALENVPROC) (GLuint index, GLfloat xcoeff, GLfloat ycoeff);
// GL_NV_clip_space_w_scaling

// GL_NV_command_list
AXLGLFLAPI bool GL_NV_command_list;
AXLGLFLCONSTMODIFIER GLconstant GL_TERMINATE_SEQUENCE_COMMAND_NV = 0x0000;
AXLGLFLCONSTMODIFIER GLconstant GL_NOP_COMMAND_NV = 0x0001;
AXLGLFLCONSTMODIFIER GLconstant GL_DRAW_ELEMENTS_COMMAND_NV = 0x0002;
AXLGLFLCONSTMODIFIER GLconstant GL_DRAW_ARRAYS_COMMAND_NV = 0x0003;
AXLGLFLCONSTMODIFIER GLconstant GL_DRAW_ELEMENTS_STRIP_COMMAND_NV = 0x0004;
AXLGLFLCONSTMODIFIER GLconstant GL_DRAW_ARRAYS_STRIP_COMMAND_NV = 0x0005;
AXLGLFLCONSTMODIFIER GLconstant GL_DRAW_ELEMENTS_INSTANCED_COMMAND_NV = 0x0006;
AXLGLFLCONSTMODIFIER GLconstant GL_DRAW_ARRAYS_INSTANCED_COMMAND_NV = 0x0007;
AXLGLFLCONSTMODIFIER GLconstant GL_ELEMENT_ADDRESS_COMMAND_NV = 0x0008;
AXLGLFLCONSTMODIFIER GLconstant GL_ATTRIBUTE_ADDRESS_COMMAND_NV = 0x0009;
AXLGLFLCONSTMODIFIER GLconstant GL_UNIFORM_ADDRESS_COMMAND_NV = 0x000A;
AXLGLFLCONSTMODIFIER GLconstant GL_BLEND_COLOR_COMMAND_NV = 0x000B;
AXLGLFLCONSTMODIFIER GLconstant GL_STENCIL_REF_COMMAND_NV = 0x000C;
AXLGLFLCONSTMODIFIER GLconstant GL_LINE_WIDTH_COMMAND_NV = 0x000D;
AXLGLFLCONSTMODIFIER GLconstant GL_POLYGON_OFFSET_COMMAND_NV = 0x000E;
AXLGLFLCONSTMODIFIER GLconstant GL_ALPHA_REF_COMMAND_NV = 0x000F;
AXLGLFLCONSTMODIFIER GLconstant GL_VIEWPORT_COMMAND_NV = 0x0010;
AXLGLFLCONSTMODIFIER GLconstant GL_SCISSOR_COMMAND_NV = 0x0011;
AXLGLFLCONSTMODIFIER GLconstant GL_FRONT_FACE_COMMAND_NV = 0x0012;
typedef void (APIENTRYP PFNGLCREATESTATESNVPROC) (GLsizei n, GLuint *states);
typedef void (APIENTRYP PFNGLDELETESTATESNVPROC) (GLsizei n, const GLuint *states);
typedef GLboolean (APIENTRYP PFNGLISSTATENVPROC) (GLuint state);
typedef void (APIENTRYP PFNGLSTATECAPTURENVPROC) (GLuint state, GLenum mode);
typedef GLuint (APIENTRYP PFNGLGETCOMMANDHEADERNVPROC) (GLenum tokenID, GLuint size);
typedef GLushort (APIENTRYP PFNGLGETSTAGEINDEXNVPROC) (GLenum shadertype);
typedef void (APIENTRYP PFNGLDRAWCOMMANDSNVPROC) (GLenum primitiveMode, GLuint buffer, const GLintptr *indirects, const GLsizei *sizes, GLuint count);
typedef void (APIENTRYP PFNGLDRAWCOMMANDSADDRESSNVPROC) (GLenum primitiveMode, const GLuint64 *indirects, const GLsizei *sizes, GLuint count);
typedef void (APIENTRYP PFNGLDRAWCOMMANDSSTATESNVPROC) (GLuint buffer, const GLintptr *indirects, const GLsizei *sizes, const GLuint *states, const GLuint *fbos, GLuint count);
typedef void (APIENTRYP PFNGLDRAWCOMMANDSSTATESADDRESSNVPROC) (const GLuint64 *indirects, const GLsizei *sizes, const GLuint *states, const GLuint *fbos, GLuint count);
typedef void (APIENTRYP PFNGLCREATECOMMANDLISTSNVPROC) (GLsizei n, GLuint *lists);
typedef void (APIENTRYP PFNGLDELETECOMMANDLISTSNVPROC) (GLsizei n, const GLuint *lists);
typedef GLboolean (APIENTRYP PFNGLISCOMMANDLISTNVPROC) (GLuint list);
typedef void (APIENTRYP PFNGLLISTDRAWCOMMANDSSTATESCLIENTNVPROC) (GLuint list, GLuint segment, const void **indirects, const GLsizei *sizes, const GLuint *states, const GLuint *fbos, GLuint count);
typedef void (APIENTRYP PFNGLCOMMANDLISTSEGMENTSNVPROC) (GLuint list, GLuint segments);
typedef void (APIENTRYP PFNGLCOMPILECOMMANDLISTNVPROC) (GLuint list);
typedef void (APIENTRYP PFNGLCALLCOMMANDLISTNVPROC) (GLuint list);
// GL_NV_command_list

// GL_NV_compute_program5
AXLGLFLAPI bool GL_NV_compute_program5;
AXLGLFLCONSTMODIFIER GLconstant GL_COMPUTE_PROGRAM_NV = 0x90FB;
AXLGLFLCONSTMODIFIER GLconstant GL_COMPUTE_PROGRAM_PARAMETER_BUFFER_NV = 0x90FC;
// GL_NV_compute_program5

// GL_NV_compute_shader_derivatives
AXLGLFLAPI bool GL_NV_compute_shader_derivatives;
// GL_NV_compute_shader_derivatives

// GL_NV_conditional_render
AXLGLFLAPI bool GL_NV_conditional_render;
AXLGLFLCONSTMODIFIER GLconstant GL_QUERY_WAIT_NV = 0x8E13;
AXLGLFLCONSTMODIFIER GLconstant GL_QUERY_NO_WAIT_NV = 0x8E14;
AXLGLFLCONSTMODIFIER GLconstant GL_QUERY_BY_REGION_WAIT_NV = 0x8E15;
AXLGLFLCONSTMODIFIER GLconstant GL_QUERY_BY_REGION_NO_WAIT_NV = 0x8E16;
typedef void (APIENTRYP PFNGLBEGINCONDITIONALRENDERNVPROC) (GLuint id, GLenum mode);
typedef void (APIENTRYP PFNGLENDCONDITIONALRENDERNVPROC) (void);
// GL_NV_conditional_render

// GL_NV_conservative_raster
AXLGLFLAPI bool GL_NV_conservative_raster;
AXLGLFLCONSTMODIFIER GLconstant GL_CONSERVATIVE_RASTERIZATION_NV = 0x9346;
AXLGLFLCONSTMODIFIER GLconstant GL_SUBPIXEL_PRECISION_BIAS_X_BITS_NV = 0x9347;
AXLGLFLCONSTMODIFIER GLconstant GL_SUBPIXEL_PRECISION_BIAS_Y_BITS_NV = 0x9348;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_SUBPIXEL_PRECISION_BIAS_BITS_NV = 0x9349;
typedef void (APIENTRYP PFNGLSUBPIXELPRECISIONBIASNVPROC) (GLuint xbits, GLuint ybits);
// GL_NV_conservative_raster

// GL_NV_conservative_raster_dilate
AXLGLFLAPI bool GL_NV_conservative_raster_dilate;
AXLGLFLCONSTMODIFIER GLconstant GL_CONSERVATIVE_RASTER_DILATE_NV = 0x9379;
AXLGLFLCONSTMODIFIER GLconstant GL_CONSERVATIVE_RASTER_DILATE_RANGE_NV = 0x937A;
AXLGLFLCONSTMODIFIER GLconstant GL_CONSERVATIVE_RASTER_DILATE_GRANULARITY_NV = 0x937B;
typedef void (APIENTRYP PFNGLCONSERVATIVERASTERPARAMETERFNVPROC) (GLenum pname, GLfloat value);
// GL_NV_conservative_raster_dilate

// GL_NV_conservative_raster_pre_snap
AXLGLFLAPI bool GL_NV_conservative_raster_pre_snap;
AXLGLFLCONSTMODIFIER GLconstant GL_CONSERVATIVE_RASTER_MODE_PRE_SNAP_NV = 0x9550;
// GL_NV_conservative_raster_pre_snap

// GL_NV_conservative_raster_pre_snap_triangles
AXLGLFLAPI bool GL_NV_conservative_raster_pre_snap_triangles;
AXLGLFLCONSTMODIFIER GLconstant GL_CONSERVATIVE_RASTER_MODE_NV = 0x954D;
AXLGLFLCONSTMODIFIER GLconstant GL_CONSERVATIVE_RASTER_MODE_POST_SNAP_NV = 0x954E;
AXLGLFLCONSTMODIFIER GLconstant GL_CONSERVATIVE_RASTER_MODE_PRE_SNAP_TRIANGLES_NV = 0x954F;
typedef void (APIENTRYP PFNGLCONSERVATIVERASTERPARAMETERINVPROC) (GLenum pname, GLint param);
// GL_NV_conservative_raster_pre_snap_triangles

// GL_NV_conservative_raster_underestimation
AXLGLFLAPI bool GL_NV_conservative_raster_underestimation;
// GL_NV_conservative_raster_underestimation

// GL_NV_copy_depth_to_color
AXLGLFLAPI bool GL_NV_copy_depth_to_color;
AXLGLFLCONSTMODIFIER GLconstant GL_DEPTH_STENCIL_TO_RGBA_NV = 0x886E;
AXLGLFLCONSTMODIFIER GLconstant GL_DEPTH_STENCIL_TO_BGRA_NV = 0x886F;
// GL_NV_copy_depth_to_color

// GL_NV_copy_image
AXLGLFLAPI bool GL_NV_copy_image;
typedef void (APIENTRYP PFNGLCOPYIMAGESUBDATANVPROC) (GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint srcX, GLint srcY, GLint srcZ, GLuint dstName, GLenum dstTarget, GLint dstLevel, GLint dstX, GLint dstY, GLint dstZ, GLsizei width, GLsizei height, GLsizei depth);
// GL_NV_copy_image

// GL_NV_deep_texture3D
AXLGLFLAPI bool GL_NV_deep_texture3D;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_DEEP_3D_TEXTURE_WIDTH_HEIGHT_NV = 0x90D0;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_DEEP_3D_TEXTURE_DEPTH_NV = 0x90D1;
// GL_NV_deep_texture3D

// GL_NV_depth_buffer_float
AXLGLFLAPI bool GL_NV_depth_buffer_float;
AXLGLFLCONSTMODIFIER GLconstant GL_DEPTH_COMPONENT32F_NV = 0x8DAB;
AXLGLFLCONSTMODIFIER GLconstant GL_DEPTH32F_STENCIL8_NV = 0x8DAC;
AXLGLFLCONSTMODIFIER GLconstant GL_FLOAT_32_UNSIGNED_INT_24_8_REV_NV = 0x8DAD;
AXLGLFLCONSTMODIFIER GLconstant GL_DEPTH_BUFFER_FLOAT_MODE_NV = 0x8DAF;
typedef void (APIENTRYP PFNGLDEPTHRANGEDNVPROC) (GLdouble zNear, GLdouble zFar);
typedef void (APIENTRYP PFNGLCLEARDEPTHDNVPROC) (GLdouble depth);
typedef void (APIENTRYP PFNGLDEPTHBOUNDSDNVPROC) (GLdouble zmin, GLdouble zmax);
// GL_NV_depth_buffer_float

// GL_NV_depth_clamp
AXLGLFLAPI bool GL_NV_depth_clamp;
AXLGLFLCONSTMODIFIER GLconstant GL_DEPTH_CLAMP_NV = 0x864F;
// GL_NV_depth_clamp

// GL_NV_draw_texture
AXLGLFLAPI bool GL_NV_draw_texture;
typedef void (APIENTRYP PFNGLDRAWTEXTURENVPROC) (GLuint texture, GLuint sampler, GLfloat x0, GLfloat y0, GLfloat x1, GLfloat y1, GLfloat z, GLfloat s0, GLfloat t0, GLfloat s1, GLfloat t1);
// GL_NV_draw_texture

// GL_NV_draw_vulkan_image
AXLGLFLAPI bool GL_NV_draw_vulkan_image;
typedef void (APIENTRY  *GLVULKANPROCNV)(void);
typedef void (APIENTRYP PFNGLDRAWVKIMAGENVPROC) (GLuint64 vkImage, GLuint sampler, GLfloat x0, GLfloat y0, GLfloat x1, GLfloat y1, GLfloat z, GLfloat s0, GLfloat t0, GLfloat s1, GLfloat t1);
typedef GLVULKANPROCNV (APIENTRYP PFNGLGETVKPROCADDRNVPROC) (const GLchar *name);
typedef void (APIENTRYP PFNGLWAITVKSEMAPHORENVPROC) (GLuint64 vkSemaphore);
typedef void (APIENTRYP PFNGLSIGNALVKSEMAPHORENVPROC) (GLuint64 vkSemaphore);
typedef void (APIENTRYP PFNGLSIGNALVKFENCENVPROC) (GLuint64 vkFence);
// GL_NV_draw_vulkan_image

// GL_NV_evaluators
AXLGLFLAPI bool GL_NV_evaluators;
AXLGLFLCONSTMODIFIER GLconstant GL_EVAL_2D_NV = 0x86C0;
AXLGLFLCONSTMODIFIER GLconstant GL_EVAL_TRIANGULAR_2D_NV = 0x86C1;
AXLGLFLCONSTMODIFIER GLconstant GL_MAP_TESSELLATION_NV = 0x86C2;
AXLGLFLCONSTMODIFIER GLconstant GL_MAP_ATTRIB_U_ORDER_NV = 0x86C3;
AXLGLFLCONSTMODIFIER GLconstant GL_MAP_ATTRIB_V_ORDER_NV = 0x86C4;
AXLGLFLCONSTMODIFIER GLconstant GL_EVAL_FRACTIONAL_TESSELLATION_NV = 0x86C5;
AXLGLFLCONSTMODIFIER GLconstant GL_EVAL_VERTEX_ATTRIB0_NV = 0x86C6;
AXLGLFLCONSTMODIFIER GLconstant GL_EVAL_VERTEX_ATTRIB1_NV = 0x86C7;
AXLGLFLCONSTMODIFIER GLconstant GL_EVAL_VERTEX_ATTRIB2_NV = 0x86C8;
AXLGLFLCONSTMODIFIER GLconstant GL_EVAL_VERTEX_ATTRIB3_NV = 0x86C9;
AXLGLFLCONSTMODIFIER GLconstant GL_EVAL_VERTEX_ATTRIB4_NV = 0x86CA;
AXLGLFLCONSTMODIFIER GLconstant GL_EVAL_VERTEX_ATTRIB5_NV = 0x86CB;
AXLGLFLCONSTMODIFIER GLconstant GL_EVAL_VERTEX_ATTRIB6_NV = 0x86CC;
AXLGLFLCONSTMODIFIER GLconstant GL_EVAL_VERTEX_ATTRIB7_NV = 0x86CD;
AXLGLFLCONSTMODIFIER GLconstant GL_EVAL_VERTEX_ATTRIB8_NV = 0x86CE;
AXLGLFLCONSTMODIFIER GLconstant GL_EVAL_VERTEX_ATTRIB9_NV = 0x86CF;
AXLGLFLCONSTMODIFIER GLconstant GL_EVAL_VERTEX_ATTRIB10_NV = 0x86D0;
AXLGLFLCONSTMODIFIER GLconstant GL_EVAL_VERTEX_ATTRIB11_NV = 0x86D1;
AXLGLFLCONSTMODIFIER GLconstant GL_EVAL_VERTEX_ATTRIB12_NV = 0x86D2;
AXLGLFLCONSTMODIFIER GLconstant GL_EVAL_VERTEX_ATTRIB13_NV = 0x86D3;
AXLGLFLCONSTMODIFIER GLconstant GL_EVAL_VERTEX_ATTRIB14_NV = 0x86D4;
AXLGLFLCONSTMODIFIER GLconstant GL_EVAL_VERTEX_ATTRIB15_NV = 0x86D5;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_MAP_TESSELLATION_NV = 0x86D6;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_RATIONAL_EVAL_ORDER_NV = 0x86D7;
typedef void (APIENTRYP PFNGLMAPCONTROLPOINTSNVPROC) (GLenum target, GLuint index, GLenum type, GLsizei ustride, GLsizei vstride, GLint uorder, GLint vorder, GLboolean packed, const void *points);
typedef void (APIENTRYP PFNGLMAPPARAMETERIVNVPROC) (GLenum target, GLenum pname, const GLint *params);
typedef void (APIENTRYP PFNGLMAPPARAMETERFVNVPROC) (GLenum target, GLenum pname, const GLfloat *params);
typedef void (APIENTRYP PFNGLGETMAPCONTROLPOINTSNVPROC) (GLenum target, GLuint index, GLenum type, GLsizei ustride, GLsizei vstride, GLboolean packed, void *points);
typedef void (APIENTRYP PFNGLGETMAPPARAMETERIVNVPROC) (GLenum target, GLenum pname, GLint *params);
typedef void (APIENTRYP PFNGLGETMAPPARAMETERFVNVPROC) (GLenum target, GLenum pname, GLfloat *params);
typedef void (APIENTRYP PFNGLGETMAPATTRIBPARAMETERIVNVPROC) (GLenum target, GLuint index, GLenum pname, GLint *params);
typedef void (APIENTRYP PFNGLGETMAPATTRIBPARAMETERFVNVPROC) (GLenum target, GLuint index, GLenum pname, GLfloat *params);
typedef void (APIENTRYP PFNGLEVALMAPSNVPROC) (GLenum target, GLenum mode);
// GL_NV_evaluators

// GL_NV_explicit_multisample
AXLGLFLAPI bool GL_NV_explicit_multisample;
AXLGLFLCONSTMODIFIER GLconstant GL_SAMPLE_POSITION_NV = 0x8E50;
AXLGLFLCONSTMODIFIER GLconstant GL_SAMPLE_MASK_NV = 0x8E51;
AXLGLFLCONSTMODIFIER GLconstant GL_SAMPLE_MASK_VALUE_NV = 0x8E52;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_BINDING_RENDERBUFFER_NV = 0x8E53;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_RENDERBUFFER_DATA_STORE_BINDING_NV = 0x8E54;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_RENDERBUFFER_NV = 0x8E55;
AXLGLFLCONSTMODIFIER GLconstant GL_SAMPLER_RENDERBUFFER_NV = 0x8E56;
AXLGLFLCONSTMODIFIER GLconstant GL_INT_SAMPLER_RENDERBUFFER_NV = 0x8E57;
AXLGLFLCONSTMODIFIER GLconstant GL_UNSIGNED_INT_SAMPLER_RENDERBUFFER_NV = 0x8E58;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_SAMPLE_MASK_WORDS_NV = 0x8E59;
typedef void (APIENTRYP PFNGLGETMULTISAMPLEFVNVPROC) (GLenum pname, GLuint index, GLfloat *val);
typedef void (APIENTRYP PFNGLSAMPLEMASKINDEXEDNVPROC) (GLuint index, GLbitfield mask);
typedef void (APIENTRYP PFNGLTEXRENDERBUFFERNVPROC) (GLenum target, GLuint renderbuffer);
// GL_NV_explicit_multisample

// GL_NV_fence
AXLGLFLAPI bool GL_NV_fence;
AXLGLFLCONSTMODIFIER GLconstant GL_ALL_COMPLETED_NV = 0x84F2;
AXLGLFLCONSTMODIFIER GLconstant GL_FENCE_STATUS_NV = 0x84F3;
AXLGLFLCONSTMODIFIER GLconstant GL_FENCE_CONDITION_NV = 0x84F4;
typedef void (APIENTRYP PFNGLDELETEFENCESNVPROC) (GLsizei n, const GLuint *fences);
typedef void (APIENTRYP PFNGLGENFENCESNVPROC) (GLsizei n, GLuint *fences);
typedef GLboolean (APIENTRYP PFNGLISFENCENVPROC) (GLuint fence);
typedef GLboolean (APIENTRYP PFNGLTESTFENCENVPROC) (GLuint fence);
typedef void (APIENTRYP PFNGLGETFENCEIVNVPROC) (GLuint fence, GLenum pname, GLint *params);
typedef void (APIENTRYP PFNGLFINISHFENCENVPROC) (GLuint fence);
typedef void (APIENTRYP PFNGLSETFENCENVPROC) (GLuint fence, GLenum condition);
// GL_NV_fence

// GL_NV_fill_rectangle
AXLGLFLAPI bool GL_NV_fill_rectangle;
AXLGLFLCONSTMODIFIER GLconstant GL_FILL_RECTANGLE_NV = 0x933C;
// GL_NV_fill_rectangle

// GL_NV_float_buffer
AXLGLFLAPI bool GL_NV_float_buffer;
AXLGLFLCONSTMODIFIER GLconstant GL_FLOAT_R_NV = 0x8880;
AXLGLFLCONSTMODIFIER GLconstant GL_FLOAT_RG_NV = 0x8881;
AXLGLFLCONSTMODIFIER GLconstant GL_FLOAT_RGB_NV = 0x8882;
AXLGLFLCONSTMODIFIER GLconstant GL_FLOAT_RGBA_NV = 0x8883;
AXLGLFLCONSTMODIFIER GLconstant GL_FLOAT_R16_NV = 0x8884;
AXLGLFLCONSTMODIFIER GLconstant GL_FLOAT_R32_NV = 0x8885;
AXLGLFLCONSTMODIFIER GLconstant GL_FLOAT_RG16_NV = 0x8886;
AXLGLFLCONSTMODIFIER GLconstant GL_FLOAT_RG32_NV = 0x8887;
AXLGLFLCONSTMODIFIER GLconstant GL_FLOAT_RGB16_NV = 0x8888;
AXLGLFLCONSTMODIFIER GLconstant GL_FLOAT_RGB32_NV = 0x8889;
AXLGLFLCONSTMODIFIER GLconstant GL_FLOAT_RGBA16_NV = 0x888A;
AXLGLFLCONSTMODIFIER GLconstant GL_FLOAT_RGBA32_NV = 0x888B;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_FLOAT_COMPONENTS_NV = 0x888C;
AXLGLFLCONSTMODIFIER GLconstant GL_FLOAT_CLEAR_COLOR_VALUE_NV = 0x888D;
AXLGLFLCONSTMODIFIER GLconstant GL_FLOAT_RGBA_MODE_NV = 0x888E;
// GL_NV_float_buffer

// GL_NV_fog_distance
AXLGLFLAPI bool GL_NV_fog_distance;
AXLGLFLCONSTMODIFIER GLconstant GL_FOG_DISTANCE_MODE_NV = 0x855A;
AXLGLFLCONSTMODIFIER GLconstant GL_EYE_RADIAL_NV = 0x855B;
AXLGLFLCONSTMODIFIER GLconstant GL_EYE_PLANE_ABSOLUTE_NV = 0x855C;
// GL_NV_fog_distance

// GL_NV_fragment_coverage_to_color
AXLGLFLAPI bool GL_NV_fragment_coverage_to_color;
AXLGLFLCONSTMODIFIER GLconstant GL_FRAGMENT_COVERAGE_TO_COLOR_NV = 0x92DD;
AXLGLFLCONSTMODIFIER GLconstant GL_FRAGMENT_COVERAGE_COLOR_NV = 0x92DE;
typedef void (APIENTRYP PFNGLFRAGMENTCOVERAGECOLORNVPROC) (GLuint color);
// GL_NV_fragment_coverage_to_color

// GL_NV_fragment_program
AXLGLFLAPI bool GL_NV_fragment_program;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_FRAGMENT_PROGRAM_LOCAL_PARAMETERS_NV = 0x8868;
AXLGLFLCONSTMODIFIER GLconstant GL_FRAGMENT_PROGRAM_NV = 0x8870;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_TEXTURE_COORDS_NV = 0x8871;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_TEXTURE_IMAGE_UNITS_NV = 0x8872;
AXLGLFLCONSTMODIFIER GLconstant GL_FRAGMENT_PROGRAM_BINDING_NV = 0x8873;
AXLGLFLCONSTMODIFIER GLconstant GL_PROGRAM_ERROR_STRING_NV = 0x8874;
typedef void (APIENTRYP PFNGLPROGRAMNAMEDPARAMETER4FNVPROC) (GLuint id, GLsizei len, const GLubyte *name, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
typedef void (APIENTRYP PFNGLPROGRAMNAMEDPARAMETER4FVNVPROC) (GLuint id, GLsizei len, const GLubyte *name, const GLfloat *v);
typedef void (APIENTRYP PFNGLPROGRAMNAMEDPARAMETER4DNVPROC) (GLuint id, GLsizei len, const GLubyte *name, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
typedef void (APIENTRYP PFNGLPROGRAMNAMEDPARAMETER4DVNVPROC) (GLuint id, GLsizei len, const GLubyte *name, const GLdouble *v);
typedef void (APIENTRYP PFNGLGETPROGRAMNAMEDPARAMETERFVNVPROC) (GLuint id, GLsizei len, const GLubyte *name, GLfloat *params);
typedef void (APIENTRYP PFNGLGETPROGRAMNAMEDPARAMETERDVNVPROC) (GLuint id, GLsizei len, const GLubyte *name, GLdouble *params);
// GL_NV_fragment_program

// GL_NV_fragment_program2
AXLGLFLAPI bool GL_NV_fragment_program2;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_PROGRAM_EXEC_INSTRUCTIONS_NV = 0x88F4;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_PROGRAM_CALL_DEPTH_NV = 0x88F5;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_PROGRAM_IF_DEPTH_NV = 0x88F6;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_PROGRAM_LOOP_DEPTH_NV = 0x88F7;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_PROGRAM_LOOP_COUNT_NV = 0x88F8;
// GL_NV_fragment_program2

// GL_NV_fragment_program4
AXLGLFLAPI bool GL_NV_fragment_program4;
// GL_NV_fragment_program4

// GL_NV_fragment_program_option
AXLGLFLAPI bool GL_NV_fragment_program_option;
// GL_NV_fragment_program_option

// GL_NV_fragment_shader_barycentric
AXLGLFLAPI bool GL_NV_fragment_shader_barycentric;
// GL_NV_fragment_shader_barycentric

// GL_NV_fragment_shader_interlock
AXLGLFLAPI bool GL_NV_fragment_shader_interlock;
// GL_NV_fragment_shader_interlock

// GL_NV_framebuffer_mixed_samples
AXLGLFLAPI bool GL_NV_framebuffer_mixed_samples;
AXLGLFLCONSTMODIFIER GLconstant GL_COVERAGE_MODULATION_TABLE_NV = 0x9331;
AXLGLFLCONSTMODIFIER GLconstant GL_COLOR_SAMPLES_NV = 0x8E20;
AXLGLFLCONSTMODIFIER GLconstant GL_DEPTH_SAMPLES_NV = 0x932D;
AXLGLFLCONSTMODIFIER GLconstant GL_STENCIL_SAMPLES_NV = 0x932E;
AXLGLFLCONSTMODIFIER GLconstant GL_MIXED_DEPTH_SAMPLES_SUPPORTED_NV = 0x932F;
AXLGLFLCONSTMODIFIER GLconstant GL_MIXED_STENCIL_SAMPLES_SUPPORTED_NV = 0x9330;
AXLGLFLCONSTMODIFIER GLconstant GL_COVERAGE_MODULATION_NV = 0x9332;
AXLGLFLCONSTMODIFIER GLconstant GL_COVERAGE_MODULATION_TABLE_SIZE_NV = 0x9333;
typedef void (APIENTRYP PFNGLCOVERAGEMODULATIONTABLENVPROC) (GLsizei n, const GLfloat *v);
typedef void (APIENTRYP PFNGLGETCOVERAGEMODULATIONTABLENVPROC) (GLsizei bufSize, GLfloat *v);
typedef void (APIENTRYP PFNGLCOVERAGEMODULATIONNVPROC) (GLenum components);
// GL_NV_framebuffer_mixed_samples

// GL_NV_framebuffer_multisample_coverage
AXLGLFLAPI bool GL_NV_framebuffer_multisample_coverage;
AXLGLFLCONSTMODIFIER GLconstant GL_RENDERBUFFER_COVERAGE_SAMPLES_NV = 0x8CAB;
AXLGLFLCONSTMODIFIER GLconstant GL_RENDERBUFFER_COLOR_SAMPLES_NV = 0x8E10;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_MULTISAMPLE_COVERAGE_MODES_NV = 0x8E11;
AXLGLFLCONSTMODIFIER GLconstant GL_MULTISAMPLE_COVERAGE_MODES_NV = 0x8E12;
typedef void (APIENTRYP PFNGLRENDERBUFFERSTORAGEMULTISAMPLECOVERAGENVPROC) (GLenum target, GLsizei coverageSamples, GLsizei colorSamples, GLenum internalformat, GLsizei width, GLsizei height);
// GL_NV_framebuffer_multisample_coverage

// GL_NV_geometry_program4
AXLGLFLAPI bool GL_NV_geometry_program4;
AXLGLFLCONSTMODIFIER GLconstant GL_GEOMETRY_PROGRAM_NV = 0x8C26;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_PROGRAM_OUTPUT_VERTICES_NV = 0x8C27;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_PROGRAM_TOTAL_OUTPUT_COMPONENTS_NV = 0x8C28;
typedef void (APIENTRYP PFNGLPROGRAMVERTEXLIMITNVPROC) (GLenum target, GLint limit);
typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTUREEXTPROC) (GLenum target, GLenum attachment, GLuint texture, GLint level);
typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTUREFACEEXTPROC) (GLenum target, GLenum attachment, GLuint texture, GLint level, GLenum face);
// GL_NV_geometry_program4

// GL_NV_geometry_shader4
AXLGLFLAPI bool GL_NV_geometry_shader4;
// GL_NV_geometry_shader4

// GL_NV_geometry_shader_passthrough
AXLGLFLAPI bool GL_NV_geometry_shader_passthrough;
// GL_NV_geometry_shader_passthrough

// GL_NV_gpu_multicast
AXLGLFLAPI bool GL_NV_gpu_multicast;
AXLGLFLCONSTMODIFIER GLconstant GL_PER_GPU_STORAGE_BIT_NV = 0x0800;
AXLGLFLCONSTMODIFIER GLconstant GL_MULTICAST_GPUS_NV = 0x92BA;
AXLGLFLCONSTMODIFIER GLconstant GL_RENDER_GPU_MASK_NV = 0x9558;
AXLGLFLCONSTMODIFIER GLconstant GL_PER_GPU_STORAGE_NV = 0x9548;
AXLGLFLCONSTMODIFIER GLconstant GL_MULTICAST_PROGRAMMABLE_SAMPLE_LOCATION_NV = 0x9549;
typedef void (APIENTRYP PFNGLRENDERGPUMASKNVPROC) (GLbitfield mask);
typedef void (APIENTRYP PFNGLMULTICASTBUFFERSUBDATANVPROC) (GLbitfield gpuMask, GLuint buffer, GLintptr offset, GLsizeiptr size, const void *data);
typedef void (APIENTRYP PFNGLMULTICASTCOPYBUFFERSUBDATANVPROC) (GLuint readGpu, GLbitfield writeGpuMask, GLuint readBuffer, GLuint writeBuffer, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size);
typedef void (APIENTRYP PFNGLMULTICASTCOPYIMAGESUBDATANVPROC) (GLuint srcGpu, GLbitfield dstGpuMask, GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint srcX, GLint srcY, GLint srcZ, GLuint dstName, GLenum dstTarget, GLint dstLevel, GLint dstX, GLint dstY, GLint dstZ, GLsizei srcWidth, GLsizei srcHeight, GLsizei srcDepth);
typedef void (APIENTRYP PFNGLMULTICASTBLITFRAMEBUFFERNVPROC) (GLuint srcGpu, GLuint dstGpu, GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);
typedef void (APIENTRYP PFNGLMULTICASTFRAMEBUFFERSAMPLELOCATIONSFVNVPROC) (GLuint gpu, GLuint framebuffer, GLuint start, GLsizei count, const GLfloat *v);
typedef void (APIENTRYP PFNGLMULTICASTBARRIERNVPROC) (void);
typedef void (APIENTRYP PFNGLMULTICASTWAITSYNCNVPROC) (GLuint signalGpu, GLbitfield waitGpuMask);
typedef void (APIENTRYP PFNGLMULTICASTGETQUERYOBJECTIVNVPROC) (GLuint gpu, GLuint id, GLenum pname, GLint *params);
typedef void (APIENTRYP PFNGLMULTICASTGETQUERYOBJECTUIVNVPROC) (GLuint gpu, GLuint id, GLenum pname, GLuint *params);
typedef void (APIENTRYP PFNGLMULTICASTGETQUERYOBJECTI64VNVPROC) (GLuint gpu, GLuint id, GLenum pname, GLint64 *params);
typedef void (APIENTRYP PFNGLMULTICASTGETQUERYOBJECTUI64VNVPROC) (GLuint gpu, GLuint id, GLenum pname, GLuint64 *params);
// GL_NV_gpu_multicast

// GL_NV_gpu_program4
AXLGLFLAPI bool GL_NV_gpu_program4;
AXLGLFLCONSTMODIFIER GLconstant GL_MIN_PROGRAM_TEXEL_OFFSET_NV = 0x8904;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_PROGRAM_TEXEL_OFFSET_NV = 0x8905;
AXLGLFLCONSTMODIFIER GLconstant GL_PROGRAM_ATTRIB_COMPONENTS_NV = 0x8906;
AXLGLFLCONSTMODIFIER GLconstant GL_PROGRAM_RESULT_COMPONENTS_NV = 0x8907;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_PROGRAM_ATTRIB_COMPONENTS_NV = 0x8908;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_PROGRAM_RESULT_COMPONENTS_NV = 0x8909;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_PROGRAM_GENERIC_ATTRIBS_NV = 0x8DA5;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_PROGRAM_GENERIC_RESULTS_NV = 0x8DA6;
typedef void (APIENTRYP PFNGLPROGRAMLOCALPARAMETERI4INVPROC) (GLenum target, GLuint index, GLint x, GLint y, GLint z, GLint w);
typedef void (APIENTRYP PFNGLPROGRAMLOCALPARAMETERI4IVNVPROC) (GLenum target, GLuint index, const GLint *params);
typedef void (APIENTRYP PFNGLPROGRAMLOCALPARAMETERSI4IVNVPROC) (GLenum target, GLuint index, GLsizei count, const GLint *params);
typedef void (APIENTRYP PFNGLPROGRAMLOCALPARAMETERI4UINVPROC) (GLenum target, GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);
typedef void (APIENTRYP PFNGLPROGRAMLOCALPARAMETERI4UIVNVPROC) (GLenum target, GLuint index, const GLuint *params);
typedef void (APIENTRYP PFNGLPROGRAMLOCALPARAMETERSI4UIVNVPROC) (GLenum target, GLuint index, GLsizei count, const GLuint *params);
typedef void (APIENTRYP PFNGLPROGRAMENVPARAMETERI4INVPROC) (GLenum target, GLuint index, GLint x, GLint y, GLint z, GLint w);
typedef void (APIENTRYP PFNGLPROGRAMENVPARAMETERI4IVNVPROC) (GLenum target, GLuint index, const GLint *params);
typedef void (APIENTRYP PFNGLPROGRAMENVPARAMETERSI4IVNVPROC) (GLenum target, GLuint index, GLsizei count, const GLint *params);
typedef void (APIENTRYP PFNGLPROGRAMENVPARAMETERI4UINVPROC) (GLenum target, GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);
typedef void (APIENTRYP PFNGLPROGRAMENVPARAMETERI4UIVNVPROC) (GLenum target, GLuint index, const GLuint *params);
typedef void (APIENTRYP PFNGLPROGRAMENVPARAMETERSI4UIVNVPROC) (GLenum target, GLuint index, GLsizei count, const GLuint *params);
typedef void (APIENTRYP PFNGLGETPROGRAMLOCALPARAMETERIIVNVPROC) (GLenum target, GLuint index, GLint *params);
typedef void (APIENTRYP PFNGLGETPROGRAMLOCALPARAMETERIUIVNVPROC) (GLenum target, GLuint index, GLuint *params);
typedef void (APIENTRYP PFNGLGETPROGRAMENVPARAMETERIIVNVPROC) (GLenum target, GLuint index, GLint *params);
typedef void (APIENTRYP PFNGLGETPROGRAMENVPARAMETERIUIVNVPROC) (GLenum target, GLuint index, GLuint *params);
// GL_NV_gpu_program4

// GL_NV_gpu_program5
AXLGLFLAPI bool GL_NV_gpu_program5;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_GEOMETRY_PROGRAM_INVOCATIONS_NV = 0x8E5A;
AXLGLFLCONSTMODIFIER GLconstant GL_MIN_FRAGMENT_INTERPOLATION_OFFSET_NV = 0x8E5B;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_FRAGMENT_INTERPOLATION_OFFSET_NV = 0x8E5C;
AXLGLFLCONSTMODIFIER GLconstant GL_FRAGMENT_PROGRAM_INTERPOLATION_OFFSET_BITS_NV = 0x8E5D;
AXLGLFLCONSTMODIFIER GLconstant GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET_NV = 0x8E5E;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET_NV = 0x8E5F;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_PROGRAM_SUBROUTINE_PARAMETERS_NV = 0x8F44;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_PROGRAM_SUBROUTINE_NUM_NV = 0x8F45;
typedef void (APIENTRYP PFNGLPROGRAMSUBROUTINEPARAMETERSUIVNVPROC) (GLenum target, GLsizei count, const GLuint *params);
typedef void (APIENTRYP PFNGLGETPROGRAMSUBROUTINEPARAMETERUIVNVPROC) (GLenum target, GLuint index, GLuint *param);
// GL_NV_gpu_program5

// GL_NV_gpu_program5_mem_extended
AXLGLFLAPI bool GL_NV_gpu_program5_mem_extended;
// GL_NV_gpu_program5_mem_extended

// GL_NV_gpu_shader5
AXLGLFLAPI bool GL_NV_gpu_shader5;
// GL_NV_gpu_shader5

// GL_NV_half_float
AXLGLFLAPI bool GL_NV_half_float;
typedef unsigned short GLhalfNV;
AXLGLFLCONSTMODIFIER GLconstant GL_HALF_FLOAT_NV = 0x140B;
typedef void (APIENTRYP PFNGLVERTEX2HNVPROC) (GLhalfNV x, GLhalfNV y);
typedef void (APIENTRYP PFNGLVERTEX2HVNVPROC) (const GLhalfNV *v);
typedef void (APIENTRYP PFNGLVERTEX3HNVPROC) (GLhalfNV x, GLhalfNV y, GLhalfNV z);
typedef void (APIENTRYP PFNGLVERTEX3HVNVPROC) (const GLhalfNV *v);
typedef void (APIENTRYP PFNGLVERTEX4HNVPROC) (GLhalfNV x, GLhalfNV y, GLhalfNV z, GLhalfNV w);
typedef void (APIENTRYP PFNGLVERTEX4HVNVPROC) (const GLhalfNV *v);
typedef void (APIENTRYP PFNGLNORMAL3HNVPROC) (GLhalfNV nx, GLhalfNV ny, GLhalfNV nz);
typedef void (APIENTRYP PFNGLNORMAL3HVNVPROC) (const GLhalfNV *v);
typedef void (APIENTRYP PFNGLCOLOR3HNVPROC) (GLhalfNV red, GLhalfNV green, GLhalfNV blue);
typedef void (APIENTRYP PFNGLCOLOR3HVNVPROC) (const GLhalfNV *v);
typedef void (APIENTRYP PFNGLCOLOR4HNVPROC) (GLhalfNV red, GLhalfNV green, GLhalfNV blue, GLhalfNV alpha);
typedef void (APIENTRYP PFNGLCOLOR4HVNVPROC) (const GLhalfNV *v);
typedef void (APIENTRYP PFNGLTEXCOORD1HNVPROC) (GLhalfNV s);
typedef void (APIENTRYP PFNGLTEXCOORD1HVNVPROC) (const GLhalfNV *v);
typedef void (APIENTRYP PFNGLTEXCOORD2HNVPROC) (GLhalfNV s, GLhalfNV t);
typedef void (APIENTRYP PFNGLTEXCOORD2HVNVPROC) (const GLhalfNV *v);
typedef void (APIENTRYP PFNGLTEXCOORD3HNVPROC) (GLhalfNV s, GLhalfNV t, GLhalfNV r);
typedef void (APIENTRYP PFNGLTEXCOORD3HVNVPROC) (const GLhalfNV *v);
typedef void (APIENTRYP PFNGLTEXCOORD4HNVPROC) (GLhalfNV s, GLhalfNV t, GLhalfNV r, GLhalfNV q);
typedef void (APIENTRYP PFNGLTEXCOORD4HVNVPROC) (const GLhalfNV *v);
typedef void (APIENTRYP PFNGLMULTITEXCOORD1HNVPROC) (GLenum target, GLhalfNV s);
typedef void (APIENTRYP PFNGLMULTITEXCOORD1HVNVPROC) (GLenum target, const GLhalfNV *v);
typedef void (APIENTRYP PFNGLMULTITEXCOORD2HNVPROC) (GLenum target, GLhalfNV s, GLhalfNV t);
typedef void (APIENTRYP PFNGLMULTITEXCOORD2HVNVPROC) (GLenum target, const GLhalfNV *v);
typedef void (APIENTRYP PFNGLMULTITEXCOORD3HNVPROC) (GLenum target, GLhalfNV s, GLhalfNV t, GLhalfNV r);
typedef void (APIENTRYP PFNGLMULTITEXCOORD3HVNVPROC) (GLenum target, const GLhalfNV *v);
typedef void (APIENTRYP PFNGLMULTITEXCOORD4HNVPROC) (GLenum target, GLhalfNV s, GLhalfNV t, GLhalfNV r, GLhalfNV q);
typedef void (APIENTRYP PFNGLMULTITEXCOORD4HVNVPROC) (GLenum target, const GLhalfNV *v);
typedef void (APIENTRYP PFNGLFOGCOORDHNVPROC) (GLhalfNV fog);
typedef void (APIENTRYP PFNGLFOGCOORDHVNVPROC) (const GLhalfNV *fog);
typedef void (APIENTRYP PFNGLSECONDARYCOLOR3HNVPROC) (GLhalfNV red, GLhalfNV green, GLhalfNV blue);
typedef void (APIENTRYP PFNGLSECONDARYCOLOR3HVNVPROC) (const GLhalfNV *v);
typedef void (APIENTRYP PFNGLVERTEXWEIGHTHNVPROC) (GLhalfNV weight);
typedef void (APIENTRYP PFNGLVERTEXWEIGHTHVNVPROC) (const GLhalfNV *weight);
typedef void (APIENTRYP PFNGLVERTEXATTRIB1HNVPROC) (GLuint index, GLhalfNV x);
typedef void (APIENTRYP PFNGLVERTEXATTRIB1HVNVPROC) (GLuint index, const GLhalfNV *v);
typedef void (APIENTRYP PFNGLVERTEXATTRIB2HNVPROC) (GLuint index, GLhalfNV x, GLhalfNV y);
typedef void (APIENTRYP PFNGLVERTEXATTRIB2HVNVPROC) (GLuint index, const GLhalfNV *v);
typedef void (APIENTRYP PFNGLVERTEXATTRIB3HNVPROC) (GLuint index, GLhalfNV x, GLhalfNV y, GLhalfNV z);
typedef void (APIENTRYP PFNGLVERTEXATTRIB3HVNVPROC) (GLuint index, const GLhalfNV *v);
typedef void (APIENTRYP PFNGLVERTEXATTRIB4HNVPROC) (GLuint index, GLhalfNV x, GLhalfNV y, GLhalfNV z, GLhalfNV w);
typedef void (APIENTRYP PFNGLVERTEXATTRIB4HVNVPROC) (GLuint index, const GLhalfNV *v);
typedef void (APIENTRYP PFNGLVERTEXATTRIBS1HVNVPROC) (GLuint index, GLsizei n, const GLhalfNV *v);
typedef void (APIENTRYP PFNGLVERTEXATTRIBS2HVNVPROC) (GLuint index, GLsizei n, const GLhalfNV *v);
typedef void (APIENTRYP PFNGLVERTEXATTRIBS3HVNVPROC) (GLuint index, GLsizei n, const GLhalfNV *v);
typedef void (APIENTRYP PFNGLVERTEXATTRIBS4HVNVPROC) (GLuint index, GLsizei n, const GLhalfNV *v);
// GL_NV_half_float

// GL_NV_internalformat_sample_query
AXLGLFLAPI bool GL_NV_internalformat_sample_query;
AXLGLFLCONSTMODIFIER GLconstant GL_MULTISAMPLES_NV = 0x9371;
AXLGLFLCONSTMODIFIER GLconstant GL_SUPERSAMPLE_SCALE_X_NV = 0x9372;
AXLGLFLCONSTMODIFIER GLconstant GL_SUPERSAMPLE_SCALE_Y_NV = 0x9373;
AXLGLFLCONSTMODIFIER GLconstant GL_CONFORMANT_NV = 0x9374;
typedef void (APIENTRYP PFNGLGETINTERNALFORMATSAMPLEIVNVPROC) (GLenum target, GLenum internalformat, GLsizei samples, GLenum pname, GLsizei count, GLint *params);
// GL_NV_internalformat_sample_query

// GL_NV_light_max_exponent
AXLGLFLAPI bool GL_NV_light_max_exponent;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_SHININESS_NV = 0x8504;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_SPOT_EXPONENT_NV = 0x8505;
// GL_NV_light_max_exponent

// GL_NV_memory_attachment
AXLGLFLAPI bool GL_NV_memory_attachment;
AXLGLFLCONSTMODIFIER GLconstant GL_ATTACHED_MEMORY_OBJECT_NV = 0x95A4;
AXLGLFLCONSTMODIFIER GLconstant GL_ATTACHED_MEMORY_OFFSET_NV = 0x95A5;
AXLGLFLCONSTMODIFIER GLconstant GL_MEMORY_ATTACHABLE_ALIGNMENT_NV = 0x95A6;
AXLGLFLCONSTMODIFIER GLconstant GL_MEMORY_ATTACHABLE_SIZE_NV = 0x95A7;
AXLGLFLCONSTMODIFIER GLconstant GL_MEMORY_ATTACHABLE_NV = 0x95A8;
AXLGLFLCONSTMODIFIER GLconstant GL_DETACHED_MEMORY_INCARNATION_NV = 0x95A9;
AXLGLFLCONSTMODIFIER GLconstant GL_DETACHED_TEXTURES_NV = 0x95AA;
AXLGLFLCONSTMODIFIER GLconstant GL_DETACHED_BUFFERS_NV = 0x95AB;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_DETACHED_TEXTURES_NV = 0x95AC;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_DETACHED_BUFFERS_NV = 0x95AD;
typedef void (APIENTRYP PFNGLGETMEMORYOBJECTDETACHEDRESOURCESUIVNVPROC) (GLuint memory, GLenum pname, GLint first, GLsizei count, GLuint *params);
typedef void (APIENTRYP PFNGLRESETMEMORYOBJECTPARAMETERNVPROC) (GLuint memory, GLenum pname);
typedef void (APIENTRYP PFNGLTEXATTACHMEMORYNVPROC) (GLenum target, GLuint memory, GLuint64 offset);
typedef void (APIENTRYP PFNGLBUFFERATTACHMEMORYNVPROC) (GLenum target, GLuint memory, GLuint64 offset);
typedef void (APIENTRYP PFNGLTEXTUREATTACHMEMORYNVPROC) (GLuint texture, GLuint memory, GLuint64 offset);
typedef void (APIENTRYP PFNGLNAMEDBUFFERATTACHMEMORYNVPROC) (GLuint buffer, GLuint memory, GLuint64 offset);
// GL_NV_memory_attachment

// GL_NV_memory_object_sparse
AXLGLFLAPI bool GL_NV_memory_object_sparse;
typedef void (APIENTRYP PFNGLBUFFERPAGECOMMITMENTMEMNVPROC) (GLenum target, GLintptr offset, GLsizeiptr size, GLuint memory, GLuint64 memOffset, GLboolean commit);
typedef void (APIENTRYP PFNGLTEXPAGECOMMITMENTMEMNVPROC) (GLenum target, GLint layer, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLuint memory, GLuint64 offset, GLboolean commit);
typedef void (APIENTRYP PFNGLNAMEDBUFFERPAGECOMMITMENTMEMNVPROC) (GLuint buffer, GLintptr offset, GLsizeiptr size, GLuint memory, GLuint64 memOffset, GLboolean commit);
typedef void (APIENTRYP PFNGLTEXTUREPAGECOMMITMENTMEMNVPROC) (GLuint texture, GLint layer, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLuint memory, GLuint64 offset, GLboolean commit);
// GL_NV_memory_object_sparse

// GL_NV_mesh_shader
AXLGLFLAPI bool GL_NV_mesh_shader;
AXLGLFLCONSTMODIFIER GLconstant GL_MESH_SHADER_NV = 0x9559;
AXLGLFLCONSTMODIFIER GLconstant GL_TASK_SHADER_NV = 0x955A;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_MESH_UNIFORM_BLOCKS_NV = 0x8E60;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_MESH_TEXTURE_IMAGE_UNITS_NV = 0x8E61;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_MESH_IMAGE_UNIFORMS_NV = 0x8E62;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_MESH_UNIFORM_COMPONENTS_NV = 0x8E63;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_MESH_ATOMIC_COUNTER_BUFFERS_NV = 0x8E64;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_MESH_ATOMIC_COUNTERS_NV = 0x8E65;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_MESH_SHADER_STORAGE_BLOCKS_NV = 0x8E66;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_COMBINED_MESH_UNIFORM_COMPONENTS_NV = 0x8E67;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_TASK_UNIFORM_BLOCKS_NV = 0x8E68;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_TASK_TEXTURE_IMAGE_UNITS_NV = 0x8E69;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_TASK_IMAGE_UNIFORMS_NV = 0x8E6A;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_TASK_UNIFORM_COMPONENTS_NV = 0x8E6B;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_TASK_ATOMIC_COUNTER_BUFFERS_NV = 0x8E6C;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_TASK_ATOMIC_COUNTERS_NV = 0x8E6D;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_TASK_SHADER_STORAGE_BLOCKS_NV = 0x8E6E;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_COMBINED_TASK_UNIFORM_COMPONENTS_NV = 0x8E6F;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_MESH_WORK_GROUP_INVOCATIONS_NV = 0x95A2;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_TASK_WORK_GROUP_INVOCATIONS_NV = 0x95A3;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_MESH_TOTAL_MEMORY_SIZE_NV = 0x9536;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_TASK_TOTAL_MEMORY_SIZE_NV = 0x9537;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_MESH_OUTPUT_VERTICES_NV = 0x9538;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_MESH_OUTPUT_PRIMITIVES_NV = 0x9539;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_TASK_OUTPUT_COUNT_NV = 0x953A;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_DRAW_MESH_TASKS_COUNT_NV = 0x953D;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_MESH_VIEWS_NV = 0x9557;
AXLGLFLCONSTMODIFIER GLconstant GL_MESH_OUTPUT_PER_VERTEX_GRANULARITY_NV = 0x92DF;
AXLGLFLCONSTMODIFIER GLconstant GL_MESH_OUTPUT_PER_PRIMITIVE_GRANULARITY_NV = 0x9543;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_MESH_WORK_GROUP_SIZE_NV = 0x953B;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_TASK_WORK_GROUP_SIZE_NV = 0x953C;
AXLGLFLCONSTMODIFIER GLconstant GL_MESH_WORK_GROUP_SIZE_NV = 0x953E;
AXLGLFLCONSTMODIFIER GLconstant GL_TASK_WORK_GROUP_SIZE_NV = 0x953F;
AXLGLFLCONSTMODIFIER GLconstant GL_MESH_VERTICES_OUT_NV = 0x9579;
AXLGLFLCONSTMODIFIER GLconstant GL_MESH_PRIMITIVES_OUT_NV = 0x957A;
AXLGLFLCONSTMODIFIER GLconstant GL_MESH_OUTPUT_TYPE_NV = 0x957B;
AXLGLFLCONSTMODIFIER GLconstant GL_UNIFORM_BLOCK_REFERENCED_BY_MESH_SHADER_NV = 0x959C;
AXLGLFLCONSTMODIFIER GLconstant GL_UNIFORM_BLOCK_REFERENCED_BY_TASK_SHADER_NV = 0x959D;
AXLGLFLCONSTMODIFIER GLconstant GL_REFERENCED_BY_MESH_SHADER_NV = 0x95A0;
AXLGLFLCONSTMODIFIER GLconstant GL_REFERENCED_BY_TASK_SHADER_NV = 0x95A1;
AXLGLFLCONSTMODIFIER GLconstant GL_MESH_SHADER_BIT_NV = 0x000000;40
AXLGLFLCONSTMODIFIER GLconstant GL_TASK_SHADER_BIT_NV = 0x000000;80
AXLGLFLCONSTMODIFIER GLconstant GL_MESH_SUBROUTINE_NV = 0x957C;
AXLGLFLCONSTMODIFIER GLconstant GL_TASK_SUBROUTINE_NV = 0x957D;
AXLGLFLCONSTMODIFIER GLconstant GL_MESH_SUBROUTINE_UNIFORM_NV = 0x957E;
AXLGLFLCONSTMODIFIER GLconstant GL_TASK_SUBROUTINE_UNIFORM_NV = 0x957F;
AXLGLFLCONSTMODIFIER GLconstant GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_MESH_SHADER_NV = 0x959E;
AXLGLFLCONSTMODIFIER GLconstant GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TASK_SHADER_NV = 0x959F;
typedef void (APIENTRYP PFNGLDRAWMESHTASKSNVPROC) (GLuint first, GLuint count);
typedef void (APIENTRYP PFNGLDRAWMESHTASKSINDIRECTNVPROC) (GLintptr indirect);
typedef void (APIENTRYP PFNGLMULTIDRAWMESHTASKSINDIRECTNVPROC) (GLintptr indirect, GLsizei drawcount, GLsizei stride);
typedef void (APIENTRYP PFNGLMULTIDRAWMESHTASKSINDIRECTCOUNTNVPROC) (GLintptr indirect, GLintptr drawcount, GLsizei maxdrawcount, GLsizei stride);
// GL_NV_mesh_shader

// GL_NV_multisample_coverage
AXLGLFLAPI bool GL_NV_multisample_coverage;
// GL_NV_multisample_coverage

// GL_NV_multisample_filter_hint
AXLGLFLAPI bool GL_NV_multisample_filter_hint;
AXLGLFLCONSTMODIFIER GLconstant GL_MULTISAMPLE_FILTER_HINT_NV = 0x8534;
// GL_NV_multisample_filter_hint

// GL_NV_occlusion_query
AXLGLFLAPI bool GL_NV_occlusion_query;
AXLGLFLCONSTMODIFIER GLconstant GL_PIXEL_COUNTER_BITS_NV = 0x8864;
AXLGLFLCONSTMODIFIER GLconstant GL_CURRENT_OCCLUSION_QUERY_ID_NV = 0x8865;
AXLGLFLCONSTMODIFIER GLconstant GL_PIXEL_COUNT_NV = 0x8866;
AXLGLFLCONSTMODIFIER GLconstant GL_PIXEL_COUNT_AVAILABLE_NV = 0x8867;
typedef void (APIENTRYP PFNGLGENOCCLUSIONQUERIESNVPROC) (GLsizei n, GLuint *ids);
typedef void (APIENTRYP PFNGLDELETEOCCLUSIONQUERIESNVPROC) (GLsizei n, const GLuint *ids);
typedef GLboolean (APIENTRYP PFNGLISOCCLUSIONQUERYNVPROC) (GLuint id);
typedef void (APIENTRYP PFNGLBEGINOCCLUSIONQUERYNVPROC) (GLuint id);
typedef void (APIENTRYP PFNGLENDOCCLUSIONQUERYNVPROC) (void);
typedef void (APIENTRYP PFNGLGETOCCLUSIONQUERYIVNVPROC) (GLuint id, GLenum pname, GLint *params);
typedef void (APIENTRYP PFNGLGETOCCLUSIONQUERYUIVNVPROC) (GLuint id, GLenum pname, GLuint *params);
// GL_NV_occlusion_query

// GL_NV_packed_depth_stencil
AXLGLFLAPI bool GL_NV_packed_depth_stencil;
AXLGLFLCONSTMODIFIER GLconstant GL_DEPTH_STENCIL_NV = 0x84F9;
AXLGLFLCONSTMODIFIER GLconstant GL_UNSIGNED_INT_24_8_NV = 0x84FA;
// GL_NV_packed_depth_stencil

// GL_NV_parameter_buffer_object
AXLGLFLAPI bool GL_NV_parameter_buffer_object;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_PROGRAM_PARAMETER_BUFFER_BINDINGS_NV = 0x8DA0;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_PROGRAM_PARAMETER_BUFFER_SIZE_NV = 0x8DA1;
AXLGLFLCONSTMODIFIER GLconstant GL_VERTEX_PROGRAM_PARAMETER_BUFFER_NV = 0x8DA2;
AXLGLFLCONSTMODIFIER GLconstant GL_GEOMETRY_PROGRAM_PARAMETER_BUFFER_NV = 0x8DA3;
AXLGLFLCONSTMODIFIER GLconstant GL_FRAGMENT_PROGRAM_PARAMETER_BUFFER_NV = 0x8DA4;
typedef void (APIENTRYP PFNGLPROGRAMBUFFERPARAMETERSFVNVPROC) (GLenum target, GLuint bindingIndex, GLuint wordIndex, GLsizei count, const GLfloat *params);
typedef void (APIENTRYP PFNGLPROGRAMBUFFERPARAMETERSIIVNVPROC) (GLenum target, GLuint bindingIndex, GLuint wordIndex, GLsizei count, const GLint *params);
typedef void (APIENTRYP PFNGLPROGRAMBUFFERPARAMETERSIUIVNVPROC) (GLenum target, GLuint bindingIndex, GLuint wordIndex, GLsizei count, const GLuint *params);
// GL_NV_parameter_buffer_object

// GL_NV_parameter_buffer_object2
AXLGLFLAPI bool GL_NV_parameter_buffer_object2;
// GL_NV_parameter_buffer_object2

// GL_NV_path_rendering
AXLGLFLAPI bool GL_NV_path_rendering;
AXLGLFLCONSTMODIFIER GLconstant GL_PATH_FORMAT_SVG_NV = 0x9070;
AXLGLFLCONSTMODIFIER GLconstant GL_PATH_FORMAT_PS_NV = 0x9071;
AXLGLFLCONSTMODIFIER GLconstant GL_STANDARD_FONT_NAME_NV = 0x9072;
AXLGLFLCONSTMODIFIER GLconstant GL_SYSTEM_FONT_NAME_NV = 0x9073;
AXLGLFLCONSTMODIFIER GLconstant GL_FILE_NAME_NV = 0x9074;
AXLGLFLCONSTMODIFIER GLconstant GL_PATH_STROKE_WIDTH_NV = 0x9075;
AXLGLFLCONSTMODIFIER GLconstant GL_PATH_END_CAPS_NV = 0x9076;
AXLGLFLCONSTMODIFIER GLconstant GL_PATH_INITIAL_END_CAP_NV = 0x9077;
AXLGLFLCONSTMODIFIER GLconstant GL_PATH_TERMINAL_END_CAP_NV = 0x9078;
AXLGLFLCONSTMODIFIER GLconstant GL_PATH_JOIN_STYLE_NV = 0x9079;
AXLGLFLCONSTMODIFIER GLconstant GL_PATH_MITER_LIMIT_NV = 0x907A;
AXLGLFLCONSTMODIFIER GLconstant GL_PATH_DASH_CAPS_NV = 0x907B;
AXLGLFLCONSTMODIFIER GLconstant GL_PATH_INITIAL_DASH_CAP_NV = 0x907C;
AXLGLFLCONSTMODIFIER GLconstant GL_PATH_TERMINAL_DASH_CAP_NV = 0x907D;
AXLGLFLCONSTMODIFIER GLconstant GL_PATH_DASH_OFFSET_NV = 0x907E;
AXLGLFLCONSTMODIFIER GLconstant GL_PATH_CLIENT_LENGTH_NV = 0x907F;
AXLGLFLCONSTMODIFIER GLconstant GL_PATH_FILL_MODE_NV = 0x9080;
AXLGLFLCONSTMODIFIER GLconstant GL_PATH_FILL_MASK_NV = 0x9081;
AXLGLFLCONSTMODIFIER GLconstant GL_PATH_FILL_COVER_MODE_NV = 0x9082;
AXLGLFLCONSTMODIFIER GLconstant GL_PATH_STROKE_COVER_MODE_NV = 0x9083;
AXLGLFLCONSTMODIFIER GLconstant GL_PATH_STROKE_MASK_NV = 0x9084;
AXLGLFLCONSTMODIFIER GLconstant GL_COUNT_UP_NV = 0x9088;
AXLGLFLCONSTMODIFIER GLconstant GL_COUNT_DOWN_NV = 0x9089;
AXLGLFLCONSTMODIFIER GLconstant GL_PATH_OBJECT_BOUNDING_BOX_NV = 0x908A;
AXLGLFLCONSTMODIFIER GLconstant GL_CONVEX_HULL_NV = 0x908B;
AXLGLFLCONSTMODIFIER GLconstant GL_BOUNDING_BOX_NV = 0x908D;
AXLGLFLCONSTMODIFIER GLconstant GL_TRANSLATE_X_NV = 0x908E;
AXLGLFLCONSTMODIFIER GLconstant GL_TRANSLATE_Y_NV = 0x908F;
AXLGLFLCONSTMODIFIER GLconstant GL_TRANSLATE_2D_NV = 0x9090;
AXLGLFLCONSTMODIFIER GLconstant GL_TRANSLATE_3D_NV = 0x9091;
AXLGLFLCONSTMODIFIER GLconstant GL_AFFINE_2D_NV = 0x9092;
AXLGLFLCONSTMODIFIER GLconstant GL_AFFINE_3D_NV = 0x9094;
AXLGLFLCONSTMODIFIER GLconstant GL_TRANSPOSE_AFFINE_2D_NV = 0x9096;
AXLGLFLCONSTMODIFIER GLconstant GL_TRANSPOSE_AFFINE_3D_NV = 0x9098;
AXLGLFLCONSTMODIFIER GLconstant GL_UTF8_NV = 0x909A;
AXLGLFLCONSTMODIFIER GLconstant GL_UTF16_NV = 0x909B;
AXLGLFLCONSTMODIFIER GLconstant GL_BOUNDING_BOX_OF_BOUNDING_BOXES_NV = 0x909C;
AXLGLFLCONSTMODIFIER GLconstant GL_PATH_COMMAND_COUNT_NV = 0x909D;
AXLGLFLCONSTMODIFIER GLconstant GL_PATH_COORD_COUNT_NV = 0x909E;
AXLGLFLCONSTMODIFIER GLconstant GL_PATH_DASH_ARRAY_COUNT_NV = 0x909F;
AXLGLFLCONSTMODIFIER GLconstant GL_PATH_COMPUTED_LENGTH_NV = 0x90A0;
AXLGLFLCONSTMODIFIER GLconstant GL_PATH_FILL_BOUNDING_BOX_NV = 0x90A1;
AXLGLFLCONSTMODIFIER GLconstant GL_PATH_STROKE_BOUNDING_BOX_NV = 0x90A2;
AXLGLFLCONSTMODIFIER GLconstant GL_SQUARE_NV = 0x90A3;
AXLGLFLCONSTMODIFIER GLconstant GL_ROUND_NV = 0x90A4;
AXLGLFLCONSTMODIFIER GLconstant GL_TRIANGULAR_NV = 0x90A5;
AXLGLFLCONSTMODIFIER GLconstant GL_BEVEL_NV = 0x90A6;
AXLGLFLCONSTMODIFIER GLconstant GL_MITER_REVERT_NV = 0x90A7;
AXLGLFLCONSTMODIFIER GLconstant GL_MITER_TRUNCATE_NV = 0x90A8;
AXLGLFLCONSTMODIFIER GLconstant GL_SKIP_MISSING_GLYPH_NV = 0x90A9;
AXLGLFLCONSTMODIFIER GLconstant GL_USE_MISSING_GLYPH_NV = 0x90AA;
AXLGLFLCONSTMODIFIER GLconstant GL_PATH_ERROR_POSITION_NV = 0x90AB;
AXLGLFLCONSTMODIFIER GLconstant GL_ACCUM_ADJACENT_PAIRS_NV = 0x90AD;
AXLGLFLCONSTMODIFIER GLconstant GL_ADJACENT_PAIRS_NV = 0x90AE;
AXLGLFLCONSTMODIFIER GLconstant GL_FIRST_TO_REST_NV = 0x90AF;
AXLGLFLCONSTMODIFIER GLconstant GL_PATH_GEN_MODE_NV = 0x90B0;
AXLGLFLCONSTMODIFIER GLconstant GL_PATH_GEN_COEFF_NV = 0x90B1;
AXLGLFLCONSTMODIFIER GLconstant GL_PATH_GEN_COMPONENTS_NV = 0x90B3;
AXLGLFLCONSTMODIFIER GLconstant GL_PATH_STENCIL_FUNC_NV = 0x90B7;
AXLGLFLCONSTMODIFIER GLconstant GL_PATH_STENCIL_REF_NV = 0x90B8;
AXLGLFLCONSTMODIFIER GLconstant GL_PATH_STENCIL_VALUE_MASK_NV = 0x90B9;
AXLGLFLCONSTMODIFIER GLconstant GL_PATH_STENCIL_DEPTH_OFFSET_FACTOR_NV = 0x90BD;
AXLGLFLCONSTMODIFIER GLconstant GL_PATH_STENCIL_DEPTH_OFFSET_UNITS_NV = 0x90BE;
AXLGLFLCONSTMODIFIER GLconstant GL_PATH_COVER_DEPTH_FUNC_NV = 0x90BF;
AXLGLFLCONSTMODIFIER GLconstant GL_PATH_DASH_OFFSET_RESET_NV = 0x90B4;
AXLGLFLCONSTMODIFIER GLconstant GL_MOVE_TO_RESETS_NV = 0x90B5;
AXLGLFLCONSTMODIFIER GLconstant GL_MOVE_TO_CONTINUES_NV = 0x90B6;
AXLGLFLCONSTMODIFIER GLconstant GL_CLOSE_PATH_NV = 0x00;
AXLGLFLCONSTMODIFIER GLconstant GL_MOVE_TO_NV = 0x02;
AXLGLFLCONSTMODIFIER GLconstant GL_RELATIVE_MOVE_TO_NV = 0x03;
AXLGLFLCONSTMODIFIER GLconstant GL_LINE_TO_NV = 0x04;
AXLGLFLCONSTMODIFIER GLconstant GL_RELATIVE_LINE_TO_NV = 0x05;
AXLGLFLCONSTMODIFIER GLconstant GL_HORIZONTAL_LINE_TO_NV = 0x06;
AXLGLFLCONSTMODIFIER GLconstant GL_RELATIVE_HORIZONTAL_LINE_TO_NV = 0x07;
AXLGLFLCONSTMODIFIER GLconstant GL_VERTICAL_LINE_TO_NV = 0x08;
AXLGLFLCONSTMODIFIER GLconstant GL_RELATIVE_VERTICAL_LINE_TO_NV = 0x09;
AXLGLFLCONSTMODIFIER GLconstant GL_QUADRATIC_CURVE_TO_NV = 0x0A;
AXLGLFLCONSTMODIFIER GLconstant GL_RELATIVE_QUADRATIC_CURVE_TO_NV = 0x0B;
AXLGLFLCONSTMODIFIER GLconstant GL_CUBIC_CURVE_TO_NV = 0x0C;
AXLGLFLCONSTMODIFIER GLconstant GL_RELATIVE_CUBIC_CURVE_TO_NV = 0x0D;
AXLGLFLCONSTMODIFIER GLconstant GL_SMOOTH_QUADRATIC_CURVE_TO_NV = 0x0E;
AXLGLFLCONSTMODIFIER GLconstant GL_RELATIVE_SMOOTH_QUADRATIC_CURVE_TO_NV = 0x0F;
AXLGLFLCONSTMODIFIER GLconstant GL_SMOOTH_CUBIC_CURVE_TO_NV = 0x10;
AXLGLFLCONSTMODIFIER GLconstant GL_RELATIVE_SMOOTH_CUBIC_CURVE_TO_NV = 0x11;
AXLGLFLCONSTMODIFIER GLconstant GL_SMALL_CCW_ARC_TO_NV = 0x12;
AXLGLFLCONSTMODIFIER GLconstant GL_RELATIVE_SMALL_CCW_ARC_TO_NV = 0x13;
AXLGLFLCONSTMODIFIER GLconstant GL_SMALL_CW_ARC_TO_NV = 0x14;
AXLGLFLCONSTMODIFIER GLconstant GL_RELATIVE_SMALL_CW_ARC_TO_NV = 0x15;
AXLGLFLCONSTMODIFIER GLconstant GL_LARGE_CCW_ARC_TO_NV = 0x16;
AXLGLFLCONSTMODIFIER GLconstant GL_RELATIVE_LARGE_CCW_ARC_TO_NV = 0x17;
AXLGLFLCONSTMODIFIER GLconstant GL_LARGE_CW_ARC_TO_NV = 0x18;
AXLGLFLCONSTMODIFIER GLconstant GL_RELATIVE_LARGE_CW_ARC_TO_NV = 0x19;
AXLGLFLCONSTMODIFIER GLconstant GL_RESTART_PATH_NV = 0xF0;
AXLGLFLCONSTMODIFIER GLconstant GL_DUP_FIRST_CUBIC_CURVE_TO_NV = 0xF2;
AXLGLFLCONSTMODIFIER GLconstant GL_DUP_LAST_CUBIC_CURVE_TO_NV = 0xF4;
AXLGLFLCONSTMODIFIER GLconstant GL_RECT_NV = 0xF6;
AXLGLFLCONSTMODIFIER GLconstant GL_CIRCULAR_CCW_ARC_TO_NV = 0xF8;
AXLGLFLCONSTMODIFIER GLconstant GL_CIRCULAR_CW_ARC_TO_NV = 0xFA;
AXLGLFLCONSTMODIFIER GLconstant GL_CIRCULAR_TANGENT_ARC_TO_NV = 0xFC;
AXLGLFLCONSTMODIFIER GLconstant GL_ARC_TO_NV = 0xFE;
AXLGLFLCONSTMODIFIER GLconstant GL_RELATIVE_ARC_TO_NV = 0xFF;
AXLGLFLCONSTMODIFIER GLconstant GL_BOLD_BIT_NV = 0x01;
AXLGLFLCONSTMODIFIER GLconstant GL_ITALIC_BIT_NV = 0x02;
AXLGLFLCONSTMODIFIER GLconstant GL_GLYPH_WIDTH_BIT_NV = 0x01;
AXLGLFLCONSTMODIFIER GLconstant GL_GLYPH_HEIGHT_BIT_NV = 0x02;
AXLGLFLCONSTMODIFIER GLconstant GL_GLYPH_HORIZONTAL_BEARING_X_BIT_NV = 0x04;
AXLGLFLCONSTMODIFIER GLconstant GL_GLYPH_HORIZONTAL_BEARING_Y_BIT_NV = 0x08;
AXLGLFLCONSTMODIFIER GLconstant GL_GLYPH_HORIZONTAL_BEARING_ADVANCE_BIT_NV = 0x10;
AXLGLFLCONSTMODIFIER GLconstant GL_GLYPH_VERTICAL_BEARING_X_BIT_NV = 0x20;
AXLGLFLCONSTMODIFIER GLconstant GL_GLYPH_VERTICAL_BEARING_Y_BIT_NV = 0x40;
AXLGLFLCONSTMODIFIER GLconstant GL_GLYPH_VERTICAL_BEARING_ADVANCE_BIT_NV = 0x80;
AXLGLFLCONSTMODIFIER GLconstant GL_GLYPH_HAS_KERNING_BIT_NV = 0x100;
AXLGLFLCONSTMODIFIER GLconstant GL_FONT_X_MIN_BOUNDS_BIT_NV = 0x000100;00
AXLGLFLCONSTMODIFIER GLconstant GL_FONT_Y_MIN_BOUNDS_BIT_NV = 0x000200;00
AXLGLFLCONSTMODIFIER GLconstant GL_FONT_X_MAX_BOUNDS_BIT_NV = 0x000400;00
AXLGLFLCONSTMODIFIER GLconstant GL_FONT_Y_MAX_BOUNDS_BIT_NV = 0x000800;00
AXLGLFLCONSTMODIFIER GLconstant GL_FONT_UNITS_PER_EM_BIT_NV = 0x001000;00
AXLGLFLCONSTMODIFIER GLconstant GL_FONT_ASCENDER_BIT_NV = 0x002000;00
AXLGLFLCONSTMODIFIER GLconstant GL_FONT_DESCENDER_BIT_NV = 0x004000;00
AXLGLFLCONSTMODIFIER GLconstant GL_FONT_HEIGHT_BIT_NV = 0x008000;00
AXLGLFLCONSTMODIFIER GLconstant GL_FONT_MAX_ADVANCE_WIDTH_BIT_NV = 0x010000;00
AXLGLFLCONSTMODIFIER GLconstant GL_FONT_MAX_ADVANCE_HEIGHT_BIT_NV = 0x020000;00
AXLGLFLCONSTMODIFIER GLconstant GL_FONT_UNDERLINE_POSITION_BIT_NV = 0x040000;00
AXLGLFLCONSTMODIFIER GLconstant GL_FONT_UNDERLINE_THICKNESS_BIT_NV = 0x080000;00
AXLGLFLCONSTMODIFIER GLconstant GL_FONT_HAS_KERNING_BIT_NV = 0x100000;00
AXLGLFLCONSTMODIFIER GLconstant GL_ROUNDED_RECT_NV = 0xE8;
AXLGLFLCONSTMODIFIER GLconstant GL_RELATIVE_ROUNDED_RECT_NV = 0xE9;
AXLGLFLCONSTMODIFIER GLconstant GL_ROUNDED_RECT2_NV = 0xEA;
AXLGLFLCONSTMODIFIER GLconstant GL_RELATIVE_ROUNDED_RECT2_NV = 0xEB;
AXLGLFLCONSTMODIFIER GLconstant GL_ROUNDED_RECT4_NV = 0xEC;
AXLGLFLCONSTMODIFIER GLconstant GL_RELATIVE_ROUNDED_RECT4_NV = 0xED;
AXLGLFLCONSTMODIFIER GLconstant GL_ROUNDED_RECT8_NV = 0xEE;
AXLGLFLCONSTMODIFIER GLconstant GL_RELATIVE_ROUNDED_RECT8_NV = 0xEF;
AXLGLFLCONSTMODIFIER GLconstant GL_RELATIVE_RECT_NV = 0xF7;
AXLGLFLCONSTMODIFIER GLconstant GL_FONT_GLYPHS_AVAILABLE_NV = 0x9368;
AXLGLFLCONSTMODIFIER GLconstant GL_FONT_TARGET_UNAVAILABLE_NV = 0x9369;
AXLGLFLCONSTMODIFIER GLconstant GL_FONT_UNAVAILABLE_NV = 0x936A;
AXLGLFLCONSTMODIFIER GLconstant GL_FONT_UNINTELLIGIBLE_NV = 0x936B;
AXLGLFLCONSTMODIFIER GLconstant GL_CONIC_CURVE_TO_NV = 0x1A;
AXLGLFLCONSTMODIFIER GLconstant GL_RELATIVE_CONIC_CURVE_TO_NV = 0x1B;
AXLGLFLCONSTMODIFIER GLconstant GL_FONT_NUM_GLYPH_INDICES_BIT_NV = 0x200000;00
AXLGLFLCONSTMODIFIER GLconstant GL_STANDARD_FONT_FORMAT_NV = 0x936C;
AXLGLFLCONSTMODIFIER GLconstant GL_2_BYTES_NV = 0x1407;
AXLGLFLCONSTMODIFIER GLconstant GL_3_BYTES_NV = 0x1408;
AXLGLFLCONSTMODIFIER GLconstant GL_4_BYTES_NV = 0x1409;
AXLGLFLCONSTMODIFIER GLconstant GL_EYE_LINEAR_NV = 0x2400;
AXLGLFLCONSTMODIFIER GLconstant GL_OBJECT_LINEAR_NV = 0x2401;
AXLGLFLCONSTMODIFIER GLconstant GL_CONSTANT_NV = 0x8576;
AXLGLFLCONSTMODIFIER GLconstant GL_PATH_FOG_GEN_MODE_NV = 0x90AC;
AXLGLFLCONSTMODIFIER GLconstant GL_PRIMARY_COLOR_NV = 0x852C;
AXLGLFLCONSTMODIFIER GLconstant GL_SECONDARY_COLOR_NV = 0x852D;
AXLGLFLCONSTMODIFIER GLconstant GL_PATH_GEN_COLOR_FORMAT_NV = 0x90B2;
AXLGLFLCONSTMODIFIER GLconstant GL_PATH_PROJECTION_NV = 0x1701;
AXLGLFLCONSTMODIFIER GLconstant GL_PATH_MODELVIEW_NV = 0x1700;
AXLGLFLCONSTMODIFIER GLconstant GL_PATH_MODELVIEW_STACK_DEPTH_NV = 0x0BA3;
AXLGLFLCONSTMODIFIER GLconstant GL_PATH_MODELVIEW_MATRIX_NV = 0x0BA6;
AXLGLFLCONSTMODIFIER GLconstant GL_PATH_MAX_MODELVIEW_STACK_DEPTH_NV = 0x0D36;
AXLGLFLCONSTMODIFIER GLconstant GL_PATH_TRANSPOSE_MODELVIEW_MATRIX_NV = 0x84E3;
AXLGLFLCONSTMODIFIER GLconstant GL_PATH_PROJECTION_STACK_DEPTH_NV = 0x0BA4;
AXLGLFLCONSTMODIFIER GLconstant GL_PATH_PROJECTION_MATRIX_NV = 0x0BA7;
AXLGLFLCONSTMODIFIER GLconstant GL_PATH_MAX_PROJECTION_STACK_DEPTH_NV = 0x0D38;
AXLGLFLCONSTMODIFIER GLconstant GL_PATH_TRANSPOSE_PROJECTION_MATRIX_NV = 0x84E4;
AXLGLFLCONSTMODIFIER GLconstant GL_FRAGMENT_INPUT_NV = 0x936D;
typedef GLuint (APIENTRYP PFNGLGENPATHSNVPROC) (GLsizei range);
typedef void (APIENTRYP PFNGLDELETEPATHSNVPROC) (GLuint path, GLsizei range);
typedef GLboolean (APIENTRYP PFNGLISPATHNVPROC) (GLuint path);
typedef void (APIENTRYP PFNGLPATHCOMMANDSNVPROC) (GLuint path, GLsizei numCommands, const GLubyte *commands, GLsizei numCoords, GLenum coordType, const void *coords);
typedef void (APIENTRYP PFNGLPATHCOORDSNVPROC) (GLuint path, GLsizei numCoords, GLenum coordType, const void *coords);
typedef void (APIENTRYP PFNGLPATHSUBCOMMANDSNVPROC) (GLuint path, GLsizei commandStart, GLsizei commandsToDelete, GLsizei numCommands, const GLubyte *commands, GLsizei numCoords, GLenum coordType, const void *coords);
typedef void (APIENTRYP PFNGLPATHSUBCOORDSNVPROC) (GLuint path, GLsizei coordStart, GLsizei numCoords, GLenum coordType, const void *coords);
typedef void (APIENTRYP PFNGLPATHSTRINGNVPROC) (GLuint path, GLenum format, GLsizei length, const void *pathString);
typedef void (APIENTRYP PFNGLPATHGLYPHSNVPROC) (GLuint firstPathName, GLenum fontTarget, const void *fontName, GLbitfield fontStyle, GLsizei numGlyphs, GLenum type, const void *charcodes, GLenum handleMissingGlyphs, GLuint pathParameterTemplate, GLfloat emScale);
typedef void (APIENTRYP PFNGLPATHGLYPHRANGENVPROC) (GLuint firstPathName, GLenum fontTarget, const void *fontName, GLbitfield fontStyle, GLuint firstGlyph, GLsizei numGlyphs, GLenum handleMissingGlyphs, GLuint pathParameterTemplate, GLfloat emScale);
typedef void (APIENTRYP PFNGLWEIGHTPATHSNVPROC) (GLuint resultPath, GLsizei numPaths, const GLuint *paths, const GLfloat *weights);
typedef void (APIENTRYP PFNGLCOPYPATHNVPROC) (GLuint resultPath, GLuint srcPath);
typedef void (APIENTRYP PFNGLINTERPOLATEPATHSNVPROC) (GLuint resultPath, GLuint pathA, GLuint pathB, GLfloat weight);
typedef void (APIENTRYP PFNGLTRANSFORMPATHNVPROC) (GLuint resultPath, GLuint srcPath, GLenum transformType, const GLfloat *transformValues);
typedef void (APIENTRYP PFNGLPATHPARAMETERIVNVPROC) (GLuint path, GLenum pname, const GLint *value);
typedef void (APIENTRYP PFNGLPATHPARAMETERINVPROC) (GLuint path, GLenum pname, GLint value);
typedef void (APIENTRYP PFNGLPATHPARAMETERFVNVPROC) (GLuint path, GLenum pname, const GLfloat *value);
typedef void (APIENTRYP PFNGLPATHPARAMETERFNVPROC) (GLuint path, GLenum pname, GLfloat value);
typedef void (APIENTRYP PFNGLPATHDASHARRAYNVPROC) (GLuint path, GLsizei dashCount, const GLfloat *dashArray);
typedef void (APIENTRYP PFNGLPATHSTENCILFUNCNVPROC) (GLenum func, GLint ref, GLuint mask);
typedef void (APIENTRYP PFNGLPATHSTENCILDEPTHOFFSETNVPROC) (GLfloat factor, GLfloat units);
typedef void (APIENTRYP PFNGLSTENCILFILLPATHNVPROC) (GLuint path, GLenum fillMode, GLuint mask);
typedef void (APIENTRYP PFNGLSTENCILSTROKEPATHNVPROC) (GLuint path, GLint reference, GLuint mask);
typedef void (APIENTRYP PFNGLSTENCILFILLPATHINSTANCEDNVPROC) (GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLenum fillMode, GLuint mask, GLenum transformType, const GLfloat *transformValues);
typedef void (APIENTRYP PFNGLSTENCILSTROKEPATHINSTANCEDNVPROC) (GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLint reference, GLuint mask, GLenum transformType, const GLfloat *transformValues);
typedef void (APIENTRYP PFNGLPATHCOVERDEPTHFUNCNVPROC) (GLenum func);
typedef void (APIENTRYP PFNGLCOVERFILLPATHNVPROC) (GLuint path, GLenum coverMode);
typedef void (APIENTRYP PFNGLCOVERSTROKEPATHNVPROC) (GLuint path, GLenum coverMode);
typedef void (APIENTRYP PFNGLCOVERFILLPATHINSTANCEDNVPROC) (GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLenum coverMode, GLenum transformType, const GLfloat *transformValues);
typedef void (APIENTRYP PFNGLCOVERSTROKEPATHINSTANCEDNVPROC) (GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLenum coverMode, GLenum transformType, const GLfloat *transformValues);
typedef void (APIENTRYP PFNGLGETPATHPARAMETERIVNVPROC) (GLuint path, GLenum pname, GLint *value);
typedef void (APIENTRYP PFNGLGETPATHPARAMETERFVNVPROC) (GLuint path, GLenum pname, GLfloat *value);
typedef void (APIENTRYP PFNGLGETPATHCOMMANDSNVPROC) (GLuint path, GLubyte *commands);
typedef void (APIENTRYP PFNGLGETPATHCOORDSNVPROC) (GLuint path, GLfloat *coords);
typedef void (APIENTRYP PFNGLGETPATHDASHARRAYNVPROC) (GLuint path, GLfloat *dashArray);
typedef void (APIENTRYP PFNGLGETPATHMETRICSNVPROC) (GLbitfield metricQueryMask, GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLsizei stride, GLfloat *metrics);
typedef void (APIENTRYP PFNGLGETPATHMETRICRANGENVPROC) (GLbitfield metricQueryMask, GLuint firstPathName, GLsizei numPaths, GLsizei stride, GLfloat *metrics);
typedef void (APIENTRYP PFNGLGETPATHSPACINGNVPROC) (GLenum pathListMode, GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLfloat advanceScale, GLfloat kerningScale, GLenum transformType, GLfloat *returnedSpacing);
typedef GLboolean (APIENTRYP PFNGLISPOINTINFILLPATHNVPROC) (GLuint path, GLuint mask, GLfloat x, GLfloat y);
typedef GLboolean (APIENTRYP PFNGLISPOINTINSTROKEPATHNVPROC) (GLuint path, GLfloat x, GLfloat y);
typedef GLfloat (APIENTRYP PFNGLGETPATHLENGTHNVPROC) (GLuint path, GLsizei startSegment, GLsizei numSegments);
typedef GLboolean (APIENTRYP PFNGLPOINTALONGPATHNVPROC) (GLuint path, GLsizei startSegment, GLsizei numSegments, GLfloat distance, GLfloat *x, GLfloat *y, GLfloat *tangentX, GLfloat *tangentY);
typedef void (APIENTRYP PFNGLMATRIXLOAD3X2FNVPROC) (GLenum matrixMode, const GLfloat *m);
typedef void (APIENTRYP PFNGLMATRIXLOAD3X3FNVPROC) (GLenum matrixMode, const GLfloat *m);
typedef void (APIENTRYP PFNGLMATRIXLOADTRANSPOSE3X3FNVPROC) (GLenum matrixMode, const GLfloat *m);
typedef void (APIENTRYP PFNGLMATRIXMULT3X2FNVPROC) (GLenum matrixMode, const GLfloat *m);
typedef void (APIENTRYP PFNGLMATRIXMULT3X3FNVPROC) (GLenum matrixMode, const GLfloat *m);
typedef void (APIENTRYP PFNGLMATRIXMULTTRANSPOSE3X3FNVPROC) (GLenum matrixMode, const GLfloat *m);
typedef void (APIENTRYP PFNGLSTENCILTHENCOVERFILLPATHNVPROC) (GLuint path, GLenum fillMode, GLuint mask, GLenum coverMode);
typedef void (APIENTRYP PFNGLSTENCILTHENCOVERSTROKEPATHNVPROC) (GLuint path, GLint reference, GLuint mask, GLenum coverMode);
typedef void (APIENTRYP PFNGLSTENCILTHENCOVERFILLPATHINSTANCEDNVPROC) (GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLenum fillMode, GLuint mask, GLenum coverMode, GLenum transformType, const GLfloat *transformValues);
typedef void (APIENTRYP PFNGLSTENCILTHENCOVERSTROKEPATHINSTANCEDNVPROC) (GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLint reference, GLuint mask, GLenum coverMode, GLenum transformType, const GLfloat *transformValues);
typedef GLenum (APIENTRYP PFNGLPATHGLYPHINDEXRANGENVPROC) (GLenum fontTarget, const void *fontName, GLbitfield fontStyle, GLuint pathParameterTemplate, GLfloat emScale, GLuint baseAndCount[2]);
typedef GLenum (APIENTRYP PFNGLPATHGLYPHINDEXARRAYNVPROC) (GLuint firstPathName, GLenum fontTarget, const void *fontName, GLbitfield fontStyle, GLuint firstGlyphIndex, GLsizei numGlyphs, GLuint pathParameterTemplate, GLfloat emScale);
typedef GLenum (APIENTRYP PFNGLPATHMEMORYGLYPHINDEXARRAYNVPROC) (GLuint firstPathName, GLenum fontTarget, GLsizeiptr fontSize, const void *fontData, GLsizei faceIndex, GLuint firstGlyphIndex, GLsizei numGlyphs, GLuint pathParameterTemplate, GLfloat emScale);
typedef void (APIENTRYP PFNGLPROGRAMPATHFRAGMENTINPUTGENNVPROC) (GLuint program, GLint location, GLenum genMode, GLint components, const GLfloat *coeffs);
typedef void (APIENTRYP PFNGLGETPROGRAMRESOURCEFVNVPROC) (GLuint program, GLenum programInterface, GLuint index, GLsizei propCount, const GLenum *props, GLsizei count, GLsizei *length, GLfloat *params);
typedef void (APIENTRYP PFNGLPATHCOLORGENNVPROC) (GLenum color, GLenum genMode, GLenum colorFormat, const GLfloat *coeffs);
typedef void (APIENTRYP PFNGLPATHTEXGENNVPROC) (GLenum texCoordSet, GLenum genMode, GLint components, const GLfloat *coeffs);
typedef void (APIENTRYP PFNGLPATHFOGGENNVPROC) (GLenum genMode);
typedef void (APIENTRYP PFNGLGETPATHCOLORGENIVNVPROC) (GLenum color, GLenum pname, GLint *value);
typedef void (APIENTRYP PFNGLGETPATHCOLORGENFVNVPROC) (GLenum color, GLenum pname, GLfloat *value);
typedef void (APIENTRYP PFNGLGETPATHTEXGENIVNVPROC) (GLenum texCoordSet, GLenum pname, GLint *value);
typedef void (APIENTRYP PFNGLGETPATHTEXGENFVNVPROC) (GLenum texCoordSet, GLenum pname, GLfloat *value);
// GL_NV_path_rendering

// GL_NV_path_rendering_shared_edge
AXLGLFLAPI bool GL_NV_path_rendering_shared_edge;
AXLGLFLCONSTMODIFIER GLconstant GL_SHARED_EDGE_NV = 0xC0;
// GL_NV_path_rendering_shared_edge

// GL_NV_pixel_data_range
AXLGLFLAPI bool GL_NV_pixel_data_range;
AXLGLFLCONSTMODIFIER GLconstant GL_WRITE_PIXEL_DATA_RANGE_NV = 0x8878;
AXLGLFLCONSTMODIFIER GLconstant GL_READ_PIXEL_DATA_RANGE_NV = 0x8879;
AXLGLFLCONSTMODIFIER GLconstant GL_WRITE_PIXEL_DATA_RANGE_LENGTH_NV = 0x887A;
AXLGLFLCONSTMODIFIER GLconstant GL_READ_PIXEL_DATA_RANGE_LENGTH_NV = 0x887B;
AXLGLFLCONSTMODIFIER GLconstant GL_WRITE_PIXEL_DATA_RANGE_POINTER_NV = 0x887C;
AXLGLFLCONSTMODIFIER GLconstant GL_READ_PIXEL_DATA_RANGE_POINTER_NV = 0x887D;
typedef void (APIENTRYP PFNGLPIXELDATARANGENVPROC) (GLenum target, GLsizei length, const void *pointer);
typedef void (APIENTRYP PFNGLFLUSHPIXELDATARANGENVPROC) (GLenum target);
// GL_NV_pixel_data_range

// GL_NV_point_sprite
AXLGLFLAPI bool GL_NV_point_sprite;
AXLGLFLCONSTMODIFIER GLconstant GL_POINT_SPRITE_NV = 0x8861;
AXLGLFLCONSTMODIFIER GLconstant GL_COORD_REPLACE_NV = 0x8862;
AXLGLFLCONSTMODIFIER GLconstant GL_POINT_SPRITE_R_MODE_NV = 0x8863;
typedef void (APIENTRYP PFNGLPOINTPARAMETERINVPROC) (GLenum pname, GLint param);
typedef void (APIENTRYP PFNGLPOINTPARAMETERIVNVPROC) (GLenum pname, const GLint *params);
// GL_NV_point_sprite

// GL_NV_present_video
AXLGLFLAPI bool GL_NV_present_video;
AXLGLFLCONSTMODIFIER GLconstant GL_FRAME_NV = 0x8E26;
AXLGLFLCONSTMODIFIER GLconstant GL_FIELDS_NV = 0x8E27;
AXLGLFLCONSTMODIFIER GLconstant GL_CURRENT_TIME_NV = 0x8E28;
AXLGLFLCONSTMODIFIER GLconstant GL_NUM_FILL_STREAMS_NV = 0x8E29;
AXLGLFLCONSTMODIFIER GLconstant GL_PRESENT_TIME_NV = 0x8E2A;
AXLGLFLCONSTMODIFIER GLconstant GL_PRESENT_DURATION_NV = 0x8E2B;
typedef void (APIENTRYP PFNGLPRESENTFRAMEKEYEDNVPROC) (GLuint video_slot, GLuint64EXT minPresentTime, GLuint beginPresentTimeId, GLuint presentDurationId, GLenum type, GLenum target0, GLuint fill0, GLuint key0, GLenum target1, GLuint fill1, GLuint key1);
typedef void (APIENTRYP PFNGLPRESENTFRAMEDUALFILLNVPROC) (GLuint video_slot, GLuint64EXT minPresentTime, GLuint beginPresentTimeId, GLuint presentDurationId, GLenum type, GLenum target0, GLuint fill0, GLenum target1, GLuint fill1, GLenum target2, GLuint fill2, GLenum target3, GLuint fill3);
typedef void (APIENTRYP PFNGLGETVIDEOIVNVPROC) (GLuint video_slot, GLenum pname, GLint *params);
typedef void (APIENTRYP PFNGLGETVIDEOUIVNVPROC) (GLuint video_slot, GLenum pname, GLuint *params);
typedef void (APIENTRYP PFNGLGETVIDEOI64VNVPROC) (GLuint video_slot, GLenum pname, GLint64EXT *params);
typedef void (APIENTRYP PFNGLGETVIDEOUI64VNVPROC) (GLuint video_slot, GLenum pname, GLuint64EXT *params);
// GL_NV_present_video

// GL_NV_primitive_restart
AXLGLFLAPI bool GL_NV_primitive_restart;
AXLGLFLCONSTMODIFIER GLconstant GL_PRIMITIVE_RESTART_NV = 0x8558;
AXLGLFLCONSTMODIFIER GLconstant GL_PRIMITIVE_RESTART_INDEX_NV = 0x8559;
typedef void (APIENTRYP PFNGLPRIMITIVERESTARTNVPROC) (void);
typedef void (APIENTRYP PFNGLPRIMITIVERESTARTINDEXNVPROC) (GLuint index);
// GL_NV_primitive_restart

// GL_NV_primitive_shading_rate
AXLGLFLAPI bool GL_NV_primitive_shading_rate;
AXLGLFLCONSTMODIFIER GLconstant GL_SHADING_RATE_IMAGE_PER_PRIMITIVE_NV = 0x95B1;
AXLGLFLCONSTMODIFIER GLconstant GL_SHADING_RATE_IMAGE_PALETTE_COUNT_NV = 0x95B2;
// GL_NV_primitive_shading_rate

// GL_NV_query_resource
AXLGLFLAPI bool GL_NV_query_resource;
AXLGLFLCONSTMODIFIER GLconstant GL_QUERY_RESOURCE_TYPE_VIDMEM_ALLOC_NV = 0x9540;
AXLGLFLCONSTMODIFIER GLconstant GL_QUERY_RESOURCE_MEMTYPE_VIDMEM_NV = 0x9542;
AXLGLFLCONSTMODIFIER GLconstant GL_QUERY_RESOURCE_SYS_RESERVED_NV = 0x9544;
AXLGLFLCONSTMODIFIER GLconstant GL_QUERY_RESOURCE_TEXTURE_NV = 0x9545;
AXLGLFLCONSTMODIFIER GLconstant GL_QUERY_RESOURCE_RENDERBUFFER_NV = 0x9546;
AXLGLFLCONSTMODIFIER GLconstant GL_QUERY_RESOURCE_BUFFEROBJECT_NV = 0x9547;
typedef GLint (APIENTRYP PFNGLQUERYRESOURCENVPROC) (GLenum queryType, GLint tagId, GLuint count, GLint *buffer);
// GL_NV_query_resource

// GL_NV_query_resource_tag
AXLGLFLAPI bool GL_NV_query_resource_tag;
typedef void (APIENTRYP PFNGLGENQUERYRESOURCETAGNVPROC) (GLsizei n, GLint *tagIds);
typedef void (APIENTRYP PFNGLDELETEQUERYRESOURCETAGNVPROC) (GLsizei n, const GLint *tagIds);
typedef void (APIENTRYP PFNGLQUERYRESOURCETAGNVPROC) (GLint tagId, const GLchar *tagString);
// GL_NV_query_resource_tag

// GL_NV_register_combiners
AXLGLFLAPI bool GL_NV_register_combiners;
AXLGLFLCONSTMODIFIER GLconstant GL_REGISTER_COMBINERS_NV = 0x8522;
AXLGLFLCONSTMODIFIER GLconstant GL_VARIABLE_A_NV = 0x8523;
AXLGLFLCONSTMODIFIER GLconstant GL_VARIABLE_B_NV = 0x8524;
AXLGLFLCONSTMODIFIER GLconstant GL_VARIABLE_C_NV = 0x8525;
AXLGLFLCONSTMODIFIER GLconstant GL_VARIABLE_D_NV = 0x8526;
AXLGLFLCONSTMODIFIER GLconstant GL_VARIABLE_E_NV = 0x8527;
AXLGLFLCONSTMODIFIER GLconstant GL_VARIABLE_F_NV = 0x8528;
AXLGLFLCONSTMODIFIER GLconstant GL_VARIABLE_G_NV = 0x8529;
AXLGLFLCONSTMODIFIER GLconstant GL_CONSTANT_COLOR0_NV = 0x852A;
AXLGLFLCONSTMODIFIER GLconstant GL_CONSTANT_COLOR1_NV = 0x852B;
AXLGLFLCONSTMODIFIER GLconstant GL_SPARE0_NV = 0x852E;
AXLGLFLCONSTMODIFIER GLconstant GL_SPARE1_NV = 0x852F;
AXLGLFLCONSTMODIFIER GLconstant GL_DISCARD_NV = 0x8530;
AXLGLFLCONSTMODIFIER GLconstant GL_E_TIMES_F_NV = 0x8531;
AXLGLFLCONSTMODIFIER GLconstant GL_SPARE0_PLUS_SECONDARY_COLOR_NV = 0x8532;
AXLGLFLCONSTMODIFIER GLconstant GL_UNSIGNED_IDENTITY_NV = 0x8536;
AXLGLFLCONSTMODIFIER GLconstant GL_UNSIGNED_INVERT_NV = 0x8537;
AXLGLFLCONSTMODIFIER GLconstant GL_EXPAND_NORMAL_NV = 0x8538;
AXLGLFLCONSTMODIFIER GLconstant GL_EXPAND_NEGATE_NV = 0x8539;
AXLGLFLCONSTMODIFIER GLconstant GL_HALF_BIAS_NORMAL_NV = 0x853A;
AXLGLFLCONSTMODIFIER GLconstant GL_HALF_BIAS_NEGATE_NV = 0x853B;
AXLGLFLCONSTMODIFIER GLconstant GL_SIGNED_IDENTITY_NV = 0x853C;
AXLGLFLCONSTMODIFIER GLconstant GL_SIGNED_NEGATE_NV = 0x853D;
AXLGLFLCONSTMODIFIER GLconstant GL_SCALE_BY_TWO_NV = 0x853E;
AXLGLFLCONSTMODIFIER GLconstant GL_SCALE_BY_FOUR_NV = 0x853F;
AXLGLFLCONSTMODIFIER GLconstant GL_SCALE_BY_ONE_HALF_NV = 0x8540;
AXLGLFLCONSTMODIFIER GLconstant GL_BIAS_BY_NEGATIVE_ONE_HALF_NV = 0x8541;
AXLGLFLCONSTMODIFIER GLconstant GL_COMBINER_INPUT_NV = 0x8542;
AXLGLFLCONSTMODIFIER GLconstant GL_COMBINER_MAPPING_NV = 0x8543;
AXLGLFLCONSTMODIFIER GLconstant GL_COMBINER_COMPONENT_USAGE_NV = 0x8544;
AXLGLFLCONSTMODIFIER GLconstant GL_COMBINER_AB_DOT_PRODUCT_NV = 0x8545;
AXLGLFLCONSTMODIFIER GLconstant GL_COMBINER_CD_DOT_PRODUCT_NV = 0x8546;
AXLGLFLCONSTMODIFIER GLconstant GL_COMBINER_MUX_SUM_NV = 0x8547;
AXLGLFLCONSTMODIFIER GLconstant GL_COMBINER_SCALE_NV = 0x8548;
AXLGLFLCONSTMODIFIER GLconstant GL_COMBINER_BIAS_NV = 0x8549;
AXLGLFLCONSTMODIFIER GLconstant GL_COMBINER_AB_OUTPUT_NV = 0x854A;
AXLGLFLCONSTMODIFIER GLconstant GL_COMBINER_CD_OUTPUT_NV = 0x854B;
AXLGLFLCONSTMODIFIER GLconstant GL_COMBINER_SUM_OUTPUT_NV = 0x854C;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_GENERAL_COMBINERS_NV = 0x854D;
AXLGLFLCONSTMODIFIER GLconstant GL_NUM_GENERAL_COMBINERS_NV = 0x854E;
AXLGLFLCONSTMODIFIER GLconstant GL_COLOR_SUM_CLAMP_NV = 0x854F;
AXLGLFLCONSTMODIFIER GLconstant GL_COMBINER0_NV = 0x8550;
AXLGLFLCONSTMODIFIER GLconstant GL_COMBINER1_NV = 0x8551;
AXLGLFLCONSTMODIFIER GLconstant GL_COMBINER2_NV = 0x8552;
AXLGLFLCONSTMODIFIER GLconstant GL_COMBINER3_NV = 0x8553;
AXLGLFLCONSTMODIFIER GLconstant GL_COMBINER4_NV = 0x8554;
AXLGLFLCONSTMODIFIER GLconstant GL_COMBINER5_NV = 0x8555;
AXLGLFLCONSTMODIFIER GLconstant GL_COMBINER6_NV = 0x8556;
AXLGLFLCONSTMODIFIER GLconstant GL_COMBINER7_NV = 0x8557;
typedef void (APIENTRYP PFNGLCOMBINERPARAMETERFVNVPROC) (GLenum pname, const GLfloat *params);
typedef void (APIENTRYP PFNGLCOMBINERPARAMETERFNVPROC) (GLenum pname, GLfloat param);
typedef void (APIENTRYP PFNGLCOMBINERPARAMETERIVNVPROC) (GLenum pname, const GLint *params);
typedef void (APIENTRYP PFNGLCOMBINERPARAMETERINVPROC) (GLenum pname, GLint param);
typedef void (APIENTRYP PFNGLCOMBINERINPUTNVPROC) (GLenum stage, GLenum portion, GLenum variable, GLenum input, GLenum mapping, GLenum componentUsage);
typedef void (APIENTRYP PFNGLCOMBINEROUTPUTNVPROC) (GLenum stage, GLenum portion, GLenum abOutput, GLenum cdOutput, GLenum sumOutput, GLenum scale, GLenum bias, GLboolean abDotProduct, GLboolean cdDotProduct, GLboolean muxSum);
typedef void (APIENTRYP PFNGLFINALCOMBINERINPUTNVPROC) (GLenum variable, GLenum input, GLenum mapping, GLenum componentUsage);
typedef void (APIENTRYP PFNGLGETCOMBINERINPUTPARAMETERFVNVPROC) (GLenum stage, GLenum portion, GLenum variable, GLenum pname, GLfloat *params);
typedef void (APIENTRYP PFNGLGETCOMBINERINPUTPARAMETERIVNVPROC) (GLenum stage, GLenum portion, GLenum variable, GLenum pname, GLint *params);
typedef void (APIENTRYP PFNGLGETCOMBINEROUTPUTPARAMETERFVNVPROC) (GLenum stage, GLenum portion, GLenum pname, GLfloat *params);
typedef void (APIENTRYP PFNGLGETCOMBINEROUTPUTPARAMETERIVNVPROC) (GLenum stage, GLenum portion, GLenum pname, GLint *params);
typedef void (APIENTRYP PFNGLGETFINALCOMBINERINPUTPARAMETERFVNVPROC) (GLenum variable, GLenum pname, GLfloat *params);
typedef void (APIENTRYP PFNGLGETFINALCOMBINERINPUTPARAMETERIVNVPROC) (GLenum variable, GLenum pname, GLint *params);
// GL_NV_register_combiners

// GL_NV_register_combiners2
AXLGLFLAPI bool GL_NV_register_combiners2;
AXLGLFLCONSTMODIFIER GLconstant GL_PER_STAGE_CONSTANTS_NV = 0x8535;
typedef void (APIENTRYP PFNGLCOMBINERSTAGEPARAMETERFVNVPROC) (GLenum stage, GLenum pname, const GLfloat *params);
typedef void (APIENTRYP PFNGLGETCOMBINERSTAGEPARAMETERFVNVPROC) (GLenum stage, GLenum pname, GLfloat *params);
// GL_NV_register_combiners2

// GL_NV_representative_fragment_test
AXLGLFLAPI bool GL_NV_representative_fragment_test;
AXLGLFLCONSTMODIFIER GLconstant GL_REPRESENTATIVE_FRAGMENT_TEST_NV = 0x937F;
// GL_NV_representative_fragment_test

// GL_NV_robustness_video_memory_purge
AXLGLFLAPI bool GL_NV_robustness_video_memory_purge;
AXLGLFLCONSTMODIFIER GLconstant GL_PURGED_CONTEXT_RESET_NV = 0x92BB;
// GL_NV_robustness_video_memory_purge

// GL_NV_sample_locations
AXLGLFLAPI bool GL_NV_sample_locations;
AXLGLFLCONSTMODIFIER GLconstant GL_SAMPLE_LOCATION_SUBPIXEL_BITS_NV = 0x933D;
AXLGLFLCONSTMODIFIER GLconstant GL_SAMPLE_LOCATION_PIXEL_GRID_WIDTH_NV = 0x933E;
AXLGLFLCONSTMODIFIER GLconstant GL_SAMPLE_LOCATION_PIXEL_GRID_HEIGHT_NV = 0x933F;
AXLGLFLCONSTMODIFIER GLconstant GL_PROGRAMMABLE_SAMPLE_LOCATION_TABLE_SIZE_NV = 0x9340;
AXLGLFLCONSTMODIFIER GLconstant GL_SAMPLE_LOCATION_NV = 0x8E50;
AXLGLFLCONSTMODIFIER GLconstant GL_PROGRAMMABLE_SAMPLE_LOCATION_NV = 0x9341;
AXLGLFLCONSTMODIFIER GLconstant GL_FRAMEBUFFER_PROGRAMMABLE_SAMPLE_LOCATIONS_NV = 0x9342;
AXLGLFLCONSTMODIFIER GLconstant GL_FRAMEBUFFER_SAMPLE_LOCATION_PIXEL_GRID_NV = 0x9343;
typedef void (APIENTRYP PFNGLFRAMEBUFFERSAMPLELOCATIONSFVNVPROC) (GLenum target, GLuint start, GLsizei count, const GLfloat *v);
typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERSAMPLELOCATIONSFVNVPROC) (GLuint framebuffer, GLuint start, GLsizei count, const GLfloat *v);
typedef void (APIENTRYP PFNGLRESOLVEDEPTHVALUESNVPROC) (void);
// GL_NV_sample_locations

// GL_NV_sample_mask_override_coverage
AXLGLFLAPI bool GL_NV_sample_mask_override_coverage;
// GL_NV_sample_mask_override_coverage

// GL_NV_scissor_exclusive
AXLGLFLAPI bool GL_NV_scissor_exclusive;
AXLGLFLCONSTMODIFIER GLconstant GL_SCISSOR_TEST_EXCLUSIVE_NV = 0x9555;
AXLGLFLCONSTMODIFIER GLconstant GL_SCISSOR_BOX_EXCLUSIVE_NV = 0x9556;
typedef void (APIENTRYP PFNGLSCISSOREXCLUSIVENVPROC) (GLint x, GLint y, GLsizei width, GLsizei height);
typedef void (APIENTRYP PFNGLSCISSOREXCLUSIVEARRAYVNVPROC) (GLuint first, GLsizei count, const GLint *v);
// GL_NV_scissor_exclusive

// GL_NV_shader_atomic_counters
AXLGLFLAPI bool GL_NV_shader_atomic_counters;
// GL_NV_shader_atomic_counters

// GL_NV_shader_atomic_float
AXLGLFLAPI bool GL_NV_shader_atomic_float;
// GL_NV_shader_atomic_float

// GL_NV_shader_atomic_float64
AXLGLFLAPI bool GL_NV_shader_atomic_float64;
// GL_NV_shader_atomic_float64

// GL_NV_shader_atomic_fp16_vector
AXLGLFLAPI bool GL_NV_shader_atomic_fp16_vector;
// GL_NV_shader_atomic_fp16_vector

// GL_NV_shader_atomic_int64
AXLGLFLAPI bool GL_NV_shader_atomic_int64;
// GL_NV_shader_atomic_int64

// GL_NV_shader_buffer_load
AXLGLFLAPI bool GL_NV_shader_buffer_load;
AXLGLFLCONSTMODIFIER GLconstant GL_BUFFER_GPU_ADDRESS_NV = 0x8F1D;
AXLGLFLCONSTMODIFIER GLconstant GL_GPU_ADDRESS_NV = 0x8F34;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_SHADER_BUFFER_ADDRESS_NV = 0x8F35;
typedef void (APIENTRYP PFNGLMAKEBUFFERRESIDENTNVPROC) (GLenum target, GLenum access);
typedef void (APIENTRYP PFNGLMAKEBUFFERNONRESIDENTNVPROC) (GLenum target);
typedef GLboolean (APIENTRYP PFNGLISBUFFERRESIDENTNVPROC) (GLenum target);
typedef void (APIENTRYP PFNGLMAKENAMEDBUFFERRESIDENTNVPROC) (GLuint buffer, GLenum access);
typedef void (APIENTRYP PFNGLMAKENAMEDBUFFERNONRESIDENTNVPROC) (GLuint buffer);
typedef GLboolean (APIENTRYP PFNGLISNAMEDBUFFERRESIDENTNVPROC) (GLuint buffer);
typedef void (APIENTRYP PFNGLGETBUFFERPARAMETERUI64VNVPROC) (GLenum target, GLenum pname, GLuint64EXT *params);
typedef void (APIENTRYP PFNGLGETNAMEDBUFFERPARAMETERUI64VNVPROC) (GLuint buffer, GLenum pname, GLuint64EXT *params);
typedef void (APIENTRYP PFNGLGETINTEGERUI64VNVPROC) (GLenum value, GLuint64EXT *result);
typedef void (APIENTRYP PFNGLUNIFORMUI64NVPROC) (GLint location, GLuint64EXT value);
typedef void (APIENTRYP PFNGLUNIFORMUI64VNVPROC) (GLint location, GLsizei count, const GLuint64EXT *value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMUI64NVPROC) (GLuint program, GLint location, GLuint64EXT value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMUI64VNVPROC) (GLuint program, GLint location, GLsizei count, const GLuint64EXT *value);
// GL_NV_shader_buffer_load

// GL_NV_shader_buffer_store
AXLGLFLAPI bool GL_NV_shader_buffer_store;
AXLGLFLCONSTMODIFIER GLconstant GL_SHADER_GLOBAL_ACCESS_BARRIER_BIT_NV = 0x000000;10
// GL_NV_shader_buffer_store

// GL_NV_shader_storage_buffer_object
AXLGLFLAPI bool GL_NV_shader_storage_buffer_object;
// GL_NV_shader_storage_buffer_object

// GL_NV_shader_subgroup_partitioned
AXLGLFLAPI bool GL_NV_shader_subgroup_partitioned;
AXLGLFLCONSTMODIFIER GLconstant GL_SUBGROUP_FEATURE_PARTITIONED_BIT_NV = 0x000001;00
// GL_NV_shader_subgroup_partitioned

// GL_NV_shader_texture_footprint
AXLGLFLAPI bool GL_NV_shader_texture_footprint;
// GL_NV_shader_texture_footprint

// GL_NV_shader_thread_group
AXLGLFLAPI bool GL_NV_shader_thread_group;
AXLGLFLCONSTMODIFIER GLconstant GL_WARP_SIZE_NV = 0x9339;
AXLGLFLCONSTMODIFIER GLconstant GL_WARPS_PER_SM_NV = 0x933A;
AXLGLFLCONSTMODIFIER GLconstant GL_SM_COUNT_NV = 0x933B;
// GL_NV_shader_thread_group

// GL_NV_shader_thread_shuffle
AXLGLFLAPI bool GL_NV_shader_thread_shuffle;
// GL_NV_shader_thread_shuffle

// GL_NV_shading_rate_image
AXLGLFLAPI bool GL_NV_shading_rate_image;
AXLGLFLCONSTMODIFIER GLconstant GL_SHADING_RATE_IMAGE_NV = 0x9563;
AXLGLFLCONSTMODIFIER GLconstant GL_SHADING_RATE_NO_INVOCATIONS_NV = 0x9564;
AXLGLFLCONSTMODIFIER GLconstant GL_SHADING_RATE_1_INVOCATION_PER_PIXEL_NV = 0x9565;
AXLGLFLCONSTMODIFIER GLconstant GL_SHADING_RATE_1_INVOCATION_PER_1X2_PIXELS_NV = 0x9566;
AXLGLFLCONSTMODIFIER GLconstant GL_SHADING_RATE_1_INVOCATION_PER_2X1_PIXELS_NV = 0x9567;
AXLGLFLCONSTMODIFIER GLconstant GL_SHADING_RATE_1_INVOCATION_PER_2X2_PIXELS_NV = 0x9568;
AXLGLFLCONSTMODIFIER GLconstant GL_SHADING_RATE_1_INVOCATION_PER_2X4_PIXELS_NV = 0x9569;
AXLGLFLCONSTMODIFIER GLconstant GL_SHADING_RATE_1_INVOCATION_PER_4X2_PIXELS_NV = 0x956A;
AXLGLFLCONSTMODIFIER GLconstant GL_SHADING_RATE_1_INVOCATION_PER_4X4_PIXELS_NV = 0x956B;
AXLGLFLCONSTMODIFIER GLconstant GL_SHADING_RATE_2_INVOCATIONS_PER_PIXEL_NV = 0x956C;
AXLGLFLCONSTMODIFIER GLconstant GL_SHADING_RATE_4_INVOCATIONS_PER_PIXEL_NV = 0x956D;
AXLGLFLCONSTMODIFIER GLconstant GL_SHADING_RATE_8_INVOCATIONS_PER_PIXEL_NV = 0x956E;
AXLGLFLCONSTMODIFIER GLconstant GL_SHADING_RATE_16_INVOCATIONS_PER_PIXEL_NV = 0x956F;
AXLGLFLCONSTMODIFIER GLconstant GL_SHADING_RATE_IMAGE_BINDING_NV = 0x955B;
AXLGLFLCONSTMODIFIER GLconstant GL_SHADING_RATE_IMAGE_TEXEL_WIDTH_NV = 0x955C;
AXLGLFLCONSTMODIFIER GLconstant GL_SHADING_RATE_IMAGE_TEXEL_HEIGHT_NV = 0x955D;
AXLGLFLCONSTMODIFIER GLconstant GL_SHADING_RATE_IMAGE_PALETTE_SIZE_NV = 0x955E;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_COARSE_FRAGMENT_SAMPLES_NV = 0x955F;
AXLGLFLCONSTMODIFIER GLconstant GL_SHADING_RATE_SAMPLE_ORDER_DEFAULT_NV = 0x95AE;
AXLGLFLCONSTMODIFIER GLconstant GL_SHADING_RATE_SAMPLE_ORDER_PIXEL_MAJOR_NV = 0x95AF;
AXLGLFLCONSTMODIFIER GLconstant GL_SHADING_RATE_SAMPLE_ORDER_SAMPLE_MAJOR_NV = 0x95B0;
typedef void (APIENTRYP PFNGLBINDSHADINGRATEIMAGENVPROC) (GLuint texture);
typedef void (APIENTRYP PFNGLGETSHADINGRATEIMAGEPALETTENVPROC) (GLuint viewport, GLuint entry, GLenum *rate);
typedef void (APIENTRYP PFNGLGETSHADINGRATESAMPLELOCATIONIVNVPROC) (GLenum rate, GLuint samples, GLuint index, GLint *location);
typedef void (APIENTRYP PFNGLSHADINGRATEIMAGEBARRIERNVPROC) (GLboolean synchronize);
typedef void (APIENTRYP PFNGLSHADINGRATEIMAGEPALETTENVPROC) (GLuint viewport, GLuint first, GLsizei count, const GLenum *rates);
typedef void (APIENTRYP PFNGLSHADINGRATESAMPLEORDERNVPROC) (GLenum order);
typedef void (APIENTRYP PFNGLSHADINGRATESAMPLEORDERCUSTOMNVPROC) (GLenum rate, GLuint samples, const GLint *locations);
// GL_NV_shading_rate_image

// GL_NV_stereo_view_rendering
AXLGLFLAPI bool GL_NV_stereo_view_rendering;
// GL_NV_stereo_view_rendering

// GL_NV_tessellation_program5
AXLGLFLAPI bool GL_NV_tessellation_program5;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_PROGRAM_PATCH_ATTRIBS_NV = 0x86D8;
AXLGLFLCONSTMODIFIER GLconstant GL_TESS_CONTROL_PROGRAM_NV = 0x891E;
AXLGLFLCONSTMODIFIER GLconstant GL_TESS_EVALUATION_PROGRAM_NV = 0x891F;
AXLGLFLCONSTMODIFIER GLconstant GL_TESS_CONTROL_PROGRAM_PARAMETER_BUFFER_NV = 0x8C74;
AXLGLFLCONSTMODIFIER GLconstant GL_TESS_EVALUATION_PROGRAM_PARAMETER_BUFFER_NV = 0x8C75;
// GL_NV_tessellation_program5

// GL_NV_texgen_emboss
AXLGLFLAPI bool GL_NV_texgen_emboss;
AXLGLFLCONSTMODIFIER GLconstant GL_EMBOSS_LIGHT_NV = 0x855D;
AXLGLFLCONSTMODIFIER GLconstant GL_EMBOSS_CONSTANT_NV = 0x855E;
AXLGLFLCONSTMODIFIER GLconstant GL_EMBOSS_MAP_NV = 0x855F;
// GL_NV_texgen_emboss

// GL_NV_texgen_reflection
AXLGLFLAPI bool GL_NV_texgen_reflection;
AXLGLFLCONSTMODIFIER GLconstant GL_NORMAL_MAP_NV = 0x8511;
AXLGLFLCONSTMODIFIER GLconstant GL_REFLECTION_MAP_NV = 0x8512;
// GL_NV_texgen_reflection

// GL_NV_texture_barrier
AXLGLFLAPI bool GL_NV_texture_barrier;
typedef void (APIENTRYP PFNGLTEXTUREBARRIERNVPROC) (void);
// GL_NV_texture_barrier

// GL_NV_texture_compression_vtc
AXLGLFLAPI bool GL_NV_texture_compression_vtc;
// GL_NV_texture_compression_vtc

// GL_NV_texture_env_combine4
AXLGLFLAPI bool GL_NV_texture_env_combine4;
AXLGLFLCONSTMODIFIER GLconstant GL_COMBINE4_NV = 0x8503;
AXLGLFLCONSTMODIFIER GLconstant GL_SOURCE3_RGB_NV = 0x8583;
AXLGLFLCONSTMODIFIER GLconstant GL_SOURCE3_ALPHA_NV = 0x858B;
AXLGLFLCONSTMODIFIER GLconstant GL_OPERAND3_RGB_NV = 0x8593;
AXLGLFLCONSTMODIFIER GLconstant GL_OPERAND3_ALPHA_NV = 0x859B;
// GL_NV_texture_env_combine4

// GL_NV_texture_expand_normal
AXLGLFLAPI bool GL_NV_texture_expand_normal;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_UNSIGNED_REMAP_MODE_NV = 0x888F;
// GL_NV_texture_expand_normal

// GL_NV_texture_multisample
AXLGLFLAPI bool GL_NV_texture_multisample;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_COVERAGE_SAMPLES_NV = 0x9045;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_COLOR_SAMPLES_NV = 0x9046;
typedef void (APIENTRYP PFNGLTEXIMAGE2DMULTISAMPLECOVERAGENVPROC) (GLenum target, GLsizei coverageSamples, GLsizei colorSamples, GLint internalFormat, GLsizei width, GLsizei height, GLboolean fixedSampleLocations);
typedef void (APIENTRYP PFNGLTEXIMAGE3DMULTISAMPLECOVERAGENVPROC) (GLenum target, GLsizei coverageSamples, GLsizei colorSamples, GLint internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedSampleLocations);
typedef void (APIENTRYP PFNGLTEXTUREIMAGE2DMULTISAMPLENVPROC) (GLuint texture, GLenum target, GLsizei samples, GLint internalFormat, GLsizei width, GLsizei height, GLboolean fixedSampleLocations);
typedef void (APIENTRYP PFNGLTEXTUREIMAGE3DMULTISAMPLENVPROC) (GLuint texture, GLenum target, GLsizei samples, GLint internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedSampleLocations);
typedef void (APIENTRYP PFNGLTEXTUREIMAGE2DMULTISAMPLECOVERAGENVPROC) (GLuint texture, GLenum target, GLsizei coverageSamples, GLsizei colorSamples, GLint internalFormat, GLsizei width, GLsizei height, GLboolean fixedSampleLocations);
typedef void (APIENTRYP PFNGLTEXTUREIMAGE3DMULTISAMPLECOVERAGENVPROC) (GLuint texture, GLenum target, GLsizei coverageSamples, GLsizei colorSamples, GLint internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedSampleLocations);
// GL_NV_texture_multisample

// GL_NV_texture_rectangle
AXLGLFLAPI bool GL_NV_texture_rectangle;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_RECTANGLE_NV = 0x84F5;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_BINDING_RECTANGLE_NV = 0x84F6;
AXLGLFLCONSTMODIFIER GLconstant GL_PROXY_TEXTURE_RECTANGLE_NV = 0x84F7;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_RECTANGLE_TEXTURE_SIZE_NV = 0x84F8;
// GL_NV_texture_rectangle

// GL_NV_texture_rectangle_compressed
AXLGLFLAPI bool GL_NV_texture_rectangle_compressed;
// GL_NV_texture_rectangle_compressed

// GL_NV_texture_shader
AXLGLFLAPI bool GL_NV_texture_shader;
AXLGLFLCONSTMODIFIER GLconstant GL_OFFSET_TEXTURE_RECTANGLE_NV = 0x864C;
AXLGLFLCONSTMODIFIER GLconstant GL_OFFSET_TEXTURE_RECTANGLE_SCALE_NV = 0x864D;
AXLGLFLCONSTMODIFIER GLconstant GL_DOT_PRODUCT_TEXTURE_RECTANGLE_NV = 0x864E;
AXLGLFLCONSTMODIFIER GLconstant GL_RGBA_UNSIGNED_DOT_PRODUCT_MAPPING_NV = 0x86D9;
AXLGLFLCONSTMODIFIER GLconstant GL_UNSIGNED_INT_S8_S8_8_8_NV = 0x86DA;
AXLGLFLCONSTMODIFIER GLconstant GL_UNSIGNED_INT_8_8_S8_S8_REV_NV = 0x86DB;
AXLGLFLCONSTMODIFIER GLconstant GL_DSDT_MAG_INTENSITY_NV = 0x86DC;
AXLGLFLCONSTMODIFIER GLconstant GL_SHADER_CONSISTENT_NV = 0x86DD;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_SHADER_NV = 0x86DE;
AXLGLFLCONSTMODIFIER GLconstant GL_SHADER_OPERATION_NV = 0x86DF;
AXLGLFLCONSTMODIFIER GLconstant GL_CULL_MODES_NV = 0x86E0;
AXLGLFLCONSTMODIFIER GLconstant GL_OFFSET_TEXTURE_MATRIX_NV = 0x86E1;
AXLGLFLCONSTMODIFIER GLconstant GL_OFFSET_TEXTURE_SCALE_NV = 0x86E2;
AXLGLFLCONSTMODIFIER GLconstant GL_OFFSET_TEXTURE_BIAS_NV = 0x86E3;
AXLGLFLCONSTMODIFIER GLconstant GL_OFFSET_TEXTURE_2D_MATRIX_NV = 0x86E1;
AXLGLFLCONSTMODIFIER GLconstant GL_OFFSET_TEXTURE_2D_SCALE_NV = 0x86E2;
AXLGLFLCONSTMODIFIER GLconstant GL_OFFSET_TEXTURE_2D_BIAS_NV = 0x86E3;
AXLGLFLCONSTMODIFIER GLconstant GL_PREVIOUS_TEXTURE_INPUT_NV = 0x86E4;
AXLGLFLCONSTMODIFIER GLconstant GL_CONST_EYE_NV = 0x86E5;
AXLGLFLCONSTMODIFIER GLconstant GL_PASS_THROUGH_NV = 0x86E6;
AXLGLFLCONSTMODIFIER GLconstant GL_CULL_FRAGMENT_NV = 0x86E7;
AXLGLFLCONSTMODIFIER GLconstant GL_OFFSET_TEXTURE_2D_NV = 0x86E8;
AXLGLFLCONSTMODIFIER GLconstant GL_DEPENDENT_AR_TEXTURE_2D_NV = 0x86E9;
AXLGLFLCONSTMODIFIER GLconstant GL_DEPENDENT_GB_TEXTURE_2D_NV = 0x86EA;
AXLGLFLCONSTMODIFIER GLconstant GL_DOT_PRODUCT_NV = 0x86EC;
AXLGLFLCONSTMODIFIER GLconstant GL_DOT_PRODUCT_DEPTH_REPLACE_NV = 0x86ED;
AXLGLFLCONSTMODIFIER GLconstant GL_DOT_PRODUCT_TEXTURE_2D_NV = 0x86EE;
AXLGLFLCONSTMODIFIER GLconstant GL_DOT_PRODUCT_TEXTURE_CUBE_MAP_NV = 0x86F0;
AXLGLFLCONSTMODIFIER GLconstant GL_DOT_PRODUCT_DIFFUSE_CUBE_MAP_NV = 0x86F1;
AXLGLFLCONSTMODIFIER GLconstant GL_DOT_PRODUCT_REFLECT_CUBE_MAP_NV = 0x86F2;
AXLGLFLCONSTMODIFIER GLconstant GL_DOT_PRODUCT_CONST_EYE_REFLECT_CUBE_MAP_NV = 0x86F3;
AXLGLFLCONSTMODIFIER GLconstant GL_HILO_NV = 0x86F4;
AXLGLFLCONSTMODIFIER GLconstant GL_DSDT_NV = 0x86F5;
AXLGLFLCONSTMODIFIER GLconstant GL_DSDT_MAG_NV = 0x86F6;
AXLGLFLCONSTMODIFIER GLconstant GL_DSDT_MAG_VIB_NV = 0x86F7;
AXLGLFLCONSTMODIFIER GLconstant GL_HILO16_NV = 0x86F8;
AXLGLFLCONSTMODIFIER GLconstant GL_SIGNED_HILO_NV = 0x86F9;
AXLGLFLCONSTMODIFIER GLconstant GL_SIGNED_HILO16_NV = 0x86FA;
AXLGLFLCONSTMODIFIER GLconstant GL_SIGNED_RGBA_NV = 0x86FB;
AXLGLFLCONSTMODIFIER GLconstant GL_SIGNED_RGBA8_NV = 0x86FC;
AXLGLFLCONSTMODIFIER GLconstant GL_SIGNED_RGB_NV = 0x86FE;
AXLGLFLCONSTMODIFIER GLconstant GL_SIGNED_RGB8_NV = 0x86FF;
AXLGLFLCONSTMODIFIER GLconstant GL_SIGNED_LUMINANCE_NV = 0x8701;
AXLGLFLCONSTMODIFIER GLconstant GL_SIGNED_LUMINANCE8_NV = 0x8702;
AXLGLFLCONSTMODIFIER GLconstant GL_SIGNED_LUMINANCE_ALPHA_NV = 0x8703;
AXLGLFLCONSTMODIFIER GLconstant GL_SIGNED_LUMINANCE8_ALPHA8_NV = 0x8704;
AXLGLFLCONSTMODIFIER GLconstant GL_SIGNED_ALPHA_NV = 0x8705;
AXLGLFLCONSTMODIFIER GLconstant GL_SIGNED_ALPHA8_NV = 0x8706;
AXLGLFLCONSTMODIFIER GLconstant GL_SIGNED_INTENSITY_NV = 0x8707;
AXLGLFLCONSTMODIFIER GLconstant GL_SIGNED_INTENSITY8_NV = 0x8708;
AXLGLFLCONSTMODIFIER GLconstant GL_DSDT8_NV = 0x8709;
AXLGLFLCONSTMODIFIER GLconstant GL_DSDT8_MAG8_NV = 0x870A;
AXLGLFLCONSTMODIFIER GLconstant GL_DSDT8_MAG8_INTENSITY8_NV = 0x870B;
AXLGLFLCONSTMODIFIER GLconstant GL_SIGNED_RGB_UNSIGNED_ALPHA_NV = 0x870C;
AXLGLFLCONSTMODIFIER GLconstant GL_SIGNED_RGB8_UNSIGNED_ALPHA8_NV = 0x870D;
AXLGLFLCONSTMODIFIER GLconstant GL_HI_SCALE_NV = 0x870E;
AXLGLFLCONSTMODIFIER GLconstant GL_LO_SCALE_NV = 0x870F;
AXLGLFLCONSTMODIFIER GLconstant GL_DS_SCALE_NV = 0x8710;
AXLGLFLCONSTMODIFIER GLconstant GL_DT_SCALE_NV = 0x8711;
AXLGLFLCONSTMODIFIER GLconstant GL_MAGNITUDE_SCALE_NV = 0x8712;
AXLGLFLCONSTMODIFIER GLconstant GL_VIBRANCE_SCALE_NV = 0x8713;
AXLGLFLCONSTMODIFIER GLconstant GL_HI_BIAS_NV = 0x8714;
AXLGLFLCONSTMODIFIER GLconstant GL_LO_BIAS_NV = 0x8715;
AXLGLFLCONSTMODIFIER GLconstant GL_DS_BIAS_NV = 0x8716;
AXLGLFLCONSTMODIFIER GLconstant GL_DT_BIAS_NV = 0x8717;
AXLGLFLCONSTMODIFIER GLconstant GL_MAGNITUDE_BIAS_NV = 0x8718;
AXLGLFLCONSTMODIFIER GLconstant GL_VIBRANCE_BIAS_NV = 0x8719;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_BORDER_VALUES_NV = 0x871A;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_HI_SIZE_NV = 0x871B;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_LO_SIZE_NV = 0x871C;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_DS_SIZE_NV = 0x871D;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_DT_SIZE_NV = 0x871E;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_MAG_SIZE_NV = 0x871F;
// GL_NV_texture_shader

// GL_NV_texture_shader2
AXLGLFLAPI bool GL_NV_texture_shader2;
AXLGLFLCONSTMODIFIER GLconstant GL_DOT_PRODUCT_TEXTURE_3D_NV = 0x86EF;
// GL_NV_texture_shader2

// GL_NV_texture_shader3
AXLGLFLAPI bool GL_NV_texture_shader3;
AXLGLFLCONSTMODIFIER GLconstant GL_OFFSET_PROJECTIVE_TEXTURE_2D_NV = 0x8850;
AXLGLFLCONSTMODIFIER GLconstant GL_OFFSET_PROJECTIVE_TEXTURE_2D_SCALE_NV = 0x8851;
AXLGLFLCONSTMODIFIER GLconstant GL_OFFSET_PROJECTIVE_TEXTURE_RECTANGLE_NV = 0x8852;
AXLGLFLCONSTMODIFIER GLconstant GL_OFFSET_PROJECTIVE_TEXTURE_RECTANGLE_SCALE_NV = 0x8853;
AXLGLFLCONSTMODIFIER GLconstant GL_OFFSET_HILO_TEXTURE_2D_NV = 0x8854;
AXLGLFLCONSTMODIFIER GLconstant GL_OFFSET_HILO_TEXTURE_RECTANGLE_NV = 0x8855;
AXLGLFLCONSTMODIFIER GLconstant GL_OFFSET_HILO_PROJECTIVE_TEXTURE_2D_NV = 0x8856;
AXLGLFLCONSTMODIFIER GLconstant GL_OFFSET_HILO_PROJECTIVE_TEXTURE_RECTANGLE_NV = 0x8857;
AXLGLFLCONSTMODIFIER GLconstant GL_DEPENDENT_HILO_TEXTURE_2D_NV = 0x8858;
AXLGLFLCONSTMODIFIER GLconstant GL_DEPENDENT_RGB_TEXTURE_3D_NV = 0x8859;
AXLGLFLCONSTMODIFIER GLconstant GL_DEPENDENT_RGB_TEXTURE_CUBE_MAP_NV = 0x885A;
AXLGLFLCONSTMODIFIER GLconstant GL_DOT_PRODUCT_PASS_THROUGH_NV = 0x885B;
AXLGLFLCONSTMODIFIER GLconstant GL_DOT_PRODUCT_TEXTURE_1D_NV = 0x885C;
AXLGLFLCONSTMODIFIER GLconstant GL_DOT_PRODUCT_AFFINE_DEPTH_REPLACE_NV = 0x885D;
AXLGLFLCONSTMODIFIER GLconstant GL_HILO8_NV = 0x885E;
AXLGLFLCONSTMODIFIER GLconstant GL_SIGNED_HILO8_NV = 0x885F;
AXLGLFLCONSTMODIFIER GLconstant GL_FORCE_BLUE_TO_ONE_NV = 0x8860;
// GL_NV_texture_shader3

// GL_NV_timeline_semaphore
AXLGLFLAPI bool GL_NV_timeline_semaphore;
AXLGLFLCONSTMODIFIER GLconstant GL_TIMELINE_SEMAPHORE_VALUE_NV = 0x9595;
AXLGLFLCONSTMODIFIER GLconstant GL_SEMAPHORE_TYPE_NV = 0x95B3;
AXLGLFLCONSTMODIFIER GLconstant GL_SEMAPHORE_TYPE_BINARY_NV = 0x95B4;
AXLGLFLCONSTMODIFIER GLconstant GL_SEMAPHORE_TYPE_TIMELINE_NV = 0x95B5;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_TIMELINE_SEMAPHORE_VALUE_DIFFERENCE_NV = 0x95B6;
typedef void (APIENTRYP PFNGLCREATESEMAPHORESNVPROC) (GLsizei n, GLuint *semaphores);
typedef void (APIENTRYP PFNGLSEMAPHOREPARAMETERIVNVPROC) (GLuint semaphore, GLenum pname, const GLint *params);
typedef void (APIENTRYP PFNGLGETSEMAPHOREPARAMETERIVNVPROC) (GLuint semaphore, GLenum pname, GLint *params);
// GL_NV_timeline_semaphore

// GL_NV_transform_feedback
AXLGLFLAPI bool GL_NV_transform_feedback;
AXLGLFLCONSTMODIFIER GLconstant GL_BACK_PRIMARY_COLOR_NV = 0x8C77;
AXLGLFLCONSTMODIFIER GLconstant GL_BACK_SECONDARY_COLOR_NV = 0x8C78;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_COORD_NV = 0x8C79;
AXLGLFLCONSTMODIFIER GLconstant GL_CLIP_DISTANCE_NV = 0x8C7A;
AXLGLFLCONSTMODIFIER GLconstant GL_VERTEX_ID_NV = 0x8C7B;
AXLGLFLCONSTMODIFIER GLconstant GL_PRIMITIVE_ID_NV = 0x8C7C;
AXLGLFLCONSTMODIFIER GLconstant GL_GENERIC_ATTRIB_NV = 0x8C7D;
AXLGLFLCONSTMODIFIER GLconstant GL_TRANSFORM_FEEDBACK_ATTRIBS_NV = 0x8C7E;
AXLGLFLCONSTMODIFIER GLconstant GL_TRANSFORM_FEEDBACK_BUFFER_MODE_NV = 0x8C7F;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS_NV = 0x8C80;
AXLGLFLCONSTMODIFIER GLconstant GL_ACTIVE_VARYINGS_NV = 0x8C81;
AXLGLFLCONSTMODIFIER GLconstant GL_ACTIVE_VARYING_MAX_LENGTH_NV = 0x8C82;
AXLGLFLCONSTMODIFIER GLconstant GL_TRANSFORM_FEEDBACK_VARYINGS_NV = 0x8C83;
AXLGLFLCONSTMODIFIER GLconstant GL_TRANSFORM_FEEDBACK_BUFFER_START_NV = 0x8C84;
AXLGLFLCONSTMODIFIER GLconstant GL_TRANSFORM_FEEDBACK_BUFFER_SIZE_NV = 0x8C85;
AXLGLFLCONSTMODIFIER GLconstant GL_TRANSFORM_FEEDBACK_RECORD_NV = 0x8C86;
AXLGLFLCONSTMODIFIER GLconstant GL_PRIMITIVES_GENERATED_NV = 0x8C87;
AXLGLFLCONSTMODIFIER GLconstant GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN_NV = 0x8C88;
AXLGLFLCONSTMODIFIER GLconstant GL_RASTERIZER_DISCARD_NV = 0x8C89;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS_NV = 0x8C8A;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS_NV = 0x8C8B;
AXLGLFLCONSTMODIFIER GLconstant GL_INTERLEAVED_ATTRIBS_NV = 0x8C8C;
AXLGLFLCONSTMODIFIER GLconstant GL_SEPARATE_ATTRIBS_NV = 0x8C8D;
AXLGLFLCONSTMODIFIER GLconstant GL_TRANSFORM_FEEDBACK_BUFFER_NV = 0x8C8E;
AXLGLFLCONSTMODIFIER GLconstant GL_TRANSFORM_FEEDBACK_BUFFER_BINDING_NV = 0x8C8F;
AXLGLFLCONSTMODIFIER GLconstant GL_LAYER_NV = 0x8DAA;
#define GL_NEXT_BUFFER_NV                 -2
#define GL_SKIP_COMPONENTS4_NV            -3
#define GL_SKIP_COMPONENTS3_NV            -4
#define GL_SKIP_COMPONENTS2_NV            -5
#define GL_SKIP_COMPONENTS1_NV            -6
typedef void (APIENTRYP PFNGLBEGINTRANSFORMFEEDBACKNVPROC) (GLenum primitiveMode);
typedef void (APIENTRYP PFNGLENDTRANSFORMFEEDBACKNVPROC) (void);
typedef void (APIENTRYP PFNGLTRANSFORMFEEDBACKATTRIBSNVPROC) (GLsizei count, const GLint *attribs, GLenum bufferMode);
typedef void (APIENTRYP PFNGLBINDBUFFERRANGENVPROC) (GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size);
typedef void (APIENTRYP PFNGLBINDBUFFEROFFSETNVPROC) (GLenum target, GLuint index, GLuint buffer, GLintptr offset);
typedef void (APIENTRYP PFNGLBINDBUFFERBASENVPROC) (GLenum target, GLuint index, GLuint buffer);
typedef void (APIENTRYP PFNGLTRANSFORMFEEDBACKVARYINGSNVPROC) (GLuint program, GLsizei count, const GLint *locations, GLenum bufferMode);
typedef void (APIENTRYP PFNGLACTIVEVARYINGNVPROC) (GLuint program, const GLchar *name);
typedef GLint (APIENTRYP PFNGLGETVARYINGLOCATIONNVPROC) (GLuint program, const GLchar *name);
typedef void (APIENTRYP PFNGLGETACTIVEVARYINGNVPROC) (GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLsizei *size, GLenum *type, GLchar *name);
typedef void (APIENTRYP PFNGLGETTRANSFORMFEEDBACKVARYINGNVPROC) (GLuint program, GLuint index, GLint *location);
typedef void (APIENTRYP PFNGLTRANSFORMFEEDBACKSTREAMATTRIBSNVPROC) (GLsizei count, const GLint *attribs, GLsizei nbuffers, const GLint *bufstreams, GLenum bufferMode);
// GL_NV_transform_feedback

// GL_NV_transform_feedback2
AXLGLFLAPI bool GL_NV_transform_feedback2;
AXLGLFLCONSTMODIFIER GLconstant GL_TRANSFORM_FEEDBACK_NV = 0x8E22;
AXLGLFLCONSTMODIFIER GLconstant GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED_NV = 0x8E23;
AXLGLFLCONSTMODIFIER GLconstant GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE_NV = 0x8E24;
AXLGLFLCONSTMODIFIER GLconstant GL_TRANSFORM_FEEDBACK_BINDING_NV = 0x8E25;
typedef void (APIENTRYP PFNGLBINDTRANSFORMFEEDBACKNVPROC) (GLenum target, GLuint id);
typedef void (APIENTRYP PFNGLDELETETRANSFORMFEEDBACKSNVPROC) (GLsizei n, const GLuint *ids);
typedef void (APIENTRYP PFNGLGENTRANSFORMFEEDBACKSNVPROC) (GLsizei n, GLuint *ids);
typedef GLboolean (APIENTRYP PFNGLISTRANSFORMFEEDBACKNVPROC) (GLuint id);
typedef void (APIENTRYP PFNGLPAUSETRANSFORMFEEDBACKNVPROC) (void);
typedef void (APIENTRYP PFNGLRESUMETRANSFORMFEEDBACKNVPROC) (void);
typedef void (APIENTRYP PFNGLDRAWTRANSFORMFEEDBACKNVPROC) (GLenum mode, GLuint id);
// GL_NV_transform_feedback2

// GL_NV_uniform_buffer_unified_memory
AXLGLFLAPI bool GL_NV_uniform_buffer_unified_memory;
AXLGLFLCONSTMODIFIER GLconstant GL_UNIFORM_BUFFER_UNIFIED_NV = 0x936E;
AXLGLFLCONSTMODIFIER GLconstant GL_UNIFORM_BUFFER_ADDRESS_NV = 0x936F;
AXLGLFLCONSTMODIFIER GLconstant GL_UNIFORM_BUFFER_LENGTH_NV = 0x9370;
// GL_NV_uniform_buffer_unified_memory

// GL_NV_vdpau_interop
AXLGLFLAPI bool GL_NV_vdpau_interop;
typedef GLintptr GLvdpauSurfaceNV;
AXLGLFLCONSTMODIFIER GLconstant GL_SURFACE_STATE_NV = 0x86EB;
AXLGLFLCONSTMODIFIER GLconstant GL_SURFACE_REGISTERED_NV = 0x86FD;
AXLGLFLCONSTMODIFIER GLconstant GL_SURFACE_MAPPED_NV = 0x8700;
AXLGLFLCONSTMODIFIER GLconstant GL_WRITE_DISCARD_NV = 0x88BE;
typedef void (APIENTRYP PFNGLVDPAUINITNVPROC) (const void *vdpDevice, const void *getProcAddress);
typedef void (APIENTRYP PFNGLVDPAUFININVPROC) (void);
typedef GLvdpauSurfaceNV (APIENTRYP PFNGLVDPAUREGISTERVIDEOSURFACENVPROC) (const void *vdpSurface, GLenum target, GLsizei numTextureNames, const GLuint *textureNames);
typedef GLvdpauSurfaceNV (APIENTRYP PFNGLVDPAUREGISTEROUTPUTSURFACENVPROC) (const void *vdpSurface, GLenum target, GLsizei numTextureNames, const GLuint *textureNames);
typedef GLboolean (APIENTRYP PFNGLVDPAUISSURFACENVPROC) (GLvdpauSurfaceNV surface);
typedef void (APIENTRYP PFNGLVDPAUUNREGISTERSURFACENVPROC) (GLvdpauSurfaceNV surface);
typedef void (APIENTRYP PFNGLVDPAUGETSURFACEIVNVPROC) (GLvdpauSurfaceNV surface, GLenum pname, GLsizei count, GLsizei *length, GLint *values);
typedef void (APIENTRYP PFNGLVDPAUSURFACEACCESSNVPROC) (GLvdpauSurfaceNV surface, GLenum access);
typedef void (APIENTRYP PFNGLVDPAUMAPSURFACESNVPROC) (GLsizei numSurfaces, const GLvdpauSurfaceNV *surfaces);
typedef void (APIENTRYP PFNGLVDPAUUNMAPSURFACESNVPROC) (GLsizei numSurface, const GLvdpauSurfaceNV *surfaces);
// GL_NV_vdpau_interop

// GL_NV_vdpau_interop2
AXLGLFLAPI bool GL_NV_vdpau_interop2;
typedef GLvdpauSurfaceNV (APIENTRYP PFNGLVDPAUREGISTERVIDEOSURFACEWITHPICTURESTRUCTURENVPROC) (const void *vdpSurface, GLenum target, GLsizei numTextureNames, const GLuint *textureNames, GLboolean isFrameStructure);
// GL_NV_vdpau_interop2

// GL_NV_vertex_array_range
AXLGLFLAPI bool GL_NV_vertex_array_range;
AXLGLFLCONSTMODIFIER GLconstant GL_VERTEX_ARRAY_RANGE_NV = 0x851D;
AXLGLFLCONSTMODIFIER GLconstant GL_VERTEX_ARRAY_RANGE_LENGTH_NV = 0x851E;
AXLGLFLCONSTMODIFIER GLconstant GL_VERTEX_ARRAY_RANGE_VALID_NV = 0x851F;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_VERTEX_ARRAY_RANGE_ELEMENT_NV = 0x8520;
AXLGLFLCONSTMODIFIER GLconstant GL_VERTEX_ARRAY_RANGE_POINTER_NV = 0x8521;
typedef void (APIENTRYP PFNGLFLUSHVERTEXARRAYRANGENVPROC) (void);
typedef void (APIENTRYP PFNGLVERTEXARRAYRANGENVPROC) (GLsizei length, const void *pointer);
// GL_NV_vertex_array_range

// GL_NV_vertex_array_range2
AXLGLFLAPI bool GL_NV_vertex_array_range2;
AXLGLFLCONSTMODIFIER GLconstant GL_VERTEX_ARRAY_RANGE_WITHOUT_FLUSH_NV = 0x8533;
// GL_NV_vertex_array_range2

// GL_NV_vertex_attrib_integer_64bit
AXLGLFLAPI bool GL_NV_vertex_attrib_integer_64bit;
typedef void (APIENTRYP PFNGLVERTEXATTRIBL1I64NVPROC) (GLuint index, GLint64EXT x);
typedef void (APIENTRYP PFNGLVERTEXATTRIBL2I64NVPROC) (GLuint index, GLint64EXT x, GLint64EXT y);
typedef void (APIENTRYP PFNGLVERTEXATTRIBL3I64NVPROC) (GLuint index, GLint64EXT x, GLint64EXT y, GLint64EXT z);
typedef void (APIENTRYP PFNGLVERTEXATTRIBL4I64NVPROC) (GLuint index, GLint64EXT x, GLint64EXT y, GLint64EXT z, GLint64EXT w);
typedef void (APIENTRYP PFNGLVERTEXATTRIBL1I64VNVPROC) (GLuint index, const GLint64EXT *v);
typedef void (APIENTRYP PFNGLVERTEXATTRIBL2I64VNVPROC) (GLuint index, const GLint64EXT *v);
typedef void (APIENTRYP PFNGLVERTEXATTRIBL3I64VNVPROC) (GLuint index, const GLint64EXT *v);
typedef void (APIENTRYP PFNGLVERTEXATTRIBL4I64VNVPROC) (GLuint index, const GLint64EXT *v);
typedef void (APIENTRYP PFNGLVERTEXATTRIBL1UI64NVPROC) (GLuint index, GLuint64EXT x);
typedef void (APIENTRYP PFNGLVERTEXATTRIBL2UI64NVPROC) (GLuint index, GLuint64EXT x, GLuint64EXT y);
typedef void (APIENTRYP PFNGLVERTEXATTRIBL3UI64NVPROC) (GLuint index, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z);
typedef void (APIENTRYP PFNGLVERTEXATTRIBL4UI64NVPROC) (GLuint index, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z, GLuint64EXT w);
typedef void (APIENTRYP PFNGLVERTEXATTRIBL1UI64VNVPROC) (GLuint index, const GLuint64EXT *v);
typedef void (APIENTRYP PFNGLVERTEXATTRIBL2UI64VNVPROC) (GLuint index, const GLuint64EXT *v);
typedef void (APIENTRYP PFNGLVERTEXATTRIBL3UI64VNVPROC) (GLuint index, const GLuint64EXT *v);
typedef void (APIENTRYP PFNGLVERTEXATTRIBL4UI64VNVPROC) (GLuint index, const GLuint64EXT *v);
typedef void (APIENTRYP PFNGLGETVERTEXATTRIBLI64VNVPROC) (GLuint index, GLenum pname, GLint64EXT *params);
typedef void (APIENTRYP PFNGLGETVERTEXATTRIBLUI64VNVPROC) (GLuint index, GLenum pname, GLuint64EXT *params);
typedef void (APIENTRYP PFNGLVERTEXATTRIBLFORMATNVPROC) (GLuint index, GLint size, GLenum type, GLsizei stride);
// GL_NV_vertex_attrib_integer_64bit

// GL_NV_vertex_buffer_unified_memory
AXLGLFLAPI bool GL_NV_vertex_buffer_unified_memory;
AXLGLFLCONSTMODIFIER GLconstant GL_VERTEX_ATTRIB_ARRAY_UNIFIED_NV = 0x8F1E;
AXLGLFLCONSTMODIFIER GLconstant GL_ELEMENT_ARRAY_UNIFIED_NV = 0x8F1F;
AXLGLFLCONSTMODIFIER GLconstant GL_VERTEX_ATTRIB_ARRAY_ADDRESS_NV = 0x8F20;
AXLGLFLCONSTMODIFIER GLconstant GL_VERTEX_ARRAY_ADDRESS_NV = 0x8F21;
AXLGLFLCONSTMODIFIER GLconstant GL_NORMAL_ARRAY_ADDRESS_NV = 0x8F22;
AXLGLFLCONSTMODIFIER GLconstant GL_COLOR_ARRAY_ADDRESS_NV = 0x8F23;
AXLGLFLCONSTMODIFIER GLconstant GL_INDEX_ARRAY_ADDRESS_NV = 0x8F24;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_COORD_ARRAY_ADDRESS_NV = 0x8F25;
AXLGLFLCONSTMODIFIER GLconstant GL_EDGE_FLAG_ARRAY_ADDRESS_NV = 0x8F26;
AXLGLFLCONSTMODIFIER GLconstant GL_SECONDARY_COLOR_ARRAY_ADDRESS_NV = 0x8F27;
AXLGLFLCONSTMODIFIER GLconstant GL_FOG_COORD_ARRAY_ADDRESS_NV = 0x8F28;
AXLGLFLCONSTMODIFIER GLconstant GL_ELEMENT_ARRAY_ADDRESS_NV = 0x8F29;
AXLGLFLCONSTMODIFIER GLconstant GL_VERTEX_ATTRIB_ARRAY_LENGTH_NV = 0x8F2A;
AXLGLFLCONSTMODIFIER GLconstant GL_VERTEX_ARRAY_LENGTH_NV = 0x8F2B;
AXLGLFLCONSTMODIFIER GLconstant GL_NORMAL_ARRAY_LENGTH_NV = 0x8F2C;
AXLGLFLCONSTMODIFIER GLconstant GL_COLOR_ARRAY_LENGTH_NV = 0x8F2D;
AXLGLFLCONSTMODIFIER GLconstant GL_INDEX_ARRAY_LENGTH_NV = 0x8F2E;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_COORD_ARRAY_LENGTH_NV = 0x8F2F;
AXLGLFLCONSTMODIFIER GLconstant GL_EDGE_FLAG_ARRAY_LENGTH_NV = 0x8F30;
AXLGLFLCONSTMODIFIER GLconstant GL_SECONDARY_COLOR_ARRAY_LENGTH_NV = 0x8F31;
AXLGLFLCONSTMODIFIER GLconstant GL_FOG_COORD_ARRAY_LENGTH_NV = 0x8F32;
AXLGLFLCONSTMODIFIER GLconstant GL_ELEMENT_ARRAY_LENGTH_NV = 0x8F33;
AXLGLFLCONSTMODIFIER GLconstant GL_DRAW_INDIRECT_UNIFIED_NV = 0x8F40;
AXLGLFLCONSTMODIFIER GLconstant GL_DRAW_INDIRECT_ADDRESS_NV = 0x8F41;
AXLGLFLCONSTMODIFIER GLconstant GL_DRAW_INDIRECT_LENGTH_NV = 0x8F42;
typedef void (APIENTRYP PFNGLBUFFERADDRESSRANGENVPROC) (GLenum pname, GLuint index, GLuint64EXT address, GLsizeiptr length);
typedef void (APIENTRYP PFNGLVERTEXFORMATNVPROC) (GLint size, GLenum type, GLsizei stride);
typedef void (APIENTRYP PFNGLNORMALFORMATNVPROC) (GLenum type, GLsizei stride);
typedef void (APIENTRYP PFNGLCOLORFORMATNVPROC) (GLint size, GLenum type, GLsizei stride);
typedef void (APIENTRYP PFNGLINDEXFORMATNVPROC) (GLenum type, GLsizei stride);
typedef void (APIENTRYP PFNGLTEXCOORDFORMATNVPROC) (GLint size, GLenum type, GLsizei stride);
typedef void (APIENTRYP PFNGLEDGEFLAGFORMATNVPROC) (GLsizei stride);
typedef void (APIENTRYP PFNGLSECONDARYCOLORFORMATNVPROC) (GLint size, GLenum type, GLsizei stride);
typedef void (APIENTRYP PFNGLFOGCOORDFORMATNVPROC) (GLenum type, GLsizei stride);
typedef void (APIENTRYP PFNGLVERTEXATTRIBFORMATNVPROC) (GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride);
typedef void (APIENTRYP PFNGLVERTEXATTRIBIFORMATNVPROC) (GLuint index, GLint size, GLenum type, GLsizei stride);
typedef void (APIENTRYP PFNGLGETINTEGERUI64I_VNVPROC) (GLenum value, GLuint index, GLuint64EXT *result);
// GL_NV_vertex_buffer_unified_memory

// GL_NV_vertex_program
AXLGLFLAPI bool GL_NV_vertex_program;
AXLGLFLCONSTMODIFIER GLconstant GL_VERTEX_PROGRAM_NV = 0x8620;
AXLGLFLCONSTMODIFIER GLconstant GL_VERTEX_STATE_PROGRAM_NV = 0x8621;
AXLGLFLCONSTMODIFIER GLconstant GL_ATTRIB_ARRAY_SIZE_NV = 0x8623;
AXLGLFLCONSTMODIFIER GLconstant GL_ATTRIB_ARRAY_STRIDE_NV = 0x8624;
AXLGLFLCONSTMODIFIER GLconstant GL_ATTRIB_ARRAY_TYPE_NV = 0x8625;
AXLGLFLCONSTMODIFIER GLconstant GL_CURRENT_ATTRIB_NV = 0x8626;
AXLGLFLCONSTMODIFIER GLconstant GL_PROGRAM_LENGTH_NV = 0x8627;
AXLGLFLCONSTMODIFIER GLconstant GL_PROGRAM_STRING_NV = 0x8628;
AXLGLFLCONSTMODIFIER GLconstant GL_MODELVIEW_PROJECTION_NV = 0x8629;
AXLGLFLCONSTMODIFIER GLconstant GL_IDENTITY_NV = 0x862A;
AXLGLFLCONSTMODIFIER GLconstant GL_INVERSE_NV = 0x862B;
AXLGLFLCONSTMODIFIER GLconstant GL_TRANSPOSE_NV = 0x862C;
AXLGLFLCONSTMODIFIER GLconstant GL_INVERSE_TRANSPOSE_NV = 0x862D;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_TRACK_MATRIX_STACK_DEPTH_NV = 0x862E;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_TRACK_MATRICES_NV = 0x862F;
AXLGLFLCONSTMODIFIER GLconstant GL_MATRIX0_NV = 0x8630;
AXLGLFLCONSTMODIFIER GLconstant GL_MATRIX1_NV = 0x8631;
AXLGLFLCONSTMODIFIER GLconstant GL_MATRIX2_NV = 0x8632;
AXLGLFLCONSTMODIFIER GLconstant GL_MATRIX3_NV = 0x8633;
AXLGLFLCONSTMODIFIER GLconstant GL_MATRIX4_NV = 0x8634;
AXLGLFLCONSTMODIFIER GLconstant GL_MATRIX5_NV = 0x8635;
AXLGLFLCONSTMODIFIER GLconstant GL_MATRIX6_NV = 0x8636;
AXLGLFLCONSTMODIFIER GLconstant GL_MATRIX7_NV = 0x8637;
AXLGLFLCONSTMODIFIER GLconstant GL_CURRENT_MATRIX_STACK_DEPTH_NV = 0x8640;
AXLGLFLCONSTMODIFIER GLconstant GL_CURRENT_MATRIX_NV = 0x8641;
AXLGLFLCONSTMODIFIER GLconstant GL_VERTEX_PROGRAM_POINT_SIZE_NV = 0x8642;
AXLGLFLCONSTMODIFIER GLconstant GL_VERTEX_PROGRAM_TWO_SIDE_NV = 0x8643;
AXLGLFLCONSTMODIFIER GLconstant GL_PROGRAM_PARAMETER_NV = 0x8644;
AXLGLFLCONSTMODIFIER GLconstant GL_ATTRIB_ARRAY_POINTER_NV = 0x8645;
AXLGLFLCONSTMODIFIER GLconstant GL_PROGRAM_TARGET_NV = 0x8646;
AXLGLFLCONSTMODIFIER GLconstant GL_PROGRAM_RESIDENT_NV = 0x8647;
AXLGLFLCONSTMODIFIER GLconstant GL_TRACK_MATRIX_NV = 0x8648;
AXLGLFLCONSTMODIFIER GLconstant GL_TRACK_MATRIX_TRANSFORM_NV = 0x8649;
AXLGLFLCONSTMODIFIER GLconstant GL_VERTEX_PROGRAM_BINDING_NV = 0x864A;
AXLGLFLCONSTMODIFIER GLconstant GL_PROGRAM_ERROR_POSITION_NV = 0x864B;
AXLGLFLCONSTMODIFIER GLconstant GL_VERTEX_ATTRIB_ARRAY0_NV = 0x8650;
AXLGLFLCONSTMODIFIER GLconstant GL_VERTEX_ATTRIB_ARRAY1_NV = 0x8651;
AXLGLFLCONSTMODIFIER GLconstant GL_VERTEX_ATTRIB_ARRAY2_NV = 0x8652;
AXLGLFLCONSTMODIFIER GLconstant GL_VERTEX_ATTRIB_ARRAY3_NV = 0x8653;
AXLGLFLCONSTMODIFIER GLconstant GL_VERTEX_ATTRIB_ARRAY4_NV = 0x8654;
AXLGLFLCONSTMODIFIER GLconstant GL_VERTEX_ATTRIB_ARRAY5_NV = 0x8655;
AXLGLFLCONSTMODIFIER GLconstant GL_VERTEX_ATTRIB_ARRAY6_NV = 0x8656;
AXLGLFLCONSTMODIFIER GLconstant GL_VERTEX_ATTRIB_ARRAY7_NV = 0x8657;
AXLGLFLCONSTMODIFIER GLconstant GL_VERTEX_ATTRIB_ARRAY8_NV = 0x8658;
AXLGLFLCONSTMODIFIER GLconstant GL_VERTEX_ATTRIB_ARRAY9_NV = 0x8659;
AXLGLFLCONSTMODIFIER GLconstant GL_VERTEX_ATTRIB_ARRAY10_NV = 0x865A;
AXLGLFLCONSTMODIFIER GLconstant GL_VERTEX_ATTRIB_ARRAY11_NV = 0x865B;
AXLGLFLCONSTMODIFIER GLconstant GL_VERTEX_ATTRIB_ARRAY12_NV = 0x865C;
AXLGLFLCONSTMODIFIER GLconstant GL_VERTEX_ATTRIB_ARRAY13_NV = 0x865D;
AXLGLFLCONSTMODIFIER GLconstant GL_VERTEX_ATTRIB_ARRAY14_NV = 0x865E;
AXLGLFLCONSTMODIFIER GLconstant GL_VERTEX_ATTRIB_ARRAY15_NV = 0x865F;
AXLGLFLCONSTMODIFIER GLconstant GL_MAP1_VERTEX_ATTRIB0_4_NV = 0x8660;
AXLGLFLCONSTMODIFIER GLconstant GL_MAP1_VERTEX_ATTRIB1_4_NV = 0x8661;
AXLGLFLCONSTMODIFIER GLconstant GL_MAP1_VERTEX_ATTRIB2_4_NV = 0x8662;
AXLGLFLCONSTMODIFIER GLconstant GL_MAP1_VERTEX_ATTRIB3_4_NV = 0x8663;
AXLGLFLCONSTMODIFIER GLconstant GL_MAP1_VERTEX_ATTRIB4_4_NV = 0x8664;
AXLGLFLCONSTMODIFIER GLconstant GL_MAP1_VERTEX_ATTRIB5_4_NV = 0x8665;
AXLGLFLCONSTMODIFIER GLconstant GL_MAP1_VERTEX_ATTRIB6_4_NV = 0x8666;
AXLGLFLCONSTMODIFIER GLconstant GL_MAP1_VERTEX_ATTRIB7_4_NV = 0x8667;
AXLGLFLCONSTMODIFIER GLconstant GL_MAP1_VERTEX_ATTRIB8_4_NV = 0x8668;
AXLGLFLCONSTMODIFIER GLconstant GL_MAP1_VERTEX_ATTRIB9_4_NV = 0x8669;
AXLGLFLCONSTMODIFIER GLconstant GL_MAP1_VERTEX_ATTRIB10_4_NV = 0x866A;
AXLGLFLCONSTMODIFIER GLconstant GL_MAP1_VERTEX_ATTRIB11_4_NV = 0x866B;
AXLGLFLCONSTMODIFIER GLconstant GL_MAP1_VERTEX_ATTRIB12_4_NV = 0x866C;
AXLGLFLCONSTMODIFIER GLconstant GL_MAP1_VERTEX_ATTRIB13_4_NV = 0x866D;
AXLGLFLCONSTMODIFIER GLconstant GL_MAP1_VERTEX_ATTRIB14_4_NV = 0x866E;
AXLGLFLCONSTMODIFIER GLconstant GL_MAP1_VERTEX_ATTRIB15_4_NV = 0x866F;
AXLGLFLCONSTMODIFIER GLconstant GL_MAP2_VERTEX_ATTRIB0_4_NV = 0x8670;
AXLGLFLCONSTMODIFIER GLconstant GL_MAP2_VERTEX_ATTRIB1_4_NV = 0x8671;
AXLGLFLCONSTMODIFIER GLconstant GL_MAP2_VERTEX_ATTRIB2_4_NV = 0x8672;
AXLGLFLCONSTMODIFIER GLconstant GL_MAP2_VERTEX_ATTRIB3_4_NV = 0x8673;
AXLGLFLCONSTMODIFIER GLconstant GL_MAP2_VERTEX_ATTRIB4_4_NV = 0x8674;
AXLGLFLCONSTMODIFIER GLconstant GL_MAP2_VERTEX_ATTRIB5_4_NV = 0x8675;
AXLGLFLCONSTMODIFIER GLconstant GL_MAP2_VERTEX_ATTRIB6_4_NV = 0x8676;
AXLGLFLCONSTMODIFIER GLconstant GL_MAP2_VERTEX_ATTRIB7_4_NV = 0x8677;
AXLGLFLCONSTMODIFIER GLconstant GL_MAP2_VERTEX_ATTRIB8_4_NV = 0x8678;
AXLGLFLCONSTMODIFIER GLconstant GL_MAP2_VERTEX_ATTRIB9_4_NV = 0x8679;
AXLGLFLCONSTMODIFIER GLconstant GL_MAP2_VERTEX_ATTRIB10_4_NV = 0x867A;
AXLGLFLCONSTMODIFIER GLconstant GL_MAP2_VERTEX_ATTRIB11_4_NV = 0x867B;
AXLGLFLCONSTMODIFIER GLconstant GL_MAP2_VERTEX_ATTRIB12_4_NV = 0x867C;
AXLGLFLCONSTMODIFIER GLconstant GL_MAP2_VERTEX_ATTRIB13_4_NV = 0x867D;
AXLGLFLCONSTMODIFIER GLconstant GL_MAP2_VERTEX_ATTRIB14_4_NV = 0x867E;
AXLGLFLCONSTMODIFIER GLconstant GL_MAP2_VERTEX_ATTRIB15_4_NV = 0x867F;
typedef GLboolean (APIENTRYP PFNGLAREPROGRAMSRESIDENTNVPROC) (GLsizei n, const GLuint *programs, GLboolean *residences);
typedef void (APIENTRYP PFNGLBINDPROGRAMNVPROC) (GLenum target, GLuint id);
typedef void (APIENTRYP PFNGLDELETEPROGRAMSNVPROC) (GLsizei n, const GLuint *programs);
typedef void (APIENTRYP PFNGLEXECUTEPROGRAMNVPROC) (GLenum target, GLuint id, const GLfloat *params);
typedef void (APIENTRYP PFNGLGENPROGRAMSNVPROC) (GLsizei n, GLuint *programs);
typedef void (APIENTRYP PFNGLGETPROGRAMPARAMETERDVNVPROC) (GLenum target, GLuint index, GLenum pname, GLdouble *params);
typedef void (APIENTRYP PFNGLGETPROGRAMPARAMETERFVNVPROC) (GLenum target, GLuint index, GLenum pname, GLfloat *params);
typedef void (APIENTRYP PFNGLGETPROGRAMIVNVPROC) (GLuint id, GLenum pname, GLint *params);
typedef void (APIENTRYP PFNGLGETPROGRAMSTRINGNVPROC) (GLuint id, GLenum pname, GLubyte *program);
typedef void (APIENTRYP PFNGLGETTRACKMATRIXIVNVPROC) (GLenum target, GLuint address, GLenum pname, GLint *params);
typedef void (APIENTRYP PFNGLGETVERTEXATTRIBDVNVPROC) (GLuint index, GLenum pname, GLdouble *params);
typedef void (APIENTRYP PFNGLGETVERTEXATTRIBFVNVPROC) (GLuint index, GLenum pname, GLfloat *params);
typedef void (APIENTRYP PFNGLGETVERTEXATTRIBIVNVPROC) (GLuint index, GLenum pname, GLint *params);
typedef void (APIENTRYP PFNGLGETVERTEXATTRIBPOINTERVNVPROC) (GLuint index, GLenum pname, void **pointer);
typedef GLboolean (APIENTRYP PFNGLISPROGRAMNVPROC) (GLuint id);
typedef void (APIENTRYP PFNGLLOADPROGRAMNVPROC) (GLenum target, GLuint id, GLsizei len, const GLubyte *program);
typedef void (APIENTRYP PFNGLPROGRAMPARAMETER4DNVPROC) (GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
typedef void (APIENTRYP PFNGLPROGRAMPARAMETER4DVNVPROC) (GLenum target, GLuint index, const GLdouble *v);
typedef void (APIENTRYP PFNGLPROGRAMPARAMETER4FNVPROC) (GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
typedef void (APIENTRYP PFNGLPROGRAMPARAMETER4FVNVPROC) (GLenum target, GLuint index, const GLfloat *v);
typedef void (APIENTRYP PFNGLPROGRAMPARAMETERS4DVNVPROC) (GLenum target, GLuint index, GLsizei count, const GLdouble *v);
typedef void (APIENTRYP PFNGLPROGRAMPARAMETERS4FVNVPROC) (GLenum target, GLuint index, GLsizei count, const GLfloat *v);
typedef void (APIENTRYP PFNGLREQUESTRESIDENTPROGRAMSNVPROC) (GLsizei n, const GLuint *programs);
typedef void (APIENTRYP PFNGLTRACKMATRIXNVPROC) (GLenum target, GLuint address, GLenum matrix, GLenum transform);
typedef void (APIENTRYP PFNGLVERTEXATTRIBPOINTERNVPROC) (GLuint index, GLint fsize, GLenum type, GLsizei stride, const void *pointer);
typedef void (APIENTRYP PFNGLVERTEXATTRIB1DNVPROC) (GLuint index, GLdouble x);
typedef void (APIENTRYP PFNGLVERTEXATTRIB1DVNVPROC) (GLuint index, const GLdouble *v);
typedef void (APIENTRYP PFNGLVERTEXATTRIB1FNVPROC) (GLuint index, GLfloat x);
typedef void (APIENTRYP PFNGLVERTEXATTRIB1FVNVPROC) (GLuint index, const GLfloat *v);
typedef void (APIENTRYP PFNGLVERTEXATTRIB1SNVPROC) (GLuint index, GLshort x);
typedef void (APIENTRYP PFNGLVERTEXATTRIB1SVNVPROC) (GLuint index, const GLshort *v);
typedef void (APIENTRYP PFNGLVERTEXATTRIB2DNVPROC) (GLuint index, GLdouble x, GLdouble y);
typedef void (APIENTRYP PFNGLVERTEXATTRIB2DVNVPROC) (GLuint index, const GLdouble *v);
typedef void (APIENTRYP PFNGLVERTEXATTRIB2FNVPROC) (GLuint index, GLfloat x, GLfloat y);
typedef void (APIENTRYP PFNGLVERTEXATTRIB2FVNVPROC) (GLuint index, const GLfloat *v);
typedef void (APIENTRYP PFNGLVERTEXATTRIB2SNVPROC) (GLuint index, GLshort x, GLshort y);
typedef void (APIENTRYP PFNGLVERTEXATTRIB2SVNVPROC) (GLuint index, const GLshort *v);
typedef void (APIENTRYP PFNGLVERTEXATTRIB3DNVPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble z);
typedef void (APIENTRYP PFNGLVERTEXATTRIB3DVNVPROC) (GLuint index, const GLdouble *v);
typedef void (APIENTRYP PFNGLVERTEXATTRIB3FNVPROC) (GLuint index, GLfloat x, GLfloat y, GLfloat z);
typedef void (APIENTRYP PFNGLVERTEXATTRIB3FVNVPROC) (GLuint index, const GLfloat *v);
typedef void (APIENTRYP PFNGLVERTEXATTRIB3SNVPROC) (GLuint index, GLshort x, GLshort y, GLshort z);
typedef void (APIENTRYP PFNGLVERTEXATTRIB3SVNVPROC) (GLuint index, const GLshort *v);
typedef void (APIENTRYP PFNGLVERTEXATTRIB4DNVPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
typedef void (APIENTRYP PFNGLVERTEXATTRIB4DVNVPROC) (GLuint index, const GLdouble *v);
typedef void (APIENTRYP PFNGLVERTEXATTRIB4FNVPROC) (GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
typedef void (APIENTRYP PFNGLVERTEXATTRIB4FVNVPROC) (GLuint index, const GLfloat *v);
typedef void (APIENTRYP PFNGLVERTEXATTRIB4SNVPROC) (GLuint index, GLshort x, GLshort y, GLshort z, GLshort w);
typedef void (APIENTRYP PFNGLVERTEXATTRIB4SVNVPROC) (GLuint index, const GLshort *v);
typedef void (APIENTRYP PFNGLVERTEXATTRIB4UBNVPROC) (GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w);
typedef void (APIENTRYP PFNGLVERTEXATTRIB4UBVNVPROC) (GLuint index, const GLubyte *v);
typedef void (APIENTRYP PFNGLVERTEXATTRIBS1DVNVPROC) (GLuint index, GLsizei count, const GLdouble *v);
typedef void (APIENTRYP PFNGLVERTEXATTRIBS1FVNVPROC) (GLuint index, GLsizei count, const GLfloat *v);
typedef void (APIENTRYP PFNGLVERTEXATTRIBS1SVNVPROC) (GLuint index, GLsizei count, const GLshort *v);
typedef void (APIENTRYP PFNGLVERTEXATTRIBS2DVNVPROC) (GLuint index, GLsizei count, const GLdouble *v);
typedef void (APIENTRYP PFNGLVERTEXATTRIBS2FVNVPROC) (GLuint index, GLsizei count, const GLfloat *v);
typedef void (APIENTRYP PFNGLVERTEXATTRIBS2SVNVPROC) (GLuint index, GLsizei count, const GLshort *v);
typedef void (APIENTRYP PFNGLVERTEXATTRIBS3DVNVPROC) (GLuint index, GLsizei count, const GLdouble *v);
typedef void (APIENTRYP PFNGLVERTEXATTRIBS3FVNVPROC) (GLuint index, GLsizei count, const GLfloat *v);
typedef void (APIENTRYP PFNGLVERTEXATTRIBS3SVNVPROC) (GLuint index, GLsizei count, const GLshort *v);
typedef void (APIENTRYP PFNGLVERTEXATTRIBS4DVNVPROC) (GLuint index, GLsizei count, const GLdouble *v);
typedef void (APIENTRYP PFNGLVERTEXATTRIBS4FVNVPROC) (GLuint index, GLsizei count, const GLfloat *v);
typedef void (APIENTRYP PFNGLVERTEXATTRIBS4SVNVPROC) (GLuint index, GLsizei count, const GLshort *v);
typedef void (APIENTRYP PFNGLVERTEXATTRIBS4UBVNVPROC) (GLuint index, GLsizei count, const GLubyte *v);
// GL_NV_vertex_program

// GL_NV_vertex_program1_1
AXLGLFLAPI bool GL_NV_vertex_program1_1;
// GL_NV_vertex_program1_1

// GL_NV_vertex_program2
AXLGLFLAPI bool GL_NV_vertex_program2;
// GL_NV_vertex_program2

// GL_NV_vertex_program2_option
AXLGLFLAPI bool GL_NV_vertex_program2_option;
// GL_NV_vertex_program2_option

// GL_NV_vertex_program3
AXLGLFLAPI bool GL_NV_vertex_program3;
// GL_NV_vertex_program3

// GL_NV_vertex_program4
AXLGLFLAPI bool GL_NV_vertex_program4;
AXLGLFLCONSTMODIFIER GLconstant GL_VERTEX_ATTRIB_ARRAY_INTEGER_NV = 0x88FD;
typedef void (APIENTRYP PFNGLVERTEXATTRIBI1IEXTPROC) (GLuint index, GLint x);
typedef void (APIENTRYP PFNGLVERTEXATTRIBI2IEXTPROC) (GLuint index, GLint x, GLint y);
typedef void (APIENTRYP PFNGLVERTEXATTRIBI3IEXTPROC) (GLuint index, GLint x, GLint y, GLint z);
typedef void (APIENTRYP PFNGLVERTEXATTRIBI4IEXTPROC) (GLuint index, GLint x, GLint y, GLint z, GLint w);
typedef void (APIENTRYP PFNGLVERTEXATTRIBI1UIEXTPROC) (GLuint index, GLuint x);
typedef void (APIENTRYP PFNGLVERTEXATTRIBI2UIEXTPROC) (GLuint index, GLuint x, GLuint y);
typedef void (APIENTRYP PFNGLVERTEXATTRIBI3UIEXTPROC) (GLuint index, GLuint x, GLuint y, GLuint z);
typedef void (APIENTRYP PFNGLVERTEXATTRIBI4UIEXTPROC) (GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);
typedef void (APIENTRYP PFNGLVERTEXATTRIBI1IVEXTPROC) (GLuint index, const GLint *v);
typedef void (APIENTRYP PFNGLVERTEXATTRIBI2IVEXTPROC) (GLuint index, const GLint *v);
typedef void (APIENTRYP PFNGLVERTEXATTRIBI3IVEXTPROC) (GLuint index, const GLint *v);
typedef void (APIENTRYP PFNGLVERTEXATTRIBI4IVEXTPROC) (GLuint index, const GLint *v);
typedef void (APIENTRYP PFNGLVERTEXATTRIBI1UIVEXTPROC) (GLuint index, const GLuint *v);
typedef void (APIENTRYP PFNGLVERTEXATTRIBI2UIVEXTPROC) (GLuint index, const GLuint *v);
typedef void (APIENTRYP PFNGLVERTEXATTRIBI3UIVEXTPROC) (GLuint index, const GLuint *v);
typedef void (APIENTRYP PFNGLVERTEXATTRIBI4UIVEXTPROC) (GLuint index, const GLuint *v);
typedef void (APIENTRYP PFNGLVERTEXATTRIBI4BVEXTPROC) (GLuint index, const GLbyte *v);
typedef void (APIENTRYP PFNGLVERTEXATTRIBI4SVEXTPROC) (GLuint index, const GLshort *v);
typedef void (APIENTRYP PFNGLVERTEXATTRIBI4UBVEXTPROC) (GLuint index, const GLubyte *v);
typedef void (APIENTRYP PFNGLVERTEXATTRIBI4USVEXTPROC) (GLuint index, const GLushort *v);
typedef void (APIENTRYP PFNGLVERTEXATTRIBIPOINTEREXTPROC) (GLuint index, GLint size, GLenum type, GLsizei stride, const void *pointer);
typedef void (APIENTRYP PFNGLGETVERTEXATTRIBIIVEXTPROC) (GLuint index, GLenum pname, GLint *params);
typedef void (APIENTRYP PFNGLGETVERTEXATTRIBIUIVEXTPROC) (GLuint index, GLenum pname, GLuint *params);
// GL_NV_vertex_program4

// GL_NV_video_capture
AXLGLFLAPI bool GL_NV_video_capture;
AXLGLFLCONSTMODIFIER GLconstant GL_VIDEO_BUFFER_NV = 0x9020;
AXLGLFLCONSTMODIFIER GLconstant GL_VIDEO_BUFFER_BINDING_NV = 0x9021;
AXLGLFLCONSTMODIFIER GLconstant GL_FIELD_UPPER_NV = 0x9022;
AXLGLFLCONSTMODIFIER GLconstant GL_FIELD_LOWER_NV = 0x9023;
AXLGLFLCONSTMODIFIER GLconstant GL_NUM_VIDEO_CAPTURE_STREAMS_NV = 0x9024;
AXLGLFLCONSTMODIFIER GLconstant GL_NEXT_VIDEO_CAPTURE_BUFFER_STATUS_NV = 0x9025;
AXLGLFLCONSTMODIFIER GLconstant GL_VIDEO_CAPTURE_TO_422_SUPPORTED_NV = 0x9026;
AXLGLFLCONSTMODIFIER GLconstant GL_LAST_VIDEO_CAPTURE_STATUS_NV = 0x9027;
AXLGLFLCONSTMODIFIER GLconstant GL_VIDEO_BUFFER_PITCH_NV = 0x9028;
AXLGLFLCONSTMODIFIER GLconstant GL_VIDEO_COLOR_CONVERSION_MATRIX_NV = 0x9029;
AXLGLFLCONSTMODIFIER GLconstant GL_VIDEO_COLOR_CONVERSION_MAX_NV = 0x902A;
AXLGLFLCONSTMODIFIER GLconstant GL_VIDEO_COLOR_CONVERSION_MIN_NV = 0x902B;
AXLGLFLCONSTMODIFIER GLconstant GL_VIDEO_COLOR_CONVERSION_OFFSET_NV = 0x902C;
AXLGLFLCONSTMODIFIER GLconstant GL_VIDEO_BUFFER_INTERNAL_FORMAT_NV = 0x902D;
AXLGLFLCONSTMODIFIER GLconstant GL_PARTIAL_SUCCESS_NV = 0x902E;
AXLGLFLCONSTMODIFIER GLconstant GL_SUCCESS_NV = 0x902F;
AXLGLFLCONSTMODIFIER GLconstant GL_FAILURE_NV = 0x9030;
AXLGLFLCONSTMODIFIER GLconstant GL_YCBYCR8_422_NV = 0x9031;
AXLGLFLCONSTMODIFIER GLconstant GL_YCBAYCR8A_4224_NV = 0x9032;
AXLGLFLCONSTMODIFIER GLconstant GL_Z6Y10Z6CB10Z6Y10Z6CR10_422_NV = 0x9033;
AXLGLFLCONSTMODIFIER GLconstant GL_Z6Y10Z6CB10Z6A10Z6Y10Z6CR10Z6A10_4224_NV = 0x9034;
AXLGLFLCONSTMODIFIER GLconstant GL_Z4Y12Z4CB12Z4Y12Z4CR12_422_NV = 0x9035;
AXLGLFLCONSTMODIFIER GLconstant GL_Z4Y12Z4CB12Z4A12Z4Y12Z4CR12Z4A12_4224_NV = 0x9036;
AXLGLFLCONSTMODIFIER GLconstant GL_Z4Y12Z4CB12Z4CR12_444_NV = 0x9037;
AXLGLFLCONSTMODIFIER GLconstant GL_VIDEO_CAPTURE_FRAME_WIDTH_NV = 0x9038;
AXLGLFLCONSTMODIFIER GLconstant GL_VIDEO_CAPTURE_FRAME_HEIGHT_NV = 0x9039;
AXLGLFLCONSTMODIFIER GLconstant GL_VIDEO_CAPTURE_FIELD_UPPER_HEIGHT_NV = 0x903A;
AXLGLFLCONSTMODIFIER GLconstant GL_VIDEO_CAPTURE_FIELD_LOWER_HEIGHT_NV = 0x903B;
AXLGLFLCONSTMODIFIER GLconstant GL_VIDEO_CAPTURE_SURFACE_ORIGIN_NV = 0x903C;
typedef void (APIENTRYP PFNGLBEGINVIDEOCAPTURENVPROC) (GLuint video_capture_slot);
typedef void (APIENTRYP PFNGLBINDVIDEOCAPTURESTREAMBUFFERNVPROC) (GLuint video_capture_slot, GLuint stream, GLenum frame_region, GLintptrARB offset);
typedef void (APIENTRYP PFNGLBINDVIDEOCAPTURESTREAMTEXTURENVPROC) (GLuint video_capture_slot, GLuint stream, GLenum frame_region, GLenum target, GLuint texture);
typedef void (APIENTRYP PFNGLENDVIDEOCAPTURENVPROC) (GLuint video_capture_slot);
typedef void (APIENTRYP PFNGLGETVIDEOCAPTUREIVNVPROC) (GLuint video_capture_slot, GLenum pname, GLint *params);
typedef void (APIENTRYP PFNGLGETVIDEOCAPTURESTREAMIVNVPROC) (GLuint video_capture_slot, GLuint stream, GLenum pname, GLint *params);
typedef void (APIENTRYP PFNGLGETVIDEOCAPTURESTREAMFVNVPROC) (GLuint video_capture_slot, GLuint stream, GLenum pname, GLfloat *params);
typedef void (APIENTRYP PFNGLGETVIDEOCAPTURESTREAMDVNVPROC) (GLuint video_capture_slot, GLuint stream, GLenum pname, GLdouble *params);
typedef GLenum (APIENTRYP PFNGLVIDEOCAPTURENVPROC) (GLuint video_capture_slot, GLuint *sequence_num, GLuint64EXT *capture_time);
typedef void (APIENTRYP PFNGLVIDEOCAPTURESTREAMPARAMETERIVNVPROC) (GLuint video_capture_slot, GLuint stream, GLenum pname, const GLint *params);
typedef void (APIENTRYP PFNGLVIDEOCAPTURESTREAMPARAMETERFVNVPROC) (GLuint video_capture_slot, GLuint stream, GLenum pname, const GLfloat *params);
typedef void (APIENTRYP PFNGLVIDEOCAPTURESTREAMPARAMETERDVNVPROC) (GLuint video_capture_slot, GLuint stream, GLenum pname, const GLdouble *params);
// GL_NV_video_capture

// GL_NV_viewport_array2
AXLGLFLAPI bool GL_NV_viewport_array2;
// GL_NV_viewport_array2

// GL_NV_viewport_swizzle
AXLGLFLAPI bool GL_NV_viewport_swizzle;
AXLGLFLCONSTMODIFIER GLconstant GL_VIEWPORT_SWIZZLE_POSITIVE_X_NV = 0x9350;
AXLGLFLCONSTMODIFIER GLconstant GL_VIEWPORT_SWIZZLE_NEGATIVE_X_NV = 0x9351;
AXLGLFLCONSTMODIFIER GLconstant GL_VIEWPORT_SWIZZLE_POSITIVE_Y_NV = 0x9352;
AXLGLFLCONSTMODIFIER GLconstant GL_VIEWPORT_SWIZZLE_NEGATIVE_Y_NV = 0x9353;
AXLGLFLCONSTMODIFIER GLconstant GL_VIEWPORT_SWIZZLE_POSITIVE_Z_NV = 0x9354;
AXLGLFLCONSTMODIFIER GLconstant GL_VIEWPORT_SWIZZLE_NEGATIVE_Z_NV = 0x9355;
AXLGLFLCONSTMODIFIER GLconstant GL_VIEWPORT_SWIZZLE_POSITIVE_W_NV = 0x9356;
AXLGLFLCONSTMODIFIER GLconstant GL_VIEWPORT_SWIZZLE_NEGATIVE_W_NV = 0x9357;
AXLGLFLCONSTMODIFIER GLconstant GL_VIEWPORT_SWIZZLE_X_NV = 0x9358;
AXLGLFLCONSTMODIFIER GLconstant GL_VIEWPORT_SWIZZLE_Y_NV = 0x9359;
AXLGLFLCONSTMODIFIER GLconstant GL_VIEWPORT_SWIZZLE_Z_NV = 0x935A;
AXLGLFLCONSTMODIFIER GLconstant GL_VIEWPORT_SWIZZLE_W_NV = 0x935B;
typedef void (APIENTRYP PFNGLVIEWPORTSWIZZLENVPROC) (GLuint index, GLenum swizzlex, GLenum swizzley, GLenum swizzlez, GLenum swizzlew);
// GL_NV_viewport_swizzle

} // namespace GLNV

namespace GLOML {

// GL_OML_interlace
AXLGLFLAPI bool GL_OML_interlace;
AXLGLFLCONSTMODIFIER GLconstant GL_INTERLACE_OML = 0x8980;
AXLGLFLCONSTMODIFIER GLconstant GL_INTERLACE_READ_OML = 0x8981;
// GL_OML_interlace

// GL_OML_resample
AXLGLFLAPI bool GL_OML_resample;
AXLGLFLCONSTMODIFIER GLconstant GL_PACK_RESAMPLE_OML = 0x8984;
AXLGLFLCONSTMODIFIER GLconstant GL_UNPACK_RESAMPLE_OML = 0x8985;
AXLGLFLCONSTMODIFIER GLconstant GL_RESAMPLE_REPLICATE_OML = 0x8986;
AXLGLFLCONSTMODIFIER GLconstant GL_RESAMPLE_ZERO_FILL_OML = 0x8987;
AXLGLFLCONSTMODIFIER GLconstant GL_RESAMPLE_AVERAGE_OML = 0x8988;
AXLGLFLCONSTMODIFIER GLconstant GL_RESAMPLE_DECIMATE_OML = 0x8989;
// GL_OML_resample

// GL_OML_subsample
AXLGLFLAPI bool GL_OML_subsample;
AXLGLFLCONSTMODIFIER GLconstant GL_FORMAT_SUBSAMPLE_24_24_OML = 0x8982;
AXLGLFLCONSTMODIFIER GLconstant GL_FORMAT_SUBSAMPLE_244_244_OML = 0x8983;
// GL_OML_subsample

} // namespace GLOML

namespace GLOVR {

// GL_OVR_multiview
AXLGLFLAPI bool GL_OVR_multiview;
AXLGLFLCONSTMODIFIER GLconstant GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_NUM_VIEWS_OVR = 0x9630;
AXLGLFLCONSTMODIFIER GLconstant GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_BASE_VIEW_INDEX_OVR = 0x9632;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_VIEWS_OVR = 0x9631;
AXLGLFLCONSTMODIFIER GLconstant GL_FRAMEBUFFER_INCOMPLETE_VIEW_TARGETS_OVR = 0x9633;
typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTUREMULTIVIEWOVRPROC) (GLenum target, GLenum attachment, GLuint texture, GLint level, GLint baseViewIndex, GLsizei numViews);
// GL_OVR_multiview

// GL_OVR_multiview2
AXLGLFLAPI bool GL_OVR_multiview2;
// GL_OVR_multiview2

} // namespace GLOVR

namespace GLPGI {

// GL_PGI_misc_hints
AXLGLFLAPI bool GL_PGI_misc_hints;
AXLGLFLCONSTMODIFIER GLconstant GL_PREFER_DOUBLEBUFFER_HINT_PGI = 0x1A1F8;
AXLGLFLCONSTMODIFIER GLconstant GL_CONSERVE_MEMORY_HINT_PGI = 0x1A1FD;
AXLGLFLCONSTMODIFIER GLconstant GL_RECLAIM_MEMORY_HINT_PGI = 0x1A1FE;
AXLGLFLCONSTMODIFIER GLconstant GL_NATIVE_GRAPHICS_HANDLE_PGI = 0x1A202;
AXLGLFLCONSTMODIFIER GLconstant GL_NATIVE_GRAPHICS_BEGIN_HINT_PGI = 0x1A203;
AXLGLFLCONSTMODIFIER GLconstant GL_NATIVE_GRAPHICS_END_HINT_PGI = 0x1A204;
AXLGLFLCONSTMODIFIER GLconstant GL_ALWAYS_FAST_HINT_PGI = 0x1A20C;
AXLGLFLCONSTMODIFIER GLconstant GL_ALWAYS_SOFT_HINT_PGI = 0x1A20D;
AXLGLFLCONSTMODIFIER GLconstant GL_ALLOW_DRAW_OBJ_HINT_PGI = 0x1A20E;
AXLGLFLCONSTMODIFIER GLconstant GL_ALLOW_DRAW_WIN_HINT_PGI = 0x1A20F;
AXLGLFLCONSTMODIFIER GLconstant GL_ALLOW_DRAW_FRG_HINT_PGI = 0x1A210;
AXLGLFLCONSTMODIFIER GLconstant GL_ALLOW_DRAW_MEM_HINT_PGI = 0x1A211;
AXLGLFLCONSTMODIFIER GLconstant GL_STRICT_DEPTHFUNC_HINT_PGI = 0x1A216;
AXLGLFLCONSTMODIFIER GLconstant GL_STRICT_LIGHTING_HINT_PGI = 0x1A217;
AXLGLFLCONSTMODIFIER GLconstant GL_STRICT_SCISSOR_HINT_PGI = 0x1A218;
AXLGLFLCONSTMODIFIER GLconstant GL_FULL_STIPPLE_HINT_PGI = 0x1A219;
AXLGLFLCONSTMODIFIER GLconstant GL_CLIP_NEAR_HINT_PGI = 0x1A220;
AXLGLFLCONSTMODIFIER GLconstant GL_CLIP_FAR_HINT_PGI = 0x1A221;
AXLGLFLCONSTMODIFIER GLconstant GL_WIDE_LINE_HINT_PGI = 0x1A222;
AXLGLFLCONSTMODIFIER GLconstant GL_BACK_NORMALS_HINT_PGI = 0x1A223;
typedef void (APIENTRYP PFNGLHINTPGIPROC) (GLenum target, GLint mode);
// GL_PGI_misc_hints

// GL_PGI_vertex_hints
AXLGLFLAPI bool GL_PGI_vertex_hints;
AXLGLFLCONSTMODIFIER GLconstant GL_VERTEX_DATA_HINT_PGI = 0x1A22A;
AXLGLFLCONSTMODIFIER GLconstant GL_VERTEX_CONSISTENT_HINT_PGI = 0x1A22B;
AXLGLFLCONSTMODIFIER GLconstant GL_MATERIAL_SIDE_HINT_PGI = 0x1A22C;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_VERTEX_HINT_PGI = 0x1A22D;
AXLGLFLCONSTMODIFIER GLconstant GL_COLOR3_BIT_PGI = 0x000100;00
AXLGLFLCONSTMODIFIER GLconstant GL_COLOR4_BIT_PGI = 0x000200;00
AXLGLFLCONSTMODIFIER GLconstant GL_EDGEFLAG_BIT_PGI = 0x000400;00
AXLGLFLCONSTMODIFIER GLconstant GL_INDEX_BIT_PGI = 0x000800;00
AXLGLFLCONSTMODIFIER GLconstant GL_MAT_AMBIENT_BIT_PGI = 0x001000;00
AXLGLFLCONSTMODIFIER GLconstant GL_MAT_AMBIENT_AND_DIFFUSE_BIT_PGI = 0x002000;00
AXLGLFLCONSTMODIFIER GLconstant GL_MAT_DIFFUSE_BIT_PGI = 0x004000;00
AXLGLFLCONSTMODIFIER GLconstant GL_MAT_EMISSION_BIT_PGI = 0x008000;00
AXLGLFLCONSTMODIFIER GLconstant GL_MAT_COLOR_INDEXES_BIT_PGI = 0x010000;00
AXLGLFLCONSTMODIFIER GLconstant GL_MAT_SHININESS_BIT_PGI = 0x020000;00
AXLGLFLCONSTMODIFIER GLconstant GL_MAT_SPECULAR_BIT_PGI = 0x040000;00
AXLGLFLCONSTMODIFIER GLconstant GL_NORMAL_BIT_PGI = 0x080000;00
AXLGLFLCONSTMODIFIER GLconstant GL_TEXCOORD1_BIT_PGI = 0x100000;00
AXLGLFLCONSTMODIFIER GLconstant GL_TEXCOORD2_BIT_PGI = 0x200000;00
AXLGLFLCONSTMODIFIER GLconstant GL_TEXCOORD3_BIT_PGI = 0x400000;00
AXLGLFLCONSTMODIFIER GLconstant GL_TEXCOORD4_BIT_PGI = 0x800000;00
AXLGLFLCONSTMODIFIER GLconstant GL_VERTEX23_BIT_PGI = 0x000000;04
AXLGLFLCONSTMODIFIER GLconstant GL_VERTEX4_BIT_PGI = 0x000000;08
// GL_PGI_vertex_hints

} // namespace GLPGI

namespace GLREND {

// GL_REND_screen_coordinates
AXLGLFLAPI bool GL_REND_screen_coordinates;
AXLGLFLCONSTMODIFIER GLconstant GL_SCREEN_COORDINATES_REND = 0x8490;
AXLGLFLCONSTMODIFIER GLconstant GL_INVERTED_SCREEN_W_REND = 0x8491;
// GL_REND_screen_coordinates

} // namespace GLREND

namespace GLS3 {

// GL_S3_s3tc
AXLGLFLAPI bool GL_S3_s3tc;
AXLGLFLCONSTMODIFIER GLconstant GL_RGB_S3TC = 0x83A0;
AXLGLFLCONSTMODIFIER GLconstant GL_RGB4_S3TC = 0x83A1;
AXLGLFLCONSTMODIFIER GLconstant GL_RGBA_S3TC = 0x83A2;
AXLGLFLCONSTMODIFIER GLconstant GL_RGBA4_S3TC = 0x83A3;
AXLGLFLCONSTMODIFIER GLconstant GL_RGBA_DXT5_S3TC = 0x83A4;
AXLGLFLCONSTMODIFIER GLconstant GL_RGBA4_DXT5_S3TC = 0x83A5;
// GL_S3_s3tc

} // namespace GLS3

namespace GLSGIS {

// GL_SGIS_detail_texture
AXLGLFLAPI bool GL_SGIS_detail_texture;
AXLGLFLCONSTMODIFIER GLconstant GL_DETAIL_TEXTURE_2D_SGIS = 0x8095;
AXLGLFLCONSTMODIFIER GLconstant GL_DETAIL_TEXTURE_2D_BINDING_SGIS = 0x8096;
AXLGLFLCONSTMODIFIER GLconstant GL_LINEAR_DETAIL_SGIS = 0x8097;
AXLGLFLCONSTMODIFIER GLconstant GL_LINEAR_DETAIL_ALPHA_SGIS = 0x8098;
AXLGLFLCONSTMODIFIER GLconstant GL_LINEAR_DETAIL_COLOR_SGIS = 0x8099;
AXLGLFLCONSTMODIFIER GLconstant GL_DETAIL_TEXTURE_LEVEL_SGIS = 0x809A;
AXLGLFLCONSTMODIFIER GLconstant GL_DETAIL_TEXTURE_MODE_SGIS = 0x809B;
AXLGLFLCONSTMODIFIER GLconstant GL_DETAIL_TEXTURE_FUNC_POINTS_SGIS = 0x809C;
typedef void (APIENTRYP PFNGLDETAILTEXFUNCSGISPROC) (GLenum target, GLsizei n, const GLfloat *points);
typedef void (APIENTRYP PFNGLGETDETAILTEXFUNCSGISPROC) (GLenum target, GLfloat *points);
// GL_SGIS_detail_texture

// GL_SGIS_fog_function
AXLGLFLAPI bool GL_SGIS_fog_function;
AXLGLFLCONSTMODIFIER GLconstant GL_FOG_FUNC_SGIS = 0x812A;
AXLGLFLCONSTMODIFIER GLconstant GL_FOG_FUNC_POINTS_SGIS = 0x812B;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_FOG_FUNC_POINTS_SGIS = 0x812C;
typedef void (APIENTRYP PFNGLFOGFUNCSGISPROC) (GLsizei n, const GLfloat *points);
typedef void (APIENTRYP PFNGLGETFOGFUNCSGISPROC) (GLfloat *points);
// GL_SGIS_fog_function

// GL_SGIS_generate_mipmap
AXLGLFLAPI bool GL_SGIS_generate_mipmap;
AXLGLFLCONSTMODIFIER GLconstant GL_GENERATE_MIPMAP_SGIS = 0x8191;
AXLGLFLCONSTMODIFIER GLconstant GL_GENERATE_MIPMAP_HINT_SGIS = 0x8192;
// GL_SGIS_generate_mipmap

// GL_SGIS_multisample
AXLGLFLAPI bool GL_SGIS_multisample;
AXLGLFLCONSTMODIFIER GLconstant GL_MULTISAMPLE_SGIS = 0x809D;
AXLGLFLCONSTMODIFIER GLconstant GL_SAMPLE_ALPHA_TO_MASK_SGIS = 0x809E;
AXLGLFLCONSTMODIFIER GLconstant GL_SAMPLE_ALPHA_TO_ONE_SGIS = 0x809F;
AXLGLFLCONSTMODIFIER GLconstant GL_SAMPLE_MASK_SGIS = 0x80A0;
AXLGLFLCONSTMODIFIER GLconstant GL_1PASS_SGIS = 0x80A1;
AXLGLFLCONSTMODIFIER GLconstant GL_2PASS_0_SGIS = 0x80A2;
AXLGLFLCONSTMODIFIER GLconstant GL_2PASS_1_SGIS = 0x80A3;
AXLGLFLCONSTMODIFIER GLconstant GL_4PASS_0_SGIS = 0x80A4;
AXLGLFLCONSTMODIFIER GLconstant GL_4PASS_1_SGIS = 0x80A5;
AXLGLFLCONSTMODIFIER GLconstant GL_4PASS_2_SGIS = 0x80A6;
AXLGLFLCONSTMODIFIER GLconstant GL_4PASS_3_SGIS = 0x80A7;
AXLGLFLCONSTMODIFIER GLconstant GL_SAMPLE_BUFFERS_SGIS = 0x80A8;
AXLGLFLCONSTMODIFIER GLconstant GL_SAMPLES_SGIS = 0x80A9;
AXLGLFLCONSTMODIFIER GLconstant GL_SAMPLE_MASK_VALUE_SGIS = 0x80AA;
AXLGLFLCONSTMODIFIER GLconstant GL_SAMPLE_MASK_INVERT_SGIS = 0x80AB;
AXLGLFLCONSTMODIFIER GLconstant GL_SAMPLE_PATTERN_SGIS = 0x80AC;
typedef void (APIENTRYP PFNGLSAMPLEMASKSGISPROC) (GLclampf value, GLboolean invert);
typedef void (APIENTRYP PFNGLSAMPLEPATTERNSGISPROC) (GLenum pattern);
// GL_SGIS_multisample

// GL_SGIS_pixel_texture
AXLGLFLAPI bool GL_SGIS_pixel_texture;
AXLGLFLCONSTMODIFIER GLconstant GL_PIXEL_TEXTURE_SGIS = 0x8353;
AXLGLFLCONSTMODIFIER GLconstant GL_PIXEL_FRAGMENT_RGB_SOURCE_SGIS = 0x8354;
AXLGLFLCONSTMODIFIER GLconstant GL_PIXEL_FRAGMENT_ALPHA_SOURCE_SGIS = 0x8355;
AXLGLFLCONSTMODIFIER GLconstant GL_PIXEL_GROUP_COLOR_SGIS = 0x8356;
typedef void (APIENTRYP PFNGLPIXELTEXGENPARAMETERISGISPROC) (GLenum pname, GLint param);
typedef void (APIENTRYP PFNGLPIXELTEXGENPARAMETERIVSGISPROC) (GLenum pname, const GLint *params);
typedef void (APIENTRYP PFNGLPIXELTEXGENPARAMETERFSGISPROC) (GLenum pname, GLfloat param);
typedef void (APIENTRYP PFNGLPIXELTEXGENPARAMETERFVSGISPROC) (GLenum pname, const GLfloat *params);
typedef void (APIENTRYP PFNGLGETPIXELTEXGENPARAMETERIVSGISPROC) (GLenum pname, GLint *params);
typedef void (APIENTRYP PFNGLGETPIXELTEXGENPARAMETERFVSGISPROC) (GLenum pname, GLfloat *params);
// GL_SGIS_pixel_texture

// GL_SGIS_point_line_texgen
AXLGLFLAPI bool GL_SGIS_point_line_texgen;
AXLGLFLCONSTMODIFIER GLconstant GL_EYE_DISTANCE_TO_POINT_SGIS = 0x81F0;
AXLGLFLCONSTMODIFIER GLconstant GL_OBJECT_DISTANCE_TO_POINT_SGIS = 0x81F1;
AXLGLFLCONSTMODIFIER GLconstant GL_EYE_DISTANCE_TO_LINE_SGIS = 0x81F2;
AXLGLFLCONSTMODIFIER GLconstant GL_OBJECT_DISTANCE_TO_LINE_SGIS = 0x81F3;
AXLGLFLCONSTMODIFIER GLconstant GL_EYE_POINT_SGIS = 0x81F4;
AXLGLFLCONSTMODIFIER GLconstant GL_OBJECT_POINT_SGIS = 0x81F5;
AXLGLFLCONSTMODIFIER GLconstant GL_EYE_LINE_SGIS = 0x81F6;
AXLGLFLCONSTMODIFIER GLconstant GL_OBJECT_LINE_SGIS = 0x81F7;
// GL_SGIS_point_line_texgen

// GL_SGIS_point_parameters
AXLGLFLAPI bool GL_SGIS_point_parameters;
AXLGLFLCONSTMODIFIER GLconstant GL_POINT_SIZE_MIN_SGIS = 0x8126;
AXLGLFLCONSTMODIFIER GLconstant GL_POINT_SIZE_MAX_SGIS = 0x8127;
AXLGLFLCONSTMODIFIER GLconstant GL_POINT_FADE_THRESHOLD_SIZE_SGIS = 0x8128;
AXLGLFLCONSTMODIFIER GLconstant GL_DISTANCE_ATTENUATION_SGIS = 0x8129;
typedef void (APIENTRYP PFNGLPOINTPARAMETERFSGISPROC) (GLenum pname, GLfloat param);
typedef void (APIENTRYP PFNGLPOINTPARAMETERFVSGISPROC) (GLenum pname, const GLfloat *params);
// GL_SGIS_point_parameters

// GL_SGIS_sharpen_texture
AXLGLFLAPI bool GL_SGIS_sharpen_texture;
AXLGLFLCONSTMODIFIER GLconstant GL_LINEAR_SHARPEN_SGIS = 0x80AD;
AXLGLFLCONSTMODIFIER GLconstant GL_LINEAR_SHARPEN_ALPHA_SGIS = 0x80AE;
AXLGLFLCONSTMODIFIER GLconstant GL_LINEAR_SHARPEN_COLOR_SGIS = 0x80AF;
AXLGLFLCONSTMODIFIER GLconstant GL_SHARPEN_TEXTURE_FUNC_POINTS_SGIS = 0x80B0;
typedef void (APIENTRYP PFNGLSHARPENTEXFUNCSGISPROC) (GLenum target, GLsizei n, const GLfloat *points);
typedef void (APIENTRYP PFNGLGETSHARPENTEXFUNCSGISPROC) (GLenum target, GLfloat *points);
// GL_SGIS_sharpen_texture

// GL_SGIS_texture4D
AXLGLFLAPI bool GL_SGIS_texture4D;
AXLGLFLCONSTMODIFIER GLconstant GL_PACK_SKIP_VOLUMES_SGIS = 0x8130;
AXLGLFLCONSTMODIFIER GLconstant GL_PACK_IMAGE_DEPTH_SGIS = 0x8131;
AXLGLFLCONSTMODIFIER GLconstant GL_UNPACK_SKIP_VOLUMES_SGIS = 0x8132;
AXLGLFLCONSTMODIFIER GLconstant GL_UNPACK_IMAGE_DEPTH_SGIS = 0x8133;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_4D_SGIS = 0x8134;
AXLGLFLCONSTMODIFIER GLconstant GL_PROXY_TEXTURE_4D_SGIS = 0x8135;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_4DSIZE_SGIS = 0x8136;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_WRAP_Q_SGIS = 0x8137;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_4D_TEXTURE_SIZE_SGIS = 0x8138;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_4D_BINDING_SGIS = 0x814F;
typedef void (APIENTRYP PFNGLTEXIMAGE4DSGISPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLsizei size4d, GLint border, GLenum format, GLenum type, const void *pixels);
typedef void (APIENTRYP PFNGLTEXSUBIMAGE4DSGISPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint woffset, GLsizei width, GLsizei height, GLsizei depth, GLsizei size4d, GLenum format, GLenum type, const void *pixels);
// GL_SGIS_texture4D

// GL_SGIS_texture_border_clamp
AXLGLFLAPI bool GL_SGIS_texture_border_clamp;
AXLGLFLCONSTMODIFIER GLconstant GL_CLAMP_TO_BORDER_SGIS = 0x812D;
// GL_SGIS_texture_border_clamp

// GL_SGIS_texture_color_mask
AXLGLFLAPI bool GL_SGIS_texture_color_mask;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_COLOR_WRITEMASK_SGIS = 0x81EF;
typedef void (APIENTRYP PFNGLTEXTURECOLORMASKSGISPROC) (GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha);
// GL_SGIS_texture_color_mask

// GL_SGIS_texture_edge_clamp
AXLGLFLAPI bool GL_SGIS_texture_edge_clamp;
AXLGLFLCONSTMODIFIER GLconstant GL_CLAMP_TO_EDGE_SGIS = 0x812F;
// GL_SGIS_texture_edge_clamp

// GL_SGIS_texture_filter4
AXLGLFLAPI bool GL_SGIS_texture_filter4;
AXLGLFLCONSTMODIFIER GLconstant GL_FILTER4_SGIS = 0x8146;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_FILTER4_SIZE_SGIS = 0x8147;
typedef void (APIENTRYP PFNGLGETTEXFILTERFUNCSGISPROC) (GLenum target, GLenum filter, GLfloat *weights);
typedef void (APIENTRYP PFNGLTEXFILTERFUNCSGISPROC) (GLenum target, GLenum filter, GLsizei n, const GLfloat *weights);
// GL_SGIS_texture_filter4

// GL_SGIS_texture_lod
AXLGLFLAPI bool GL_SGIS_texture_lod;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_MIN_LOD_SGIS = 0x813A;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_MAX_LOD_SGIS = 0x813B;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_BASE_LEVEL_SGIS = 0x813C;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_MAX_LEVEL_SGIS = 0x813D;
// GL_SGIS_texture_lod

// GL_SGIS_texture_select
AXLGLFLAPI bool GL_SGIS_texture_select;
AXLGLFLCONSTMODIFIER GLconstant GL_DUAL_ALPHA4_SGIS = 0x8110;
AXLGLFLCONSTMODIFIER GLconstant GL_DUAL_ALPHA8_SGIS = 0x8111;
AXLGLFLCONSTMODIFIER GLconstant GL_DUAL_ALPHA12_SGIS = 0x8112;
AXLGLFLCONSTMODIFIER GLconstant GL_DUAL_ALPHA16_SGIS = 0x8113;
AXLGLFLCONSTMODIFIER GLconstant GL_DUAL_LUMINANCE4_SGIS = 0x8114;
AXLGLFLCONSTMODIFIER GLconstant GL_DUAL_LUMINANCE8_SGIS = 0x8115;
AXLGLFLCONSTMODIFIER GLconstant GL_DUAL_LUMINANCE12_SGIS = 0x8116;
AXLGLFLCONSTMODIFIER GLconstant GL_DUAL_LUMINANCE16_SGIS = 0x8117;
AXLGLFLCONSTMODIFIER GLconstant GL_DUAL_INTENSITY4_SGIS = 0x8118;
AXLGLFLCONSTMODIFIER GLconstant GL_DUAL_INTENSITY8_SGIS = 0x8119;
AXLGLFLCONSTMODIFIER GLconstant GL_DUAL_INTENSITY12_SGIS = 0x811A;
AXLGLFLCONSTMODIFIER GLconstant GL_DUAL_INTENSITY16_SGIS = 0x811B;
AXLGLFLCONSTMODIFIER GLconstant GL_DUAL_LUMINANCE_ALPHA4_SGIS = 0x811C;
AXLGLFLCONSTMODIFIER GLconstant GL_DUAL_LUMINANCE_ALPHA8_SGIS = 0x811D;
AXLGLFLCONSTMODIFIER GLconstant GL_QUAD_ALPHA4_SGIS = 0x811E;
AXLGLFLCONSTMODIFIER GLconstant GL_QUAD_ALPHA8_SGIS = 0x811F;
AXLGLFLCONSTMODIFIER GLconstant GL_QUAD_LUMINANCE4_SGIS = 0x8120;
AXLGLFLCONSTMODIFIER GLconstant GL_QUAD_LUMINANCE8_SGIS = 0x8121;
AXLGLFLCONSTMODIFIER GLconstant GL_QUAD_INTENSITY4_SGIS = 0x8122;
AXLGLFLCONSTMODIFIER GLconstant GL_QUAD_INTENSITY8_SGIS = 0x8123;
AXLGLFLCONSTMODIFIER GLconstant GL_DUAL_TEXTURE_SELECT_SGIS = 0x8124;
AXLGLFLCONSTMODIFIER GLconstant GL_QUAD_TEXTURE_SELECT_SGIS = 0x8125;
// GL_SGIS_texture_select

} // namespace GLSGIS

namespace GLSGIX {

// GL_SGIX_async
AXLGLFLAPI bool GL_SGIX_async;
AXLGLFLCONSTMODIFIER GLconstant GL_ASYNC_MARKER_SGIX = 0x8329;
typedef void (APIENTRYP PFNGLASYNCMARKERSGIXPROC) (GLuint marker);
typedef GLint (APIENTRYP PFNGLFINISHASYNCSGIXPROC) (GLuint *markerp);
typedef GLint (APIENTRYP PFNGLPOLLASYNCSGIXPROC) (GLuint *markerp);
typedef GLuint (APIENTRYP PFNGLGENASYNCMARKERSSGIXPROC) (GLsizei range);
typedef void (APIENTRYP PFNGLDELETEASYNCMARKERSSGIXPROC) (GLuint marker, GLsizei range);
typedef GLboolean (APIENTRYP PFNGLISASYNCMARKERSGIXPROC) (GLuint marker);
// GL_SGIX_async

// GL_SGIX_async_histogram
AXLGLFLAPI bool GL_SGIX_async_histogram;
AXLGLFLCONSTMODIFIER GLconstant GL_ASYNC_HISTOGRAM_SGIX = 0x832C;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_ASYNC_HISTOGRAM_SGIX = 0x832D;
// GL_SGIX_async_histogram

// GL_SGIX_async_pixel
AXLGLFLAPI bool GL_SGIX_async_pixel;
AXLGLFLCONSTMODIFIER GLconstant GL_ASYNC_TEX_IMAGE_SGIX = 0x835C;
AXLGLFLCONSTMODIFIER GLconstant GL_ASYNC_DRAW_PIXELS_SGIX = 0x835D;
AXLGLFLCONSTMODIFIER GLconstant GL_ASYNC_READ_PIXELS_SGIX = 0x835E;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_ASYNC_TEX_IMAGE_SGIX = 0x835F;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_ASYNC_DRAW_PIXELS_SGIX = 0x8360;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_ASYNC_READ_PIXELS_SGIX = 0x8361;
// GL_SGIX_async_pixel

// GL_SGIX_blend_alpha_minmax
AXLGLFLAPI bool GL_SGIX_blend_alpha_minmax;
AXLGLFLCONSTMODIFIER GLconstant GL_ALPHA_MIN_SGIX = 0x8320;
AXLGLFLCONSTMODIFIER GLconstant GL_ALPHA_MAX_SGIX = 0x8321;
// GL_SGIX_blend_alpha_minmax

// GL_SGIX_calligraphic_fragment
AXLGLFLAPI bool GL_SGIX_calligraphic_fragment;
AXLGLFLCONSTMODIFIER GLconstant GL_CALLIGRAPHIC_FRAGMENT_SGIX = 0x8183;
// GL_SGIX_calligraphic_fragment

// GL_SGIX_clipmap
AXLGLFLAPI bool GL_SGIX_clipmap;
AXLGLFLCONSTMODIFIER GLconstant GL_LINEAR_CLIPMAP_LINEAR_SGIX = 0x8170;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_CLIPMAP_CENTER_SGIX = 0x8171;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_CLIPMAP_FRAME_SGIX = 0x8172;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_CLIPMAP_OFFSET_SGIX = 0x8173;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_CLIPMAP_VIRTUAL_DEPTH_SGIX = 0x8174;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_CLIPMAP_LOD_OFFSET_SGIX = 0x8175;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_CLIPMAP_DEPTH_SGIX = 0x8176;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_CLIPMAP_DEPTH_SGIX = 0x8177;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_CLIPMAP_VIRTUAL_DEPTH_SGIX = 0x8178;
AXLGLFLCONSTMODIFIER GLconstant GL_NEAREST_CLIPMAP_NEAREST_SGIX = 0x844D;
AXLGLFLCONSTMODIFIER GLconstant GL_NEAREST_CLIPMAP_LINEAR_SGIX = 0x844E;
AXLGLFLCONSTMODIFIER GLconstant GL_LINEAR_CLIPMAP_NEAREST_SGIX = 0x844F;
// GL_SGIX_clipmap

// GL_SGIX_convolution_accuracy
AXLGLFLAPI bool GL_SGIX_convolution_accuracy;
AXLGLFLCONSTMODIFIER GLconstant GL_CONVOLUTION_HINT_SGIX = 0x8316;
// GL_SGIX_convolution_accuracy

// GL_SGIX_depth_pass_instrument
AXLGLFLAPI bool GL_SGIX_depth_pass_instrument;
// GL_SGIX_depth_pass_instrument

// GL_SGIX_depth_texture
AXLGLFLAPI bool GL_SGIX_depth_texture;
AXLGLFLCONSTMODIFIER GLconstant GL_DEPTH_COMPONENT16_SGIX = 0x81A5;
AXLGLFLCONSTMODIFIER GLconstant GL_DEPTH_COMPONENT24_SGIX = 0x81A6;
AXLGLFLCONSTMODIFIER GLconstant GL_DEPTH_COMPONENT32_SGIX = 0x81A7;
// GL_SGIX_depth_texture

// GL_SGIX_flush_raster
AXLGLFLAPI bool GL_SGIX_flush_raster;
typedef void (APIENTRYP PFNGLFLUSHRASTERSGIXPROC) (void);
// GL_SGIX_flush_raster

// GL_SGIX_fog_offset
AXLGLFLAPI bool GL_SGIX_fog_offset;
AXLGLFLCONSTMODIFIER GLconstant GL_FOG_OFFSET_SGIX = 0x8198;
AXLGLFLCONSTMODIFIER GLconstant GL_FOG_OFFSET_VALUE_SGIX = 0x8199;
// GL_SGIX_fog_offset

// GL_SGIX_fragment_lighting
AXLGLFLAPI bool GL_SGIX_fragment_lighting;
AXLGLFLCONSTMODIFIER GLconstant GL_FRAGMENT_LIGHTING_SGIX = 0x8400;
AXLGLFLCONSTMODIFIER GLconstant GL_FRAGMENT_COLOR_MATERIAL_SGIX = 0x8401;
AXLGLFLCONSTMODIFIER GLconstant GL_FRAGMENT_COLOR_MATERIAL_FACE_SGIX = 0x8402;
AXLGLFLCONSTMODIFIER GLconstant GL_FRAGMENT_COLOR_MATERIAL_PARAMETER_SGIX = 0x8403;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_FRAGMENT_LIGHTS_SGIX = 0x8404;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_ACTIVE_LIGHTS_SGIX = 0x8405;
AXLGLFLCONSTMODIFIER GLconstant GL_CURRENT_RASTER_NORMAL_SGIX = 0x8406;
AXLGLFLCONSTMODIFIER GLconstant GL_LIGHT_ENV_MODE_SGIX = 0x8407;
AXLGLFLCONSTMODIFIER GLconstant GL_FRAGMENT_LIGHT_MODEL_LOCAL_VIEWER_SGIX = 0x8408;
AXLGLFLCONSTMODIFIER GLconstant GL_FRAGMENT_LIGHT_MODEL_TWO_SIDE_SGIX = 0x8409;
AXLGLFLCONSTMODIFIER GLconstant GL_FRAGMENT_LIGHT_MODEL_AMBIENT_SGIX = 0x840A;
AXLGLFLCONSTMODIFIER GLconstant GL_FRAGMENT_LIGHT_MODEL_NORMAL_INTERPOLATION_SGIX = 0x840B;
AXLGLFLCONSTMODIFIER GLconstant GL_FRAGMENT_LIGHT0_SGIX = 0x840C;
AXLGLFLCONSTMODIFIER GLconstant GL_FRAGMENT_LIGHT1_SGIX = 0x840D;
AXLGLFLCONSTMODIFIER GLconstant GL_FRAGMENT_LIGHT2_SGIX = 0x840E;
AXLGLFLCONSTMODIFIER GLconstant GL_FRAGMENT_LIGHT3_SGIX = 0x840F;
AXLGLFLCONSTMODIFIER GLconstant GL_FRAGMENT_LIGHT4_SGIX = 0x8410;
AXLGLFLCONSTMODIFIER GLconstant GL_FRAGMENT_LIGHT5_SGIX = 0x8411;
AXLGLFLCONSTMODIFIER GLconstant GL_FRAGMENT_LIGHT6_SGIX = 0x8412;
AXLGLFLCONSTMODIFIER GLconstant GL_FRAGMENT_LIGHT7_SGIX = 0x8413;
typedef void (APIENTRYP PFNGLFRAGMENTCOLORMATERIALSGIXPROC) (GLenum face, GLenum mode);
typedef void (APIENTRYP PFNGLFRAGMENTLIGHTFSGIXPROC) (GLenum light, GLenum pname, GLfloat param);
typedef void (APIENTRYP PFNGLFRAGMENTLIGHTFVSGIXPROC) (GLenum light, GLenum pname, const GLfloat *params);
typedef void (APIENTRYP PFNGLFRAGMENTLIGHTISGIXPROC) (GLenum light, GLenum pname, GLint param);
typedef void (APIENTRYP PFNGLFRAGMENTLIGHTIVSGIXPROC) (GLenum light, GLenum pname, const GLint *params);
typedef void (APIENTRYP PFNGLFRAGMENTLIGHTMODELFSGIXPROC) (GLenum pname, GLfloat param);
typedef void (APIENTRYP PFNGLFRAGMENTLIGHTMODELFVSGIXPROC) (GLenum pname, const GLfloat *params);
typedef void (APIENTRYP PFNGLFRAGMENTLIGHTMODELISGIXPROC) (GLenum pname, GLint param);
typedef void (APIENTRYP PFNGLFRAGMENTLIGHTMODELIVSGIXPROC) (GLenum pname, const GLint *params);
typedef void (APIENTRYP PFNGLFRAGMENTMATERIALFSGIXPROC) (GLenum face, GLenum pname, GLfloat param);
typedef void (APIENTRYP PFNGLFRAGMENTMATERIALFVSGIXPROC) (GLenum face, GLenum pname, const GLfloat *params);
typedef void (APIENTRYP PFNGLFRAGMENTMATERIALISGIXPROC) (GLenum face, GLenum pname, GLint param);
typedef void (APIENTRYP PFNGLFRAGMENTMATERIALIVSGIXPROC) (GLenum face, GLenum pname, const GLint *params);
typedef void (APIENTRYP PFNGLGETFRAGMENTLIGHTFVSGIXPROC) (GLenum light, GLenum pname, GLfloat *params);
typedef void (APIENTRYP PFNGLGETFRAGMENTLIGHTIVSGIXPROC) (GLenum light, GLenum pname, GLint *params);
typedef void (APIENTRYP PFNGLGETFRAGMENTMATERIALFVSGIXPROC) (GLenum face, GLenum pname, GLfloat *params);
typedef void (APIENTRYP PFNGLGETFRAGMENTMATERIALIVSGIXPROC) (GLenum face, GLenum pname, GLint *params);
typedef void (APIENTRYP PFNGLLIGHTENVISGIXPROC) (GLenum pname, GLint param);
// GL_SGIX_fragment_lighting

// GL_SGIX_framezoom
AXLGLFLAPI bool GL_SGIX_framezoom;
AXLGLFLCONSTMODIFIER GLconstant GL_FRAMEZOOM_SGIX = 0x818B;
AXLGLFLCONSTMODIFIER GLconstant GL_FRAMEZOOM_FACTOR_SGIX = 0x818C;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_FRAMEZOOM_FACTOR_SGIX = 0x818D;
typedef void (APIENTRYP PFNGLFRAMEZOOMSGIXPROC) (GLint factor);
// GL_SGIX_framezoom

// GL_SGIX_igloo_interface
AXLGLFLAPI bool GL_SGIX_igloo_interface;
typedef void (APIENTRYP PFNGLIGLOOINTERFACESGIXPROC) (GLenum pname, const void *params);
// GL_SGIX_igloo_interface

// GL_SGIX_instruments
AXLGLFLAPI bool GL_SGIX_instruments;
AXLGLFLCONSTMODIFIER GLconstant GL_INSTRUMENT_BUFFER_POINTER_SGIX = 0x8180;
AXLGLFLCONSTMODIFIER GLconstant GL_INSTRUMENT_MEASUREMENTS_SGIX = 0x8181;
typedef GLint (APIENTRYP PFNGLGETINSTRUMENTSSGIXPROC) (void);
typedef void (APIENTRYP PFNGLINSTRUMENTSBUFFERSGIXPROC) (GLsizei size, GLint *buffer);
typedef GLint (APIENTRYP PFNGLPOLLINSTRUMENTSSGIXPROC) (GLint *marker_p);
typedef void (APIENTRYP PFNGLREADINSTRUMENTSSGIXPROC) (GLint marker);
typedef void (APIENTRYP PFNGLSTARTINSTRUMENTSSGIXPROC) (void);
typedef void (APIENTRYP PFNGLSTOPINSTRUMENTSSGIXPROC) (GLint marker);
// GL_SGIX_instruments

// GL_SGIX_interlace
AXLGLFLAPI bool GL_SGIX_interlace;
AXLGLFLCONSTMODIFIER GLconstant GL_INTERLACE_SGIX = 0x8094;
// GL_SGIX_interlace

// GL_SGIX_ir_instrument1
AXLGLFLAPI bool GL_SGIX_ir_instrument1;
AXLGLFLCONSTMODIFIER GLconstant GL_IR_INSTRUMENT1_SGIX = 0x817F;
// GL_SGIX_ir_instrument1

// GL_SGIX_list_priority
AXLGLFLAPI bool GL_SGIX_list_priority;
AXLGLFLCONSTMODIFIER GLconstant GL_LIST_PRIORITY_SGIX = 0x8182;
typedef void (APIENTRYP PFNGLGETLISTPARAMETERFVSGIXPROC) (GLuint list, GLenum pname, GLfloat *params);
typedef void (APIENTRYP PFNGLGETLISTPARAMETERIVSGIXPROC) (GLuint list, GLenum pname, GLint *params);
typedef void (APIENTRYP PFNGLLISTPARAMETERFSGIXPROC) (GLuint list, GLenum pname, GLfloat param);
typedef void (APIENTRYP PFNGLLISTPARAMETERFVSGIXPROC) (GLuint list, GLenum pname, const GLfloat *params);
typedef void (APIENTRYP PFNGLLISTPARAMETERISGIXPROC) (GLuint list, GLenum pname, GLint param);
typedef void (APIENTRYP PFNGLLISTPARAMETERIVSGIXPROC) (GLuint list, GLenum pname, const GLint *params);
// GL_SGIX_list_priority

// GL_SGIX_pixel_texture
AXLGLFLAPI bool GL_SGIX_pixel_texture;
AXLGLFLCONSTMODIFIER GLconstant GL_PIXEL_TEX_GEN_SGIX = 0x8139;
AXLGLFLCONSTMODIFIER GLconstant GL_PIXEL_TEX_GEN_MODE_SGIX = 0x832B;
typedef void (APIENTRYP PFNGLPIXELTEXGENSGIXPROC) (GLenum mode);
// GL_SGIX_pixel_texture

// GL_SGIX_pixel_tiles
AXLGLFLAPI bool GL_SGIX_pixel_tiles;
AXLGLFLCONSTMODIFIER GLconstant GL_PIXEL_TILE_BEST_ALIGNMENT_SGIX = 0x813E;
AXLGLFLCONSTMODIFIER GLconstant GL_PIXEL_TILE_CACHE_INCREMENT_SGIX = 0x813F;
AXLGLFLCONSTMODIFIER GLconstant GL_PIXEL_TILE_WIDTH_SGIX = 0x8140;
AXLGLFLCONSTMODIFIER GLconstant GL_PIXEL_TILE_HEIGHT_SGIX = 0x8141;
AXLGLFLCONSTMODIFIER GLconstant GL_PIXEL_TILE_GRID_WIDTH_SGIX = 0x8142;
AXLGLFLCONSTMODIFIER GLconstant GL_PIXEL_TILE_GRID_HEIGHT_SGIX = 0x8143;
AXLGLFLCONSTMODIFIER GLconstant GL_PIXEL_TILE_GRID_DEPTH_SGIX = 0x8144;
AXLGLFLCONSTMODIFIER GLconstant GL_PIXEL_TILE_CACHE_SIZE_SGIX = 0x8145;
// GL_SGIX_pixel_tiles

// GL_SGIX_polynomial_ffd
AXLGLFLAPI bool GL_SGIX_polynomial_ffd;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_DEFORMATION_BIT_SGIX = 0x000000;01
AXLGLFLCONSTMODIFIER GLconstant GL_GEOMETRY_DEFORMATION_BIT_SGIX = 0x000000;02
AXLGLFLCONSTMODIFIER GLconstant GL_GEOMETRY_DEFORMATION_SGIX = 0x8194;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_DEFORMATION_SGIX = 0x8195;
AXLGLFLCONSTMODIFIER GLconstant GL_DEFORMATIONS_MASK_SGIX = 0x8196;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_DEFORMATION_ORDER_SGIX = 0x8197;
typedef void (APIENTRYP PFNGLDEFORMATIONMAP3DSGIXPROC) (GLenum target, GLdouble u1, GLdouble u2, GLint ustride, GLint uorder, GLdouble v1, GLdouble v2, GLint vstride, GLint vorder, GLdouble w1, GLdouble w2, GLint wstride, GLint worder, const GLdouble *points);
typedef void (APIENTRYP PFNGLDEFORMATIONMAP3FSGIXPROC) (GLenum target, GLfloat u1, GLfloat u2, GLint ustride, GLint uorder, GLfloat v1, GLfloat v2, GLint vstride, GLint vorder, GLfloat w1, GLfloat w2, GLint wstride, GLint worder, const GLfloat *points);
typedef void (APIENTRYP PFNGLDEFORMSGIXPROC) (GLbitfield mask);
typedef void (APIENTRYP PFNGLLOADIDENTITYDEFORMATIONMAPSGIXPROC) (GLbitfield mask);
// GL_SGIX_polynomial_ffd

// GL_SGIX_reference_plane
AXLGLFLAPI bool GL_SGIX_reference_plane;
AXLGLFLCONSTMODIFIER GLconstant GL_REFERENCE_PLANE_SGIX = 0x817D;
AXLGLFLCONSTMODIFIER GLconstant GL_REFERENCE_PLANE_EQUATION_SGIX = 0x817E;
typedef void (APIENTRYP PFNGLREFERENCEPLANESGIXPROC) (const GLdouble *equation);
// GL_SGIX_reference_plane

// GL_SGIX_resample
AXLGLFLAPI bool GL_SGIX_resample;
AXLGLFLCONSTMODIFIER GLconstant GL_PACK_RESAMPLE_SGIX = 0x842E;
AXLGLFLCONSTMODIFIER GLconstant GL_UNPACK_RESAMPLE_SGIX = 0x842F;
AXLGLFLCONSTMODIFIER GLconstant GL_RESAMPLE_REPLICATE_SGIX = 0x8433;
AXLGLFLCONSTMODIFIER GLconstant GL_RESAMPLE_ZERO_FILL_SGIX = 0x8434;
AXLGLFLCONSTMODIFIER GLconstant GL_RESAMPLE_DECIMATE_SGIX = 0x8430;
// GL_SGIX_resample

// GL_SGIX_scalebias_hint
AXLGLFLAPI bool GL_SGIX_scalebias_hint;
AXLGLFLCONSTMODIFIER GLconstant GL_SCALEBIAS_HINT_SGIX = 0x8322;
// GL_SGIX_scalebias_hint

// GL_SGIX_shadow
AXLGLFLAPI bool GL_SGIX_shadow;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_COMPARE_SGIX = 0x819A;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_COMPARE_OPERATOR_SGIX = 0x819B;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_LEQUAL_R_SGIX = 0x819C;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_GEQUAL_R_SGIX = 0x819D;
// GL_SGIX_shadow

// GL_SGIX_shadow_ambient
AXLGLFLAPI bool GL_SGIX_shadow_ambient;
AXLGLFLCONSTMODIFIER GLconstant GL_SHADOW_AMBIENT_SGIX = 0x80BF;
// GL_SGIX_shadow_ambient

// GL_SGIX_sprite
AXLGLFLAPI bool GL_SGIX_sprite;
AXLGLFLCONSTMODIFIER GLconstant GL_SPRITE_SGIX = 0x8148;
AXLGLFLCONSTMODIFIER GLconstant GL_SPRITE_MODE_SGIX = 0x8149;
AXLGLFLCONSTMODIFIER GLconstant GL_SPRITE_AXIS_SGIX = 0x814A;
AXLGLFLCONSTMODIFIER GLconstant GL_SPRITE_TRANSLATION_SGIX = 0x814B;
AXLGLFLCONSTMODIFIER GLconstant GL_SPRITE_AXIAL_SGIX = 0x814C;
AXLGLFLCONSTMODIFIER GLconstant GL_SPRITE_OBJECT_ALIGNED_SGIX = 0x814D;
AXLGLFLCONSTMODIFIER GLconstant GL_SPRITE_EYE_ALIGNED_SGIX = 0x814E;
typedef void (APIENTRYP PFNGLSPRITEPARAMETERFSGIXPROC) (GLenum pname, GLfloat param);
typedef void (APIENTRYP PFNGLSPRITEPARAMETERFVSGIXPROC) (GLenum pname, const GLfloat *params);
typedef void (APIENTRYP PFNGLSPRITEPARAMETERISGIXPROC) (GLenum pname, GLint param);
typedef void (APIENTRYP PFNGLSPRITEPARAMETERIVSGIXPROC) (GLenum pname, const GLint *params);
// GL_SGIX_sprite

// GL_SGIX_subsample
AXLGLFLAPI bool GL_SGIX_subsample;
AXLGLFLCONSTMODIFIER GLconstant GL_PACK_SUBSAMPLE_RATE_SGIX = 0x85A0;
AXLGLFLCONSTMODIFIER GLconstant GL_UNPACK_SUBSAMPLE_RATE_SGIX = 0x85A1;
AXLGLFLCONSTMODIFIER GLconstant GL_PIXEL_SUBSAMPLE_4444_SGIX = 0x85A2;
AXLGLFLCONSTMODIFIER GLconstant GL_PIXEL_SUBSAMPLE_2424_SGIX = 0x85A3;
AXLGLFLCONSTMODIFIER GLconstant GL_PIXEL_SUBSAMPLE_4242_SGIX = 0x85A4;
// GL_SGIX_subsample

// GL_SGIX_tag_sample_buffer
AXLGLFLAPI bool GL_SGIX_tag_sample_buffer;
typedef void (APIENTRYP PFNGLTAGSAMPLEBUFFERSGIXPROC) (void);
// GL_SGIX_tag_sample_buffer

// GL_SGIX_texture_add_env
AXLGLFLAPI bool GL_SGIX_texture_add_env;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_ENV_BIAS_SGIX = 0x80BE;
// GL_SGIX_texture_add_env

// GL_SGIX_texture_coordinate_clamp
AXLGLFLAPI bool GL_SGIX_texture_coordinate_clamp;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_MAX_CLAMP_S_SGIX = 0x8369;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_MAX_CLAMP_T_SGIX = 0x836A;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_MAX_CLAMP_R_SGIX = 0x836B;
// GL_SGIX_texture_coordinate_clamp

// GL_SGIX_texture_lod_bias
AXLGLFLAPI bool GL_SGIX_texture_lod_bias;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_LOD_BIAS_S_SGIX = 0x818E;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_LOD_BIAS_T_SGIX = 0x818F;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_LOD_BIAS_R_SGIX = 0x8190;
// GL_SGIX_texture_lod_bias

// GL_SGIX_texture_multi_buffer
AXLGLFLAPI bool GL_SGIX_texture_multi_buffer;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_MULTI_BUFFER_HINT_SGIX = 0x812E;
// GL_SGIX_texture_multi_buffer

// GL_SGIX_texture_scale_bias
AXLGLFLAPI bool GL_SGIX_texture_scale_bias;
AXLGLFLCONSTMODIFIER GLconstant GL_POST_TEXTURE_FILTER_BIAS_SGIX = 0x8179;
AXLGLFLCONSTMODIFIER GLconstant GL_POST_TEXTURE_FILTER_SCALE_SGIX = 0x817A;
AXLGLFLCONSTMODIFIER GLconstant GL_POST_TEXTURE_FILTER_BIAS_RANGE_SGIX = 0x817B;
AXLGLFLCONSTMODIFIER GLconstant GL_POST_TEXTURE_FILTER_SCALE_RANGE_SGIX = 0x817C;
// GL_SGIX_texture_scale_bias

// GL_SGIX_vertex_preclip
AXLGLFLAPI bool GL_SGIX_vertex_preclip;
AXLGLFLCONSTMODIFIER GLconstant GL_VERTEX_PRECLIP_SGIX = 0x83EE;
AXLGLFLCONSTMODIFIER GLconstant GL_VERTEX_PRECLIP_HINT_SGIX = 0x83EF;
// GL_SGIX_vertex_preclip

// GL_SGIX_ycrcb
AXLGLFLAPI bool GL_SGIX_ycrcb;
AXLGLFLCONSTMODIFIER GLconstant GL_YCRCB_422_SGIX = 0x81BB;
AXLGLFLCONSTMODIFIER GLconstant GL_YCRCB_444_SGIX = 0x81BC;
// GL_SGIX_ycrcb

// GL_SGIX_ycrcb_subsample
AXLGLFLAPI bool GL_SGIX_ycrcb_subsample;
// GL_SGIX_ycrcb_subsample

// GL_SGIX_ycrcba
AXLGLFLAPI bool GL_SGIX_ycrcba;
AXLGLFLCONSTMODIFIER GLconstant GL_YCRCB_SGIX = 0x8318;
AXLGLFLCONSTMODIFIER GLconstant GL_YCRCBA_SGIX = 0x8319;
// GL_SGIX_ycrcba

} // namespace GLSGIX

namespace GLSGI {

// GL_SGI_color_matrix
AXLGLFLAPI bool GL_SGI_color_matrix;
AXLGLFLCONSTMODIFIER GLconstant GL_COLOR_MATRIX_SGI = 0x80B1;
AXLGLFLCONSTMODIFIER GLconstant GL_COLOR_MATRIX_STACK_DEPTH_SGI = 0x80B2;
AXLGLFLCONSTMODIFIER GLconstant GL_MAX_COLOR_MATRIX_STACK_DEPTH_SGI = 0x80B3;
AXLGLFLCONSTMODIFIER GLconstant GL_POST_COLOR_MATRIX_RED_SCALE_SGI = 0x80B4;
AXLGLFLCONSTMODIFIER GLconstant GL_POST_COLOR_MATRIX_GREEN_SCALE_SGI = 0x80B5;
AXLGLFLCONSTMODIFIER GLconstant GL_POST_COLOR_MATRIX_BLUE_SCALE_SGI = 0x80B6;
AXLGLFLCONSTMODIFIER GLconstant GL_POST_COLOR_MATRIX_ALPHA_SCALE_SGI = 0x80B7;
AXLGLFLCONSTMODIFIER GLconstant GL_POST_COLOR_MATRIX_RED_BIAS_SGI = 0x80B8;
AXLGLFLCONSTMODIFIER GLconstant GL_POST_COLOR_MATRIX_GREEN_BIAS_SGI = 0x80B9;
AXLGLFLCONSTMODIFIER GLconstant GL_POST_COLOR_MATRIX_BLUE_BIAS_SGI = 0x80BA;
AXLGLFLCONSTMODIFIER GLconstant GL_POST_COLOR_MATRIX_ALPHA_BIAS_SGI = 0x80BB;
// GL_SGI_color_matrix

// GL_SGI_color_table
AXLGLFLAPI bool GL_SGI_color_table;
AXLGLFLCONSTMODIFIER GLconstant GL_COLOR_TABLE_SGI = 0x80D0;
AXLGLFLCONSTMODIFIER GLconstant GL_POST_CONVOLUTION_COLOR_TABLE_SGI = 0x80D1;
AXLGLFLCONSTMODIFIER GLconstant GL_POST_COLOR_MATRIX_COLOR_TABLE_SGI = 0x80D2;
AXLGLFLCONSTMODIFIER GLconstant GL_PROXY_COLOR_TABLE_SGI = 0x80D3;
AXLGLFLCONSTMODIFIER GLconstant GL_PROXY_POST_CONVOLUTION_COLOR_TABLE_SGI = 0x80D4;
AXLGLFLCONSTMODIFIER GLconstant GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE_SGI = 0x80D5;
AXLGLFLCONSTMODIFIER GLconstant GL_COLOR_TABLE_SCALE_SGI = 0x80D6;
AXLGLFLCONSTMODIFIER GLconstant GL_COLOR_TABLE_BIAS_SGI = 0x80D7;
AXLGLFLCONSTMODIFIER GLconstant GL_COLOR_TABLE_FORMAT_SGI = 0x80D8;
AXLGLFLCONSTMODIFIER GLconstant GL_COLOR_TABLE_WIDTH_SGI = 0x80D9;
AXLGLFLCONSTMODIFIER GLconstant GL_COLOR_TABLE_RED_SIZE_SGI = 0x80DA;
AXLGLFLCONSTMODIFIER GLconstant GL_COLOR_TABLE_GREEN_SIZE_SGI = 0x80DB;
AXLGLFLCONSTMODIFIER GLconstant GL_COLOR_TABLE_BLUE_SIZE_SGI = 0x80DC;
AXLGLFLCONSTMODIFIER GLconstant GL_COLOR_TABLE_ALPHA_SIZE_SGI = 0x80DD;
AXLGLFLCONSTMODIFIER GLconstant GL_COLOR_TABLE_LUMINANCE_SIZE_SGI = 0x80DE;
AXLGLFLCONSTMODIFIER GLconstant GL_COLOR_TABLE_INTENSITY_SIZE_SGI = 0x80DF;
typedef void (APIENTRYP PFNGLCOLORTABLESGIPROC) (GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const void *table);
typedef void (APIENTRYP PFNGLCOLORTABLEPARAMETERFVSGIPROC) (GLenum target, GLenum pname, const GLfloat *params);
typedef void (APIENTRYP PFNGLCOLORTABLEPARAMETERIVSGIPROC) (GLenum target, GLenum pname, const GLint *params);
typedef void (APIENTRYP PFNGLCOPYCOLORTABLESGIPROC) (GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width);
typedef void (APIENTRYP PFNGLGETCOLORTABLESGIPROC) (GLenum target, GLenum format, GLenum type, void *table);
typedef void (APIENTRYP PFNGLGETCOLORTABLEPARAMETERFVSGIPROC) (GLenum target, GLenum pname, GLfloat *params);
typedef void (APIENTRYP PFNGLGETCOLORTABLEPARAMETERIVSGIPROC) (GLenum target, GLenum pname, GLint *params);
// GL_SGI_color_table

// GL_SGI_texture_color_table
AXLGLFLAPI bool GL_SGI_texture_color_table;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_COLOR_TABLE_SGI = 0x80BC;
AXLGLFLCONSTMODIFIER GLconstant GL_PROXY_TEXTURE_COLOR_TABLE_SGI = 0x80BD;
// GL_SGI_texture_color_table

} // namespace GLSGI

namespace GLSUNX {

// GL_SUNX_constant_data
AXLGLFLAPI bool GL_SUNX_constant_data;
AXLGLFLCONSTMODIFIER GLconstant GL_UNPACK_CONSTANT_DATA_SUNX = 0x81D5;
AXLGLFLCONSTMODIFIER GLconstant GL_TEXTURE_CONSTANT_DATA_SUNX = 0x81D6;
typedef void (APIENTRYP PFNGLFINISHTEXTURESUNXPROC) (void);
// GL_SUNX_constant_data

} // namespace GLSUNX

namespace GLSUN {

// GL_SUN_convolution_border_modes
AXLGLFLAPI bool GL_SUN_convolution_border_modes;
AXLGLFLCONSTMODIFIER GLconstant GL_WRAP_BORDER_SUN = 0x81D4;
// GL_SUN_convolution_border_modes

// GL_SUN_global_alpha
AXLGLFLAPI bool GL_SUN_global_alpha;
AXLGLFLCONSTMODIFIER GLconstant GL_GLOBAL_ALPHA_SUN = 0x81D9;
AXLGLFLCONSTMODIFIER GLconstant GL_GLOBAL_ALPHA_FACTOR_SUN = 0x81DA;
typedef void (APIENTRYP PFNGLGLOBALALPHAFACTORBSUNPROC) (GLbyte factor);
typedef void (APIENTRYP PFNGLGLOBALALPHAFACTORSSUNPROC) (GLshort factor);
typedef void (APIENTRYP PFNGLGLOBALALPHAFACTORISUNPROC) (GLint factor);
typedef void (APIENTRYP PFNGLGLOBALALPHAFACTORFSUNPROC) (GLfloat factor);
typedef void (APIENTRYP PFNGLGLOBALALPHAFACTORDSUNPROC) (GLdouble factor);
typedef void (APIENTRYP PFNGLGLOBALALPHAFACTORUBSUNPROC) (GLubyte factor);
typedef void (APIENTRYP PFNGLGLOBALALPHAFACTORUSSUNPROC) (GLushort factor);
typedef void (APIENTRYP PFNGLGLOBALALPHAFACTORUISUNPROC) (GLuint factor);
// GL_SUN_global_alpha

// GL_SUN_mesh_array
AXLGLFLAPI bool GL_SUN_mesh_array;
AXLGLFLCONSTMODIFIER GLconstant GL_QUAD_MESH_SUN = 0x8614;
AXLGLFLCONSTMODIFIER GLconstant GL_TRIANGLE_MESH_SUN = 0x8615;
typedef void (APIENTRYP PFNGLDRAWMESHARRAYSSUNPROC) (GLenum mode, GLint first, GLsizei count, GLsizei width);
// GL_SUN_mesh_array

// GL_SUN_slice_accum
AXLGLFLAPI bool GL_SUN_slice_accum;
AXLGLFLCONSTMODIFIER GLconstant GL_SLICE_ACCUM_SUN = 0x85CC;
// GL_SUN_slice_accum

// GL_SUN_triangle_list
AXLGLFLAPI bool GL_SUN_triangle_list;
AXLGLFLCONSTMODIFIER GLconstant GL_RESTART_SUN = 0x0001;
AXLGLFLCONSTMODIFIER GLconstant GL_REPLACE_MIDDLE_SUN = 0x0002;
AXLGLFLCONSTMODIFIER GLconstant GL_REPLACE_OLDEST_SUN = 0x0003;
AXLGLFLCONSTMODIFIER GLconstant GL_TRIANGLE_LIST_SUN = 0x81D7;
AXLGLFLCONSTMODIFIER GLconstant GL_REPLACEMENT_CODE_SUN = 0x81D8;
AXLGLFLCONSTMODIFIER GLconstant GL_REPLACEMENT_CODE_ARRAY_SUN = 0x85C0;
AXLGLFLCONSTMODIFIER GLconstant GL_REPLACEMENT_CODE_ARRAY_TYPE_SUN = 0x85C1;
AXLGLFLCONSTMODIFIER GLconstant GL_REPLACEMENT_CODE_ARRAY_STRIDE_SUN = 0x85C2;
AXLGLFLCONSTMODIFIER GLconstant GL_REPLACEMENT_CODE_ARRAY_POINTER_SUN = 0x85C3;
AXLGLFLCONSTMODIFIER GLconstant GL_R1UI_V3F_SUN = 0x85C4;
AXLGLFLCONSTMODIFIER GLconstant GL_R1UI_C4UB_V3F_SUN = 0x85C5;
AXLGLFLCONSTMODIFIER GLconstant GL_R1UI_C3F_V3F_SUN = 0x85C6;
AXLGLFLCONSTMODIFIER GLconstant GL_R1UI_N3F_V3F_SUN = 0x85C7;
AXLGLFLCONSTMODIFIER GLconstant GL_R1UI_C4F_N3F_V3F_SUN = 0x85C8;
AXLGLFLCONSTMODIFIER GLconstant GL_R1UI_T2F_V3F_SUN = 0x85C9;
AXLGLFLCONSTMODIFIER GLconstant GL_R1UI_T2F_N3F_V3F_SUN = 0x85CA;
AXLGLFLCONSTMODIFIER GLconstant GL_R1UI_T2F_C4F_N3F_V3F_SUN = 0x85CB;
typedef void (APIENTRYP PFNGLREPLACEMENTCODEUISUNPROC) (GLuint code);
typedef void (APIENTRYP PFNGLREPLACEMENTCODEUSSUNPROC) (GLushort code);
typedef void (APIENTRYP PFNGLREPLACEMENTCODEUBSUNPROC) (GLubyte code);
typedef void (APIENTRYP PFNGLREPLACEMENTCODEUIVSUNPROC) (const GLuint *code);
typedef void (APIENTRYP PFNGLREPLACEMENTCODEUSVSUNPROC) (const GLushort *code);
typedef void (APIENTRYP PFNGLREPLACEMENTCODEUBVSUNPROC) (const GLubyte *code);
typedef void (APIENTRYP PFNGLREPLACEMENTCODEPOINTERSUNPROC) (GLenum type, GLsizei stride, const void **pointer);
// GL_SUN_triangle_list

// GL_SUN_vertex
AXLGLFLAPI bool GL_SUN_vertex;
typedef void (APIENTRYP PFNGLCOLOR4UBVERTEX2FSUNPROC) (GLubyte r, GLubyte g, GLubyte b, GLubyte a, GLfloat x, GLfloat y);
typedef void (APIENTRYP PFNGLCOLOR4UBVERTEX2FVSUNPROC) (const GLubyte *c, const GLfloat *v);
typedef void (APIENTRYP PFNGLCOLOR4UBVERTEX3FSUNPROC) (GLubyte r, GLubyte g, GLubyte b, GLubyte a, GLfloat x, GLfloat y, GLfloat z);
typedef void (APIENTRYP PFNGLCOLOR4UBVERTEX3FVSUNPROC) (const GLubyte *c, const GLfloat *v);
typedef void (APIENTRYP PFNGLCOLOR3FVERTEX3FSUNPROC) (GLfloat r, GLfloat g, GLfloat b, GLfloat x, GLfloat y, GLfloat z);
typedef void (APIENTRYP PFNGLCOLOR3FVERTEX3FVSUNPROC) (const GLfloat *c, const GLfloat *v);
typedef void (APIENTRYP PFNGLNORMAL3FVERTEX3FSUNPROC) (GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);
typedef void (APIENTRYP PFNGLNORMAL3FVERTEX3FVSUNPROC) (const GLfloat *n, const GLfloat *v);
typedef void (APIENTRYP PFNGLCOLOR4FNORMAL3FVERTEX3FSUNPROC) (GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);
typedef void (APIENTRYP PFNGLCOLOR4FNORMAL3FVERTEX3FVSUNPROC) (const GLfloat *c, const GLfloat *n, const GLfloat *v);
typedef void (APIENTRYP PFNGLTEXCOORD2FVERTEX3FSUNPROC) (GLfloat s, GLfloat t, GLfloat x, GLfloat y, GLfloat z);
typedef void (APIENTRYP PFNGLTEXCOORD2FVERTEX3FVSUNPROC) (const GLfloat *tc, const GLfloat *v);
typedef void (APIENTRYP PFNGLTEXCOORD4FVERTEX4FSUNPROC) (GLfloat s, GLfloat t, GLfloat p, GLfloat q, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
typedef void (APIENTRYP PFNGLTEXCOORD4FVERTEX4FVSUNPROC) (const GLfloat *tc, const GLfloat *v);
typedef void (APIENTRYP PFNGLTEXCOORD2FCOLOR4UBVERTEX3FSUNPROC) (GLfloat s, GLfloat t, GLubyte r, GLubyte g, GLubyte b, GLubyte a, GLfloat x, GLfloat y, GLfloat z);
typedef void (APIENTRYP PFNGLTEXCOORD2FCOLOR4UBVERTEX3FVSUNPROC) (const GLfloat *tc, const GLubyte *c, const GLfloat *v);
typedef void (APIENTRYP PFNGLTEXCOORD2FCOLOR3FVERTEX3FSUNPROC) (GLfloat s, GLfloat t, GLfloat r, GLfloat g, GLfloat b, GLfloat x, GLfloat y, GLfloat z);
typedef void (APIENTRYP PFNGLTEXCOORD2FCOLOR3FVERTEX3FVSUNPROC) (const GLfloat *tc, const GLfloat *c, const GLfloat *v);
typedef void (APIENTRYP PFNGLTEXCOORD2FNORMAL3FVERTEX3FSUNPROC) (GLfloat s, GLfloat t, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);
typedef void (APIENTRYP PFNGLTEXCOORD2FNORMAL3FVERTEX3FVSUNPROC) (const GLfloat *tc, const GLfloat *n, const GLfloat *v);
typedef void (APIENTRYP PFNGLTEXCOORD2FCOLOR4FNORMAL3FVERTEX3FSUNPROC) (GLfloat s, GLfloat t, GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);
typedef void (APIENTRYP PFNGLTEXCOORD2FCOLOR4FNORMAL3FVERTEX3FVSUNPROC) (const GLfloat *tc, const GLfloat *c, const GLfloat *n, const GLfloat *v);
typedef void (APIENTRYP PFNGLTEXCOORD4FCOLOR4FNORMAL3FVERTEX4FSUNPROC) (GLfloat s, GLfloat t, GLfloat p, GLfloat q, GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
typedef void (APIENTRYP PFNGLTEXCOORD4FCOLOR4FNORMAL3FVERTEX4FVSUNPROC) (const GLfloat *tc, const GLfloat *c, const GLfloat *n, const GLfloat *v);
typedef void (APIENTRYP PFNGLREPLACEMENTCODEUIVERTEX3FSUNPROC) (GLuint rc, GLfloat x, GLfloat y, GLfloat z);
typedef void (APIENTRYP PFNGLREPLACEMENTCODEUIVERTEX3FVSUNPROC) (const GLuint *rc, const GLfloat *v);
typedef void (APIENTRYP PFNGLREPLACEMENTCODEUICOLOR4UBVERTEX3FSUNPROC) (GLuint rc, GLubyte r, GLubyte g, GLubyte b, GLubyte a, GLfloat x, GLfloat y, GLfloat z);
typedef void (APIENTRYP PFNGLREPLACEMENTCODEUICOLOR4UBVERTEX3FVSUNPROC) (const GLuint *rc, const GLubyte *c, const GLfloat *v);
typedef void (APIENTRYP PFNGLREPLACEMENTCODEUICOLOR3FVERTEX3FSUNPROC) (GLuint rc, GLfloat r, GLfloat g, GLfloat b, GLfloat x, GLfloat y, GLfloat z);
typedef void (APIENTRYP PFNGLREPLACEMENTCODEUICOLOR3FVERTEX3FVSUNPROC) (const GLuint *rc, const GLfloat *c, const GLfloat *v);
typedef void (APIENTRYP PFNGLREPLACEMENTCODEUINORMAL3FVERTEX3FSUNPROC) (GLuint rc, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);
typedef void (APIENTRYP PFNGLREPLACEMENTCODEUINORMAL3FVERTEX3FVSUNPROC) (const GLuint *rc, const GLfloat *n, const GLfloat *v);
typedef void (APIENTRYP PFNGLREPLACEMENTCODEUICOLOR4FNORMAL3FVERTEX3FSUNPROC) (GLuint rc, GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);
typedef void (APIENTRYP PFNGLREPLACEMENTCODEUICOLOR4FNORMAL3FVERTEX3FVSUNPROC) (const GLuint *rc, const GLfloat *c, const GLfloat *n, const GLfloat *v);
typedef void (APIENTRYP PFNGLREPLACEMENTCODEUITEXCOORD2FVERTEX3FSUNPROC) (GLuint rc, GLfloat s, GLfloat t, GLfloat x, GLfloat y, GLfloat z);
typedef void (APIENTRYP PFNGLREPLACEMENTCODEUITEXCOORD2FVERTEX3FVSUNPROC) (const GLuint *rc, const GLfloat *tc, const GLfloat *v);
typedef void (APIENTRYP PFNGLREPLACEMENTCODEUITEXCOORD2FNORMAL3FVERTEX3FSUNPROC) (GLuint rc, GLfloat s, GLfloat t, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);
typedef void (APIENTRYP PFNGLREPLACEMENTCODEUITEXCOORD2FNORMAL3FVERTEX3FVSUNPROC) (const GLuint *rc, const GLfloat *tc, const GLfloat *n, const GLfloat *v);
typedef void (APIENTRYP PFNGLREPLACEMENTCODEUITEXCOORD2FCOLOR4FNORMAL3FVERTEX3FSUNPROC) (GLuint rc, GLfloat s, GLfloat t, GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);
typedef void (APIENTRYP PFNGLREPLACEMENTCODEUITEXCOORD2FCOLOR4FNORMAL3FVERTEX3FVSUNPROC) (const GLuint *rc, const GLfloat *tc, const GLfloat *c, const GLfloat *n, const GLfloat *v);
// GL_SUN_vertex

} // namespace GLSUN

namespace GLWIN {

// GL_WIN_phong_shading
AXLGLFLAPI bool GL_WIN_phong_shading;
AXLGLFLCONSTMODIFIER GLconstant GL_PHONG_WIN = 0x80EA;
AXLGLFLCONSTMODIFIER GLconstant GL_PHONG_HINT_WIN = 0x80EB;
// GL_WIN_phong_shading

// GL_WIN_specular_fog
AXLGLFLAPI bool GL_WIN_specular_fog;
AXLGLFLCONSTMODIFIER GLconstant GL_FOG_SPECULAR_TEXTURE_WIN = 0x80EC;
// GL_WIN_specular_fog

} // namespace GLWIN

} // namespace axl::glfl::glext
} // namespace axl::glfl
} // namespace axl